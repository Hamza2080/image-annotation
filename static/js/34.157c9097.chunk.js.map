{"version":3,"sources":["validators/validate.js","Form/TextInput.js","Form/PasswordInput.js","../node_modules/reactstrap/es/CardFooter.js","environment.js","services/HttpService.js","validators/confirmPassword.js","views/Pages/ResetPassword/ResetPassword.js"],"names":["minLengthValidator","value","minLength","length","requiredValidator","trim","emailValidator","test","String","toLowerCase","validate","rules","isValid","rule","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","TextInput","props","formControl","touched","valid","a","createElement","Object","assign","type","className","PasswordInput","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","CardFooter","Tag","attributes","classes","defaultProps","__webpack_exports__","apiUrl","login","_ref","asyncToGenerator","regenerator_default","mark","_callee","credentials","_ref2","post","wrap","_context","prev","next","axios","sent","data","abrupt","t0","response","stop","_x","apply","this","arguments","signUp","_ref3","_callee2","user","_ref4","_context2","_x2","forget","_ref5","_callee3","emailObj","_ref6","_context3","_x3","reset","_ref7","_callee4","_ref8","_context4","_x4","confirmPassValidate","passwordValue","confirmPassValue","ResetPassword","_this","_home_hamza_Desktop_ml_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_home_hamza_Desktop_ml_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_home_hamza_Desktop_ml_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","changeHandler","event","name","target","updatedControls","_home_hamza_Desktop_ml_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","state","formControls","updatedFormElement","validationRules","password","formIsValid","inputIdentifier","setState","submitResetForm","_home_hamza_Desktop_ml_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_hamza_Desktop_ml_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","formData","formElementId","res","preventDefault","console","log","isDanger","isSuccess","message","Message","history","push","token","match","params","email","placeholder","isRequired","repeatPassword","react__WEBPACK_IMPORTED_MODULE_8___default","role","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","md","lg","xl","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","resetMessage","reactstrap__WEBPACK_IMPORTED_MODULE_19__","onSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_22__","_Form_PasswordInput__WEBPACK_IMPORTED_MODULE_11__","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_23__","color","style","cursor","disabled","block","reactstrap__WEBPACK_IMPORTED_MODULE_24__","Component"],"mappings":"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","file":"static/js/34.157c9097.chunk.js","sourcesContent":["const validate = (value, rules) => {\n    let isValid = true;\n    \n    for (let rule in rules) {\n    \n      switch (rule) {\n          case 'minLength': isValid = isValid && minLengthValidator(value, rules[rule]); break;\n          \n          case 'isRequired': isValid = isValid && requiredValidator(value); break;\n              \n          case 'isEmail': isValid = isValid && emailValidator(value); break;\n          \n          default: isValid = true;\n      }\n  \n    }\n    \n    return isValid;\n  }\n  \n  \n  /**\n   * minLength Val\n   * @param  value \n   * @param  minLength\n   * @return          \n   */\n  const minLengthValidator = (value, minLength) => {\n      return value.length >= minLength;\n  }\n  \n  /**\n   * Check to confirm that feild is required\n   * \n   * @param  value \n   * @return       \n   */\n  const requiredValidator = value => {\n      return value.trim() !== '';\t\n  }\n  \n  /**\n   * Email validation\n   * \n   * @param value\n   * @return \n   */\n  const emailValidator = value => {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(value).toLowerCase());\n  }\n  \n  \n  \n  export default validate;\n  ","import React from \"react\";\n\nconst TextInput = props => {\n  let formControl = \"form-control\";\n\n  if (props.touched && !props.valid) {\n    formControl = \"form-control control-error\";\n  }\n  return (\n    <input type=\"text\" className={formControl} {...props} />\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\n\nconst PasswordInput = props => {\n  let formControl = \"form-control\";\n\n  if (props.touched && !props.valid) {\n    formControl = \"form-control control-error\";\n  }\n\n  return (\n    <input type=\"password\" className={formControl} {...props} />\n  );\n};\n\nexport default PasswordInput;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","\nexport const apiUrl = \"http://134.209.196.211:3001\"","import {apiUrl} from '../environment';\nimport axios from 'axios';\n\n// login\nconst login = async (credentials) => {\n    try {\n        const { data: post }  = await axios.post(apiUrl + '/login', credentials);\n        return post\n    } catch (e) {\n        const {data : error} = e.response\n        throw error\n    }\n}\n\n// register\nconst signUp = async (user) => {\n    try {\n        const { data: post }  = await axios.post(apiUrl + '/sign_up', user);\n        return post\n    } catch (e) {\n        const {data : error} = e.response\n        throw error\n    }\n}\n\n// forget\nconst forget = async (emailObj) => {\n    try {\n        const { data: post }  = await axios.post(apiUrl + '/forget_password', emailObj);\n        return post\n    } catch (e) {\n        const {data : error} = e.response\n        throw error\n    }\n}\n\n// reset\nconst reset = async (emailObj) => {\n    try {\n        const { data: post }  = await axios.post(apiUrl + '/reset_password', emailObj);\n        return post\n    } catch (e) {\n        const {data : error} = e.response\n        throw error\n    }\n}\n\nexport {\n    login,\n    signUp,\n    forget,\n    reset\n}","const confirmPassValidate = (passwordValue, confirmPassValue) => {\n    let isValid = true;\n\n    if (passwordValue === confirmPassValue) return isValid;\n    else return !isValid\n  }\n\n  export default confirmPassValidate;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport validate from \"../../../validators/validate\";\nimport TextInput from \"../../../Form/TextInput\";\nimport PasswordInput from \"../../../Form/PasswordInput\";\nimport { hashHistory } from 'react-router';\nimport confirmPassValidate from \"../../../validators/confirmPassword\";\n\n// import HttpService from \"../../../services/HttpService\";\nimport { reset } from \"../../../services/HttpService\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Col,\n  Container,\n  Form,\n  // Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    const {token} = this.props.match.params\n    const {email} = this.props.match.params\n\n    this.state = {\n        isDanger : false,\n        isSuccess:  false,\n        message : \"\",\n        formIsValid: false,\n        formControls: {\n          token : {\n            value: token,\n            placeholder: \"tojen\",\n            valid: true,\n            touched: true,\n            validationRules: {}\n          },\n          email : {\n            value: email,\n            placeholder: \"email\",\n            valid: true,\n            touched: true,\n            validationRules: {}\n          },\n          password: {\n            value: \"\",\n            placeholder: \"Password\",\n            valid: false,\n            touched: false,\n            validationRules: {\n              isRequired: true\n            }\n          },\n          repeatPassword: {\n            value: \"\",\n            placeholder: \"Repeat password\",\n            valid: false,\n            touched: false,\n            validationRules: {\n              isRequired: true\n            }\n          }\n        }\n    }\n  }\n\n/**\n    * input field change handler\n*/\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const updatedControls = {\n      ...this.state.formControls\n    };\n    const updatedFormElement = {\n      ...updatedControls[name]\n    };\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    if (name === \"repeatPassword\" && updatedFormElement.valid)\n      updatedFormElement.valid = confirmPassValidate(\n        this.state.formControls.password.value,\n        value\n      );\n\n    updatedControls[name] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedControls) {\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n    }\n    this.setState({\n      formIsValid: formIsValid,\n      formControls: updatedControls\n    });\n  };\n\n  /**\n   * submit button reset\n   */\n  submitResetForm = async event => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.formControls) {\n      formData[formElementId] = this.state.formControls[formElementId].value;\n    }\n\n    console.log(formData)\n    try{\n      delete formData['repeatPassword']\n      let res = await reset(formData)\n      console.log(res)\n      this.setState({\n        isDanger : false,\n        isSuccess : true,\n        message : res.Message\n      })\n      this.props.history.push('/login')\n\n      // setTimeout(() => {\n      //   this.props.history.push('/login')\n      // }, 1000);\n    } catch (e){\n        console.log(e)\n        this.setState({\n        isDanger : true,\n        isSuccess : false,\n        message : e.Message\n      })\n    }\n  };\n\n    /**\n   * display reset message after api call, wether it is success or fail\n  */\n  resetMessage () {\n    if (this.state.isDanger) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {this.state.message}\n        </div>\n      )\n    }\n    else if (this.state.isSuccess) {\n      return (\n        <div className=\"alert alert-success\" role=\"alert\">\n          {this.state.message}\n        </div>\n      )\n    }\n    else return\n  }\n\n  render() {\n      return (\n        <div className=\"app flex-row align-items-center\">\n          <Container>\n            <Row className=\"justify-content-center\">\n              <Col md=\"9\" lg=\"7\" xl=\"6\">\n                <Card className=\"mx-4\">\n                  <CardBody className=\"p-4\">\n                    {this.resetMessage()}\n                    <Form onSubmit={this.submitResetForm}>\n                      <h1>Reset Password</h1>\n                      <p className=\"text-muted\">Reset Password</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\" />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <PasswordInput\n                          name=\"password\"\n                          placeholder={this.state.formControls.password.placeholder}\n                          value={this.state.formControls.password.value}\n                          onChange={this.changeHandler}\n                          touched={this.state.formControls.password.touched ? 1 : 0}\n                          valid={this.state.formControls.password.valid ? 1 : 0}\n                        />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\" />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <PasswordInput\n                          name=\"repeatPassword\"\n                          placeholder={this.state.formControls.repeatPassword.placeholder}\n                          value={this.state.formControls.repeatPassword.value}\n                          onChange={this.changeHandler}\n                          touched={this.state.formControls.repeatPassword.touched ? 1 : 0}\n                          valid={this.state.formControls.repeatPassword.valid ? 1 : 0}\n                        />\n                      </InputGroup>\n                      <Button color=\"success\" style={{cursor:\"pointer\"}} type=\"submit\" disabled={!this.state.formIsValid} block>\n                        Reset Password\n                      </Button>\n                    </Form>\n                  </CardBody>\n                  <CardFooter className=\"p-4\">\n                  {/* <Row>\n                    <div>\n                      Click here for <span style={{color:\"#89daf3\", cursor:\"pointer\"}} onClick={this.props.history.goBack}>login</span>\n                    </div>\n                  </Row> */}\n                    {/* <Row>\n                      <Col xs=\"12\" sm=\"6\">\n                        <Button className=\"btn-facebook mb-1\" block>\n                          <span>facebook</span>\n                        </Button>\n                      </Col>\n                      <Col xs=\"12\" sm=\"6\">\n                        <Button className=\"btn-twitter mb-1\" block>\n                          <span>twitter</span>\n                        </Button>\n                      </Col>\n                    </Row>\n                    <Row> */}\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n  }\n}\n\nexport default ResetPassword;"],"sourceRoot":""}