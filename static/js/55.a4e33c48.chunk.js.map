{"version":3,"sources":["views/UserAnnotation/UserAnnotation.js"],"names":["UserAnnotation","_this","Object","_home_hamza_Desktop_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_hamza_Desktop_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_hamza_Desktop_react_ml_app_ml_annotation_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","counter","selectedCategory","categories","categoryName","value","images","src","class","selected","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","onScroll","handleScroll","className","renderCategoriesList","renderImages","onClick","submitImages","category","setState","ref","map","d","idx","selectCategory","key","image","imageSelected","id","imageArr","console","log","Component"],"mappings":"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","file":"static/js/55.a4e33c48.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./user_annotation.css\";\n\nclass UserAnnotation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n      selectedCategory: \"\",\n      categories: [\n        {\n          categoryName: \"People\",\n          value: \"people\"\n        },\n        {\n          categoryName: \"Emotions\",\n          value: \"emotions\"\n        }\n      ],\n      images : [\n        {\n            src: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          },\n          {\n            src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\n            class: \"notSelected\",\n            selected : false\n          }\n      ]\n    };\n    this.state.selectedCategory = this.state.categories[0];\n  }\n\n  render() {\n    return (\n      <div onScroll={this.handleScroll}>\n        <div className=\"row heading\">\n          <div className=\"col\">\n            <div className=\"row categories-row py-3\">\n              <div className=\"col\">{this.renderCategoriesList()}</div>\n            </div>\n\n            <div className=\"row py-3\">\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-center\">         \n                    <h3>\n                      Click all images with -{\" \"}\n                      {this.state.selectedCategory.categoryName}\n                    </h3>\n                    \n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col d-flex justify-content-center\">\n                    <h5>If there is none, click submit</h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n            {this.renderImages()}\n        </div>\n\n        <div className=\"row mt-3 mb-5\">\n            <div className=\"col d-flex flex-row-reverse\">\n                <button className=\"btn btn-secondary btn-md px-5\" onClick={()=>{this.submitImages()}}>Submit</button>\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n  // select category by clicking on it\n  selectCategory(category) {\n    this.setState({\n      selectedCategory: category\n    });\n  }\n\n    // render categories from list on front-end\n    renderCategoriesList() {\n        let ref = this;\n        return (\n        <span>\n            {this.state.categories.map(function(d, idx) {\n            return (\n                <span\n                onClick={() => ref.selectCategory(d)}\n                className=\"mx-2 curson-type-pointer\"\n                key={idx}\n                >\n                {d.categoryName}\n                </span>\n            );\n            })}\n        </span>\n        );\n    }\n\n    // render image list on front-end\n    renderImages () {\n        let ref = this;\n        return (\n            <span className=\"col\">\n                <div className=\"row row-img\">\n                    {this.state.images.map(function(image, idx) {\n                      if (idx%5 === 0){\n                        ref.state.counter +=5\n                        return (\n                          <div key={idx} className=\"col-lg-5 col-md-5 col-sm-12 image-container\" onClick={() => ref.imageSelected(image,idx)}>\n                              <img src={image.src} className={'curson-type-pointer image ' + image.class}/>\n                          </div>\n                        );\n                      }\n                      else if (idx%4 === 0){\n                        ref.state.counter +=4\n                        return (\n                          <div key={idx} className=\"col-lg-4 col-md-4 col-sm-12 image-container\" onClick={() => ref.imageSelected(image,idx)}>\n                              <img src={image.src} className={'curson-type-pointer image ' + image.class}/>\n                          </div>\n                        );\n                      }\n                      else if (idx%3 === 0){\n                        ref.state.counter +=3\n                        return (\n                          <div key={idx} className=\"col-lg-3 col-md-3 col-sm-12 image-container\" onClick={() => ref.imageSelected(image,idx)}>\n                              <img src={image.src} className={'curson-type-pointer image ' + image.class}/>\n                          </div>\n                        );\n                      }\n                      else {\n                        ref.state.counter +=2\n                        return (\n                          <div key={idx} className=\"col-lg-2 col-md-2 col-sm-12 image-container\" onClick={() => ref.imageSelected(image,idx)}>\n                              <img src={image.src} className={'curson-type-pointer image ' + image.class}/>\n                          </div>\n                        );\n                      }\n                    })}\n                </div> \n            </span>\n        )\n    }\n\n    // image selected function\n    imageSelected (image,id) {\n        let imageArr = this.state.images;\n        if (imageArr[id].selected){\n            imageArr[id].class=\"notSelected\"\n            imageArr[id].selected = false\n        }\n        else {\n            imageArr[id].class=\"selected\"\n            imageArr[id].selected = true\n        }\n        this.setState({\n            images: imageArr\n        })\n    }\n\n    // submit Images after tagging\n    submitImages() {\n        this.state.images.map(function(image, idx) {\n            if (image.selected)\n                console.log(image)\n        })\n    }\n}\n\nexport default UserAnnotation;\n"],"sourceRoot":""}