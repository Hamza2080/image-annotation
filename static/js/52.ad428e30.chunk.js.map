{"version":3,"sources":["../node_modules/react-filepond/dist/react-filepond.js","../node_modules/filepond/dist/filepond.js"],"names":["Object","defineProperty","exports","value","FilePond","FileStatus","registerPlugin","undefined","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","__esModule","default","_filepond","isSupported","supported","filteredMethods","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","allowFilesSync","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","_this2","options","assign","onupdatefiles","cb","items","_pond","_element","keys","filter","includes","forEach","destroy","setOptions","_this3","_props","id","name","className","allowMultiple","required","captureMethod","acceptedFileTypes","createElement","type","accept","multiple","capture","ref","element","forin","hasOwnProperty","createObject","definition","property","attr","node","arguments","getAttribute","hasAttribute","setAttribute","svgElements","isSVGElement","tag","attributes","document","createElementNS","appendChildView","parent","childViews","view","index","splice","push","removeChildView","indexOf","parentNode","removeChild","getViewRect","elementRect","offset","scale","left","top","right","width","bottom","height","rect","inner","outer","childView","isRectIgnored","map","childViewRect","expandRect","calculateRectSize","marginBottom","marginRight","child","isNumber","easeInOutQuad","t","animator","spring","_ref","_ref$stiffness","stiffness","_ref$damping","damping","_ref$mass","mass","position","velocity","resting","api","interpolate","destination","errorMargin","Math","abs","thereYet","onupdate","oncomplete","set","get","tween","p","_ref$duration","duration","_ref$easing","easing","_ref$delay","delay","start","reverse","ts","createAnimator","category","def","addGetSet","overwrite","Array","isArray","o","getter","setter","isDefined","defaults","opacity","scaleX","scaleY","translateX","translateY","rotateX","rotateY","rotateZ","originX","originY","propsHaveChanged","currentProps","newProps","prop","applyStyles","_ref2","perspective","transforms","styles","elementCurrentStyle","Mixins","mixinConfig","viewProps","viewInternalAPI","viewExternalAPI","initialProps","getRect","write","listeners","viewState","events","add","fn","addEventListener","remove","removeEventListener","removeEvent","on","off","findIndex","event","animations","animation","apis","updateRect","style","layoutCalculated","paddingTop","parseInt","marginTop","marginLeft","offsetLeft","offsetTop","offsetWidth","offsetHeight","scrollTop","hidden","offsetParent","createView","_ref$tag","_ref$name","_ref$attributes","_ref$read","read","_ref$write","_ref$create","_ref$destroy","_ref$filterFrameActio","filterFrameActionsForChild","actions","_ref$didCreateView","didCreateView","_ref$didWriteView","didWriteView","_ref$ignoreRect","ignoreRect","_ref$ignoreRectUpdate","ignoreRectUpdate","_ref$mixins","mixins","store","window","getComputedStyle","frameRect","isResting","activeMixins","state","writers","readers","destroyers","getElement","getChildViews","concat","sharedAPIDefinition","internalAPIDefinition","is","needle","appendChild","children","insertBefore","createChildView","linkView","unlinkView","registerWriter","writer","registerReader","reader","registerDestroyer","destroyer","invalidateLayout","dispatch","query","externalAPIDefinition","_read","root","internalAPI","_write","frameActions","shouldOptimize","timestamp","mixin","_destroy","mixinAPIDefinition","sort","a","b","mixinAPI","childCount","createRoute","routes","_ref$actions","action","data","newNode","referenceNode","insertAfter","nextSibling","isEmpty","trim","str","toString","isBoolean","toBoolean","isString","toNumber","replace","toInt","toFloat","parseFloat","isInt","isFinite","floor","toBytes","naturalFileSize","test","isFunction","methods","process","revert","fetch","restore","load","createAction","outline","method","timeout","url","headers","withCredentials","onload","ondata","onerror","parts","split","header","isObject","getType","isNull","isAPI","conversionTable","array","splitter","boolean","int","number","float","bytes","string","function","levels","level","shift","toFunctionReference","serverapi","createServerAPI","object","JSON","parse","e","getValueByType","newValue","defaultValue","valueType","newValueType","convertedValue","option","createOptions","optionDefinition","currentValue","createOption","fromCamels","separator","part","toLowerCase","join","createOptionActions","toUpperCase","createOptionQueries","InteractionMethod","API","DROP","BROWSE","PASTE","NONE","getUniqueId","random","substr","arrayRemove","arr","listener","fire","_len","args","_key","setTimeout","apply","onOnce","_cb","copyObjectPropertiesToObject","src","excluded","getOwnPropertyNames","getOwnPropertyDescriptor","PRIVATE","createItemAPI","item","ItemStatus","INIT","IDLE","PROCESSING_QUEUED","PROCESSING","PROCESSING_COMPLETE","PROCESSING_ERROR","PROCESSING_REVERT_ERROR","LOADING","LOAD_ERROR","getNonNumeric","exec","getDecimalSeparator","toLocaleString","Type","BOOLEAN","INT","NUMBER","STRING","ARRAY","OBJECT","FUNCTION","ACTION","SERVER_API","REGEX","filters","applyFilterChain","utils","Promise","resolve","reject","matchingFilters","f","initialFilter","reduce","current","next","then","catch","error","applyFilters","addFilter","getOptions","defaultOptions","disabled","allowDrop","allowBrowse","allowPaste","allowReplace","allowRevert","forceRevert","maxFiles","checkValidity","itemInsertLocationFreedom","itemInsertLocation","itemInsertInterval","dropOnPage","dropOnElement","dropValidation","ignoredFiles","instantUpload","maxParallelUploads","server","labelDecimalSeparator","labelThousandsSeparator","decimalSeparator","thousandsStringWithSeparator","thousandsStringWithoutSeparator","getThousandsSeparator","labelIdle","labelInvalidField","labelFileWaitingForSize","labelFileSizeNotAvailable","labelFileCountSingular","labelFileCountPlural","labelFileLoading","labelFileAdded","labelFileLoadError","labelFileRemoved","labelFileRemoveError","labelFileProcessing","labelFileProcessingComplete","labelFileProcessingAborted","labelFileProcessingError","labelFileProcessingRevertError","labelTapToCancel","labelTapToRetry","labelTapToUndo","labelButtonRemoveItem","labelButtonAbortItemLoad","labelButtonRetryItemLoad","labelButtonAbortItemProcessing","labelButtonUndoItemProcessing","labelButtonRetryItemProcessing","labelButtonProcessItem","iconRemove","iconProcess","iconRetry","iconUndo","iconDone","oninit","onwarning","onactivatefile","onaddfilestart","onaddfileprogress","onaddfile","onprocessfilestart","onprocessfileprogress","onprocessfileabort","onprocessfilerevert","onprocessfile","onprocessfiles","onremovefile","onpreparefile","beforeDropFile","beforeAddFile","beforeRemoveFile","stylePanelLayout","stylePanelAspectRatio","styleItemPanelAspectRatio","styleButtonRemoveItemPosition","styleButtonProcessItemPosition","styleLoadIndicatorPosition","styleProgressIndicatorPosition","files","getItemByQuery","find","getNumericAspectRatioFromString","aspectRatio","getActiveItems","archived","Status","EMPTY","ERROR","BUSY","READY","ITEM_ERROR","ITEM_BUSY","ITEM_READY","isItemInErrorState","status","isItemInBusyState","isItemInReadyState","queries","GET_STATUS","some","GET_ITEM","GET_ACTIVE_ITEM","GET_ACTIVE_ITEMS","GET_ITEMS","GET_ITEM_NAME","filename","GET_ITEM_SIZE","fileSize","GET_STYLES","GET_PANEL_ASPECT_RATIO","isShapeCircle","GET_ITEM_PANEL_ASPECT_RATIO","GET_ITEMS_BY_STATUS","GET_TOTAL_ITEMS","IS_ASYNC","insertItem","min","max","arrayInsert","isBase64DataURI","getFilenameFromURL","pop","getExtensionFromFilename","leftPad","padding","slice","getDateString","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getFileFromBlob","blob","extension","file","size","lastModifiedDate","subtype","guesstimateExtension","createBlob","arrayBuffer","mimeType","BB","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","Blob","getMimeTypeFromBase64DataURI","dataURI","getBlobFromBase64DataURI","byteString","atob","getBase64DataFromBase64DataURI","getByteStringFromBase64DataURI","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","getBlobFromByteStringWithMimeType","getFileNameFromHeader","matches","decodeURI","getFileSizeFromHeader","match","getTranfserIdFromHeader","getFileInfoFromHeaders","info","source","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","createFileLoader","fetchFn","complete","progress","request","loadURL","now","response","body","code","computable","total","fileinfo","setSource","getProgress","abort","File","isGet","sendRequest","onheaders","onprogress","ontimeout","onabort","aborted","xhr","headersReceived","encodeURI","encodeURIComponent","stringify","XMLHttpRequest","upload","lengthComputable","loaded","onreadystatechange","readyState","open","setRequestHeader","responseType","send","createResponse","createTimeoutResponse","getAllResponseHeaders","createFetchFunction","apiUrl","res","statusText","createRevertFunction","uniqueFileId","getRandomNumber","createFileProcessor","processFn","perceivedProgress","perceivedPerformanceUpdater","perceivedDuration","clear","metadata","progressFn","completeFn","tickMin","tickMax","tick","runtime","clearTimeout","createPerceivedPerformanceUpdater","getDuration","reset","getFilenameWithoutExtension","lastIndexOf","FileOrigin","INPUT","LIMBO","LOCAL","isFile","createItem","origin","serverFileReference","frozen","released","activeLoader","activeProcessor","abortProcessingRequestComplete","setStatus","params","_setMetadata","silent","last","serverId","filenameWithoutExtension","fileExtension","fileType","getMetadata","deepCloneObject","v","setMetadata","extend","handler","itemAPI","abortLoad","retryLoad","requestProcessing","abortProcessing","loader","createFileStub","meta","success","result","processor","onprocess","revertFileUpload","freeze","release","archive","getItemById","itemId","getItemIndexByQuery","fetchLocal","getDomainFromURL","location","protocol","dynamicLabel","label","listUpdated","listUpdateTimeout","optionalPromise","sortItems","compare","getItemByQueryFromState","itemHandler","_ref$success","_ref$failure","failure","ABORT_ALL","DID_SET_FILES","_ref2$value","activeItems","interactionMethod","DID_UPDATE_ITEM_METADATA","_ref3","change","doUpload","shouldPrepareOutput","ready","SORT","_ref4","ADD_ITEMS","_ref5","_ref5$success","_ref5$failure","currentIndex","insertLocation","totalItems","validItems","promises","all","ADD_ITEM","_ref6","_ref6$index","_ref6$success","_ref6$failure","_ref6$options","count","maxFileCount","hasRoomForItem","_item","mainStatus","main","sub","handleAdd","shouldAdd","loadComplete","_ref7","href","isExternalURL","REQUEST_PREPARE_OUTPUT","_ref8","COMPLETE_LOAD_ITEM","_ref9","RETRY_ITEM_LOAD","REQUEST_ITEM_PROCESSING","itemCanBeQueuedForProcessing","PROCESS_ITEM","totalCurrentUploads","processNext","queueEntry","processingQueue","itemReference","allItemsProcessed","fd","formData","FormData","createProcessorFunction","RETRY_ITEM_PROCESSING","REQUEST_REMOVE_ITEM","shouldRemove","RELEASE_ITEM","REMOVE_ITEM","removeFromView","ABORT_ITEM_LOAD","ABORT_ITEM_PROCESSING","REQUEST_REVERT_ITEM_PROCESSING","handleRevert","shouldRevert","requestRemoveResult","REVERT_ITEM_PROCESSING","isMockItem","SET_OPTIONS","_ref10","formatFilename","createElement$1","tagName","text","textNode","childNodes","nodeValue","createTextNode","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","x","cos","y","sin","percentageArc","from","to","arcSweep","startAngle","endAngle","end","describeArc","progressIndicator","spin","svg","path","stroke-width","stroke-linecap","align","dataset","ringStrokeWidth","ringFrom","ringTo","coordinates","fileActionButton","innerHTML","icon","isDisabled","shouldDisable","removeAttribute","toNaturalFileSize","round","MB","KB","GB","removeDecimalsWhenZero","decimalCount","toFixed","updateFile","fileName","updateFileSizeOnError","fileInfo","DID_LOAD_ITEM","DID_UPDATE_ITEM_META","DID_THROW_ITEM_LOAD_ERROR","DID_THROW_ITEM_INVALID","toPercentage","didSetItemLoadProgress","title","fileStatus","DID_REVERT_ITEM_PROCESSING","DID_REQUEST_ITEM_PROCESSING","DID_ABORT_ITEM_PROCESSING","DID_COMPLETE_ITEM_PROCESSING","DID_UPDATE_ITEM_PROCESS_PROGRESS","DID_UPDATE_ITEM_LOAD_PROGRESS","DID_THROW_ITEM_PROCESSING_ERROR","DID_THROW_ITEM_PROCESSING_REVERT_ERROR","DID_THROW_ITEM_REMOVE_ERROR","Buttons","AbortItemLoad","RetryItemLoad","RemoveItem","ProcessItem","AbortItemProcessing","RetryItemProcessing","RevertItemProcessing","ButtonKeys","calculateFileInfoOffset","buttonRemoveItem","calculateFileVerticalCenterOffset","calculateFileHorizontalCenterOffset","getRemoveIndicatorAligment","DefaultStyle","buttonAbortItemLoad","buttonRetryItemLoad","buttonProcessItem","buttonAbortItemProcessing","buttonRetryItemProcessing","buttonRevertItemProcessing","loadProgressIndicator","processProgressIndicator","processingCompleteIndicator","IdleStyle","ProcessingStyle","StyleMap","DID_START_ITEM_LOAD","DID_START_ITEM_REMOVE","DID_LOAD_LOCAL_ITEM","DID_START_ITEM_PROCESSING","processingCompleteIndicatorView","route","DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING","DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD","DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL","buttonAbortItemRemoval","_ref11","isAsync","enabledButtons","buttonView","classList","stopPropagation","loadIndicatorView","progressIndicatorView","currentAction","newStyles","defaultStyles","control","fileWrapper","dataContainer","DID_SET_DISABLED","DID_REMOVE_ITEM","PANEL_SPRING_PROPS","createSection","section","viewConstructor","panel","scalable","topRect","bottomRect","center","ITEM_TRANSLATE_SPRING","StateMap","route$1","DID_UPDATE_PANEL_HEIGHT","handleClick","container","markedForRemoval","currentState","filepondItemState","getItemIndexByPosition","positionInView","horizontalSpace","l","itemRect","itemHorizontalMargin","itemWidth","itemsPerRow","childMid","itemVerticalMargin","itemHeight","_index","indexX","indexY","offsetX","offsetY","itemTop","itemRight","itemBottom","moveItem","vx","vy","spawnDate","introItemView","route$2","DID_ADD_ITEM","addIndex","cooldown","dist","lastItemSpanwDate","list","dragCoordinates","dragIndex","visibleChildren","dragIndexOffset","removeIndexOffset","addIndexOffset","childRect","dragOffset","visualHeight","prevX","prevY","visualIndex","vectorX","sign","vectorY","route$3","DID_DRAG","scopeLeft","scopeTop","DID_END_DRAG","listScroller","overflowing","overflow","newHeight","attrToggle","enabledValue","toggleDisabled","doesAllowBrowse","disableField","updateRequiredStatus","shouldCheckValidity","setCustomValidity","browser","handleChange","input","form","resetFileInput","DID_SET_ALLOW_BROWSE","DID_SET_ALLOW_MULTIPLE","DID_SET_ACCEPTED_FILE_TYPES","DID_SET_CAPTURE_METHOD","DID_SET_REQUIRED","Key","ENTER","SPACE","updateLabelValue","clickable","querySelector","dropLabel","isActivationKey","keyCode","preventDefault","click","isLabelClick","contains","caption","DID_SET_LABEL_IDLE","route$4","addBlob","DID_DROP","drip","images","text$1","zip","epub","guesstimateMimeType","requestDataTransferItems","dataTransfer","links","getLinks","getFiles","promisedFiles","isFileSystemItem","getFilesFromItem","returendFileGroups","group","isEntry","entry","getAsEntry","isDirectory","kind","isDirectoryEntry","getFilesInDirectory","getAsFile","totalFilesFound","readEntries","dirEntry","createReader","entries","correctMissingFileType","webkitGetAsEntry","getLinksFromTransferMetaData","getLinksFromTransferURLData","getData","dragNDropObservers","eventPosition","pageLeft","pageX","pageTop","pageY","layerX","layerY","getDragNDropObserver","observer","newObserver","createDragNDropObserver","clients","dragenter","dragover","dragleave","drop","handlers","createHandler","addListener","client","isEventTarget","getRootNode","elementAtPosition","point","elementFromPoint","pageXOffset","pageYOffset","initialTarget","setDropEffect","effect","dropEffect","onenter","overDropTarget","filterElement","onexit","ondrag","allowdrop","allowsTransfer","ondrop","createHopper","scope","validateItems","catchesDropsOnPage","requiresDropOnElement","scopeToObserve","createDragNDropClient","documentElement","lastState","ondragend","ondragstart","updateHopperState","hopperState","listening","listeners$1","handlePaste","clipboardData","createPaster","listen","addFilesNotificationTimeout","notificationClearTimeout","filenames","assist","message","textContent","listModified","clear$1","isUsingFilePond","activeElement","itemProcessedUndo","itemError","assistant","toCamels","RegExp","charAt","debounce","func","interval","immidiateOnly","calculateListItemMargin","calculateListHeight","visual","bounds","scrollList","itemList","newItem","removedItem","verticalItemCount","ceil","calculateRootBoundingBoxHeight","measureHeight","cappedHeight","maxHeight","fixedHeight","exceedsMaxFiles","maxItems","totalBrowseItems","hasMaxItems","getDragIndex","toggleDrop","isAllowed","enabled","hopper","every","toggleBrowse","togglePaste","paster","route$5","DID_SET_ALLOW_DROP","DID_SET_ALLOW_PASTE","measure","widthPrevious","widthUpdated","previousAspectRatio","updateHistory","_root$ref","isMultiItem","atMaxCapacity","addAction","listItemMargin","listHeight","labelHeight","currentLabelHeight","listMarginTop","listMarginBottom","boundsHeight","history","MAX_BOUNCES","bounces","listAvailableHeight","_listAvailableHeight","isCappedHeight","panelHeight","_listAvailableHeight2","itemMargin","createApp","initialOptions","originalElement","initialState","actionQueue","dispatchQueue","isBlocking","actionHandlers","_queryHandles","queryHandles","getState","processActionQueue","queue","processDispatchQueue","createStore","visibilityHandler","resizeDoneTimer","isResizing","isResizingHorizontally","initialWindowWidth","currentWindowWidth","resizeHandler","isHidden","readWriteApi","innerWidth","routeActionsToEvents","createEvent","output","eventRoutes","DID_DESTROY","DID_INIT","DID_THROW_MAX_FILES","DID_PREPARE_OUTPUT","DID_COMPLETE_ITEM_PROCESSING_ALL","DID_UPDATE_ITEMS","DID_ACTIVATE_ITEM","detail","pond","dispatchEvent","CustomEvent","bubbles","cancelable","composed","filtered","exposeEvent","removeFile","addFiles","sources","lastArgument","processFile","createOptionAPI","addFile","getFile","processFiles","_len2","_key2","removeFiles","_len3","_key3","browse","appendTo","replaceElement","restoreElement","isAttachedTo","createAppObject","customOptions","app","getAttributesAsObject","attributeMapping","attribute","attributeName","mapObject","propertyMap","selector","mapping","selectorRegExp","createApp$1","HTMLElement","^class$","^multiple$","^capture$","^server","^process","^revert","^fetch","^restore","^load","^type$","^files$","mergedOptions","attributeOptions","nodeName","querySelectorAll","PRIVATE_METHODS","createAppAPI","replaceInString","replacements","createWorker","workerBlob","workerURL","URL","createObjectURL","worker","Worker","transfer","post","transferList","onmessage","postMessage","terminate","revokeObjectURL","loadImage","img","Image","renameFile","renamedFile","copyFile","registeredPlugins","createAppPlugin","plugin","additionalOptions","pluginOutline","views","operamini","apps","OptionTypes","fps","painter","requestAnimationFrame","delta","performance","createPainter","updateOptionTypes","hook","indexToRemove","context","matchedHooks","newHooks","newHook","plugins","opts","factory"],"mappings":"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","file":"static/js/52.ad428e30.chunk.js","sourcesContent":["/*!\n * react-filepond v7.0.1\n * A handy FilePond adapter component for React\n * \n * Copyright (c) 2019 PQINA\n * https://pqina.nl/filepond\n * \n * Licensed under the MIT license.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilePond = exports.FileStatus = exports.registerPlugin = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _filepond = require('filepond');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Import required methods and styles from the FilePond module, should not need anything else\n// We need to be able to call the registerPlugin method directly so we can add plugins\n\n\nexports.registerPlugin = _filepond.registerPlugin;\nexports.FileStatus = _filepond.FileStatus; // Do this once\n\nvar isSupported = (0, _filepond.supported)(); // filtered methods\n\nvar filteredMethods = ['setOptions', 'on', 'off', 'onOnce', 'appendTo', 'insertAfter', 'insertBefore', 'isAttachedTo', 'replaceElement', 'restoreElement', 'destroy']; // The React <FilePond/> wrapper\n\nvar FilePond = exports.FilePond = function (_React$Component) {\n  _inherits(FilePond, _React$Component);\n\n  function FilePond(props) {\n    _classCallCheck(this, FilePond);\n\n    var _this = _possibleConstructorReturn(this, (FilePond.__proto__ || Object.getPrototypeOf(FilePond)).call(this, props));\n\n    _this.allowFilesSync = true;\n    return _this;\n  } // Will setup FilePond instance when mounted\n\n\n  _createClass(FilePond, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this; // exit here if not supported\n\n\n      if (!isSupported) return;\n      var options = Object.assign({}, this.props); // if onupdate files is defined, make sure setFiles does not cause race condition\n\n      if (options.onupdatefiles) {\n        var cb = options.onupdatefiles;\n\n        options.onupdatefiles = function (items) {\n          _this2.allowFilesSync = false;\n          cb(items);\n        };\n      } // Create our pond\n\n\n      this._pond = (0, _filepond.create)(this._element, options); // Reference pond methods to FilePond component instance\n\n      Object.keys(this._pond).filter(function (key) {\n        return !filteredMethods.includes(key);\n      }).forEach(function (key) {\n        _this2[key] = _this2._pond[key];\n      });\n    } // Will clean up FilePond instance when unmounted\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // exit when no pond defined\n      if (!this._pond) return;\n\n      this._pond.destroy();\n\n      this.allowFilesSync = true;\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      if (!this.allowFilesSync) {\n        this.allowFilesSync = true;\n        return false;\n      }\n\n      return true;\n    } // Something changed\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      // exit when no pond defined\n      if (!this._pond) return;\n      var options = Object.assign({}, this.props); // this is only set onces, on didmount\n\n      delete options.onupdatefiles; // update pond options based on new props\n\n      this._pond.setOptions(options);\n    } // Renders basic element hook for FilePond to attach to\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          id = _props.id,\n          name = _props.name,\n          className = _props.className,\n          allowMultiple = _props.allowMultiple,\n          required = _props.required,\n          captureMethod = _props.captureMethod,\n          acceptedFileTypes = _props.acceptedFileTypes;\n      return (0, _react.createElement)('div', {\n        className: 'filepond--wrapper'\n      }, (0, _react.createElement)('input', {\n        type: 'file',\n        name: name,\n        id: id,\n        accept: acceptedFileTypes,\n        multiple: allowMultiple,\n        required: required,\n        className: className,\n        capture: captureMethod,\n        ref: function ref(element) {\n          return _this3._element = element;\n        }\n      }));\n    }\n  }]);\n\n  return FilePond;\n}(_react2.default.Component);","/*!\n * FilePond 4.4.3\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.FilePond = {}));\n})(this, function (exports) {\n  'use strict';\n\n  var isNode = function isNode(value) {\n    return value instanceof HTMLElement;\n  };\n\n  var createStore = function createStore(initialState) {\n    var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : []; // internal state\n\n    var state = Object.assign({}, initialState); // contains all actions for next frame, is clear when actions are requested\n\n    var actionQueue = [];\n    var dispatchQueue = []; // returns a duplicate of the current state\n\n    var getState = function getState() {\n      return Object.assign({}, state);\n    }; // returns a duplicate of the actions array and clears the actions array\n\n\n    var processActionQueue = function processActionQueue() {\n      // create copy of actions queue\n      var queue = [].concat(actionQueue); // clear actions queue (we don't want no double actions)\n\n      actionQueue.length = 0;\n      return queue;\n    }; // processes actions that might block the main UI thread\n\n\n    var processDispatchQueue = function processDispatchQueue() {\n      // create copy of actions queue\n      var queue = [].concat(dispatchQueue); // clear actions queue (we don't want no double actions)\n\n      dispatchQueue.length = 0; // now dispatch these actions\n\n      queue.forEach(function (_ref) {\n        var type = _ref.type,\n            data = _ref.data;\n        dispatch(type, data);\n      });\n    }; // adds a new action, calls its handler and\n\n\n    var dispatch = function dispatch(type, data, isBlocking) {\n      // is blocking action\n      if (isBlocking) {\n        dispatchQueue.push({\n          type: type,\n          data: data\n        });\n        return;\n      } // if this action has a handler, handle the action\n\n\n      if (actionHandlers[type]) {\n        actionHandlers[type](data);\n      } // now add action\n\n\n      actionQueue.push({\n        type: type,\n        data: data\n      });\n    };\n\n    var query = function query(str) {\n      var _queryHandles;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return queryHandles[str] ? (_queryHandles = queryHandles)[str].apply(_queryHandles, args) : null;\n    };\n\n    var api = {\n      getState: getState,\n      processActionQueue: processActionQueue,\n      processDispatchQueue: processDispatchQueue,\n      dispatch: dispatch,\n      query: query\n    };\n    var queryHandles = {};\n    queries.forEach(function (query) {\n      queryHandles = Object.assign({}, query(state), queryHandles);\n    });\n    var actionHandlers = {};\n    actions.forEach(function (action) {\n      actionHandlers = Object.assign({}, action(dispatch, query, state), actionHandlers);\n    });\n    return api;\n  };\n\n  var defineProperty = function defineProperty(obj, property, definition) {\n    if (typeof definition === 'function') {\n      obj[property] = definition;\n      return;\n    }\n\n    Object.defineProperty(obj, property, Object.assign({}, definition));\n  };\n\n  var forin = function forin(obj, cb) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) {\n        continue;\n      }\n\n      cb(key, obj[key]);\n    }\n  };\n\n  var createObject = function createObject(definition) {\n    var obj = {};\n    forin(definition, function (property) {\n      defineProperty(obj, property, definition[property]);\n    });\n    return obj;\n  };\n\n  var attr = function attr(node, name) {\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (value === null) {\n      return node.getAttribute(name) || node.hasAttribute(name);\n    }\n\n    node.setAttribute(name, value);\n  };\n\n  var ns = 'http://www.w3.org/2000/svg';\n  var svgElements = ['svg', 'path']; // only svg elements used\n\n  var isSVGElement = function isSVGElement(tag) {\n    return svgElements.includes(tag);\n  };\n\n  var createElement = function createElement(tag, className) {\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof className === 'object') {\n      attributes = className;\n      className = null;\n    }\n\n    var element = isSVGElement(tag) ? document.createElementNS(ns, tag) : document.createElement(tag);\n\n    if (className) {\n      if (isSVGElement(tag)) {\n        attr(element, 'class', className);\n      } else {\n        element.className = className;\n      }\n    }\n\n    forin(attributes, function (name, value) {\n      attr(element, name, value);\n    });\n    return element;\n  };\n\n  var appendChild = function appendChild(parent) {\n    return function (child, index) {\n      if (typeof index !== 'undefined' && parent.children[index]) {\n        parent.insertBefore(child, parent.children[index]);\n      } else {\n        parent.appendChild(child);\n      }\n    };\n  };\n\n  var appendChildView = function appendChildView(parent, childViews) {\n    return function (view, index) {\n      if (typeof index !== 'undefined') {\n        childViews.splice(index, 0, view);\n      } else {\n        childViews.push(view);\n      }\n\n      return view;\n    };\n  };\n\n  var removeChildView = function removeChildView(parent, childViews) {\n    return function (view) {\n      // remove from child views\n      childViews.splice(childViews.indexOf(view), 1); // remove the element\n\n      if (view.element.parentNode) {\n        parent.removeChild(view.element);\n      }\n\n      return view;\n    };\n  };\n\n  var getViewRect = function getViewRect(elementRect, childViews, offset, scale) {\n    var left = offset[0] || elementRect.left;\n    var top = offset[1] || elementRect.top;\n    var right = left + elementRect.width;\n    var bottom = top + elementRect.height * (scale[1] || 1);\n    var rect = {\n      // the rectangle of the element itself\n      element: Object.assign({}, elementRect),\n      // the rectangle of the element expanded to contain its children, does not include any margins\n      inner: {\n        left: elementRect.left,\n        top: elementRect.top,\n        right: elementRect.right,\n        bottom: elementRect.bottom\n      },\n      // the rectangle of the element expanded to contain its children including own margin and child margins\n      // margins will be added after we've recalculated the size\n      outer: {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      }\n    }; // expand rect to fit all child rectangles\n\n    childViews.filter(function (childView) {\n      return !childView.isRectIgnored();\n    }).map(function (childView) {\n      return childView.rect;\n    }).forEach(function (childViewRect) {\n      expandRect(rect.inner, Object.assign({}, childViewRect.inner));\n      expandRect(rect.outer, Object.assign({}, childViewRect.outer));\n    }); // calculate inner width and height\n\n    calculateRectSize(rect.inner); // append additional margin (top and left margins are included in top and left automatically)\n\n    rect.outer.bottom += rect.element.marginBottom;\n    rect.outer.right += rect.element.marginRight; // calculate outer width and height\n\n    calculateRectSize(rect.outer);\n    return rect;\n  };\n\n  var expandRect = function expandRect(parent, child) {\n    // adjust for parent offset\n    child.top += parent.top;\n    child.right += parent.left;\n    child.bottom += parent.top;\n    child.left += parent.left;\n\n    if (child.bottom > parent.bottom) {\n      parent.bottom = child.bottom;\n    }\n\n    if (child.right > parent.right) {\n      parent.right = child.right;\n    }\n  };\n\n  var calculateRectSize = function calculateRectSize(rect) {\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n  };\n\n  var isNumber = function isNumber(value) {\n    return typeof value === 'number';\n  };\n  /**\n   * Determines if position is at destination\n   * @param position\n   * @param destination\n   * @param velocity\n   * @param errorMargin\n   * @returns {boolean}\n   */\n\n\n  var thereYet = function thereYet(position, destination, velocity) {\n    var errorMargin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.001;\n    return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;\n  };\n  /**\n   * Spring animation\n   */\n\n\n  var spring = // default options\n  function spring() // method definition\n  {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$stiffness = _ref.stiffness,\n        stiffness = _ref$stiffness === void 0 ? 0.5 : _ref$stiffness,\n        _ref$damping = _ref.damping,\n        damping = _ref$damping === void 0 ? 0.75 : _ref$damping,\n        _ref$mass = _ref.mass,\n        mass = _ref$mass === void 0 ? 10 : _ref$mass;\n\n    var target = null;\n    var position = null;\n    var velocity = 0;\n    var resting = false; // updates spring state\n\n    var interpolate = function interpolate() {\n      // in rest, don't animate\n      if (resting) {\n        return;\n      } // need at least a target or position to do springy things\n\n\n      if (!(isNumber(target) && isNumber(position))) {\n        resting = true;\n        velocity = 0;\n        return;\n      } // calculate spring force\n\n\n      var f = -(position - target) * stiffness; // update velocity by adding force based on mass\n\n      velocity += f / mass; // update position by adding velocity\n\n      position += velocity; // slow down based on amount of damping\n\n      velocity *= damping; // we've arrived if we're near target and our velocity is near zero\n\n      if (thereYet(position, target, velocity)) {\n        position = target;\n        velocity = 0;\n        resting = true; // we done\n\n        api.onupdate(position);\n        api.oncomplete(position);\n      } else {\n        // progress update\n        api.onupdate(position);\n      }\n    };\n    /**\n     * Set new target value\n     * @param value\n     */\n\n\n    var setTarget = function setTarget(value) {\n      // if currently has no position, set target and position to this value\n      if (isNumber(value) && !isNumber(position)) {\n        position = value;\n      } // next target value will not be animated to\n\n\n      if (target === null) {\n        target = value;\n        position = value;\n      } // let start moving to target\n\n\n      target = value; // already at target\n\n      if (position === target || typeof target === 'undefined') {\n        // now resting as target is current position, stop moving\n        resting = true;\n        velocity = 0; // done!\n\n        api.onupdate(position);\n        api.oncomplete(position);\n        return;\n      }\n\n      resting = false;\n    }; // need 'api' to call onupdate callback\n\n\n    var api = createObject({\n      interpolate: interpolate,\n      target: {\n        set: setTarget,\n        get: function get() {\n          return target;\n        }\n      },\n      resting: {\n        get: function get() {\n          return resting;\n        }\n      },\n      onupdate: function onupdate(value) {},\n      oncomplete: function oncomplete(value) {}\n    });\n    return api;\n  };\n\n  var easeLinear = function easeLinear(t) {\n    return t;\n  };\n\n  var easeInOutQuad = function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  };\n\n  var tween = // default values\n  function tween() // method definition\n  {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === void 0 ? 500 : _ref$duration,\n        _ref$easing = _ref.easing,\n        easing = _ref$easing === void 0 ? easeInOutQuad : _ref$easing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? 0 : _ref$delay;\n\n    var start = null;\n    var t;\n    var p;\n    var resting = true;\n    var reverse = false;\n    var target = null;\n\n    var interpolate = function interpolate(ts) {\n      if (resting || target === null) {\n        return;\n      }\n\n      if (start === null) {\n        start = ts;\n      }\n\n      if (ts - start < delay) {\n        return;\n      }\n\n      t = ts - start - delay;\n\n      if (t < duration) {\n        p = t / duration;\n        api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);\n      } else {\n        t = 1;\n        p = reverse ? 0 : 1;\n        api.onupdate(p * target);\n        api.oncomplete(p * target);\n        resting = true;\n      }\n    }; // need 'api' to call onupdate callback\n\n\n    var api = createObject({\n      interpolate: interpolate,\n      target: {\n        get: function get() {\n          return reverse ? 0 : target;\n        },\n        set: function set(value) {\n          // is initial value\n          if (target === null) {\n            target = value;\n            api.onupdate(value);\n            api.oncomplete(value);\n            return;\n          } // want to tween to a smaller value and have a current value\n\n\n          if (value < target) {\n            target = 1;\n            reverse = true;\n          } else {\n            // not tweening to a smaller value\n            reverse = false;\n            target = value;\n          } // let's go!\n\n\n          resting = false;\n          start = null;\n        }\n      },\n      resting: {\n        get: function get() {\n          return resting;\n        }\n      },\n      onupdate: function onupdate(value) {},\n      oncomplete: function oncomplete(value) {}\n    });\n    return api;\n  };\n\n  var animator = {\n    spring: spring,\n    tween: tween\n  };\n  /*\n                       { type: 'spring', stiffness: .5, damping: .75, mass: 10 };\n                       { translation: { type: 'spring', ... }, ... }\n                       { translation: { x: { type: 'spring', ... } } }\n                      */\n\n  var createAnimator = function createAnimator(definition, category, property) {\n    // default is single definition\n    // we check if transform is set, if so, we check if property is set\n    var def = definition[category] && typeof definition[category][property] === 'object' ? definition[category][property] : definition[category] || definition;\n    var type = typeof def === 'string' ? def : def.type;\n    var props = typeof def === 'object' ? Object.assign({}, def) : {};\n    return animator[type] ? animator[type](props) : null;\n  };\n\n  var addGetSet = function addGetSet(keys, obj, props) {\n    var overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    obj = Array.isArray(obj) ? obj : [obj];\n    obj.forEach(function (o) {\n      keys.forEach(function (key) {\n        var name = key;\n\n        var getter = function getter() {\n          return props[key];\n        };\n\n        var setter = function setter(value) {\n          return props[key] = value;\n        };\n\n        if (typeof key === 'object') {\n          name = key.key;\n          getter = key.getter || getter;\n          setter = key.setter || setter;\n        }\n\n        if (o[name] && !overwrite) {\n          return;\n        }\n\n        o[name] = {\n          get: getter,\n          set: setter\n        };\n      });\n    });\n  };\n\n  var isDefined = function isDefined(value) {\n    return value != null;\n  }; // add to state,\n  // add getters and setters to internal and external api (if not set)\n  // setup animators\n\n\n  var animations = function animations(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        viewState = _ref.viewState; // initial properties\n\n    var initialProps = Object.assign({}, viewProps); // list of all active animations\n\n    var animations = []; // setup animators\n\n    forin(mixinConfig, function (property, animation) {\n      var animator = createAnimator(animation);\n\n      if (!animator) {\n        return;\n      } // when the animator updates, update the view state value\n\n\n      animator.onupdate = function (value) {\n        viewProps[property] = value;\n      }; // set animator target\n\n\n      animator.target = initialProps[property]; // when value is set, set the animator target value\n\n      var prop = {\n        key: property,\n        setter: function setter(value) {\n          // if already at target, we done!\n          if (animator.target === value) {\n            return;\n          }\n\n          animator.target = value;\n        },\n        getter: function getter() {\n          return viewProps[property];\n        }\n      }; // add getters and setters\n\n      addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true); // add it to the list for easy updating from the _write method\n\n      animations.push(animator);\n    }); // expose internal write api\n\n    return {\n      write: function write(ts) {\n        var resting = true;\n        animations.forEach(function (animation) {\n          if (!animation.resting) {\n            resting = false;\n          }\n\n          animation.interpolate(ts);\n        });\n        return resting;\n      },\n      destroy: function destroy() {}\n    };\n  };\n\n  var addEvent = function addEvent(element) {\n    return function (type, fn) {\n      element.addEventListener(type, fn);\n    };\n  };\n\n  var removeEvent = function removeEvent(element) {\n    return function (type, fn) {\n      element.removeEventListener(type, fn);\n    };\n  }; // mixin\n\n\n  var listeners = function listeners(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        viewState = _ref.viewState,\n        view = _ref.view;\n    var events = [];\n    var add = addEvent(view.element);\n    var remove = removeEvent(view.element);\n\n    viewExternalAPI.on = function (type, fn) {\n      events.push({\n        type: type,\n        fn: fn\n      });\n      add(type, fn);\n    };\n\n    viewExternalAPI.off = function (type, fn) {\n      events.splice(events.findIndex(function (event) {\n        return event.type === type && event.fn === fn;\n      }), 1);\n      remove(type, fn);\n    };\n\n    return {\n      write: function write() {\n        // not busy\n        return true;\n      },\n      destroy: function destroy() {\n        events.forEach(function (event) {\n          remove(event.type, event.fn);\n        });\n      }\n    };\n  }; // add to external api and link to props\n\n\n  var apis = function apis(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewExternalAPI = _ref.viewExternalAPI;\n    addGetSet(mixinConfig, viewExternalAPI, viewProps);\n  }; // add to state,\n  // add getters and setters to internal and external api (if not set)\n  // set initial state based on props in viewProps\n  // apply as transforms each frame\n\n\n  var defaults = {\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n    translateX: 0,\n    translateY: 0,\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    originX: 0,\n    originY: 0\n  };\n\n  var styles = function styles(_ref) {\n    var mixinConfig = _ref.mixinConfig,\n        viewProps = _ref.viewProps,\n        viewInternalAPI = _ref.viewInternalAPI,\n        viewExternalAPI = _ref.viewExternalAPI,\n        view = _ref.view; // initial props\n\n    var initialProps = Object.assign({}, viewProps); // current props\n\n    var currentProps = {}; // we will add those properties to the external API and link them to the viewState\n\n    addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps); // override rect on internal and external rect getter so it takes in account transforms\n\n    var getOffset = function getOffset() {\n      return [viewProps['translateX'] || 0, viewProps['translateY'] || 0];\n    };\n\n    var getScale = function getScale() {\n      return [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];\n    };\n\n    var getRect = function getRect() {\n      return view.rect ? getViewRect(view.rect, view.childViews, getOffset(), getScale()) : null;\n    };\n\n    viewInternalAPI.rect = {\n      get: getRect\n    };\n    viewExternalAPI.rect = {\n      get: getRect\n    }; // apply view props\n\n    mixinConfig.forEach(function (key) {\n      viewProps[key] = typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];\n    }); // expose api\n\n    return {\n      write: function write() {\n        // see if props have changed\n        if (!propsHaveChanged(currentProps, viewProps)) {\n          return;\n        } // moves element to correct position on screen\n\n\n        applyStyles(view.element, viewProps); // store new transforms\n\n        Object.assign(currentProps, Object.assign({}, viewProps)); // no longer busy\n\n        return true;\n      },\n      destroy: function destroy() {}\n    };\n  };\n\n  var propsHaveChanged = function propsHaveChanged(currentProps, newProps) {\n    // different amount of keys\n    if (Object.keys(currentProps).length !== Object.keys(newProps).length) {\n      return true;\n    } // lets analyze the individual props\n\n\n    for (var prop in newProps) {\n      if (newProps[prop] !== currentProps[prop]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var applyStyles = function applyStyles(element, _ref2) {\n    var opacity = _ref2.opacity,\n        perspective = _ref2.perspective,\n        translateX = _ref2.translateX,\n        translateY = _ref2.translateY,\n        scaleX = _ref2.scaleX,\n        scaleY = _ref2.scaleY,\n        rotateX = _ref2.rotateX,\n        rotateY = _ref2.rotateY,\n        rotateZ = _ref2.rotateZ,\n        originX = _ref2.originX,\n        originY = _ref2.originY,\n        width = _ref2.width,\n        height = _ref2.height;\n    var transforms = '';\n    var styles = ''; // handle transform origin\n\n    if (isDefined(originX) || isDefined(originY)) {\n      styles += 'transform-origin: ' + (originX || 0) + 'px ' + (originY || 0) + 'px;';\n    } // transform order is relevant\n    // 0. perspective\n\n\n    if (isDefined(perspective)) {\n      transforms += 'perspective(' + perspective + 'px) ';\n    } // 1. translate\n\n\n    if (isDefined(translateX) || isDefined(translateY)) {\n      transforms += 'translate3d(' + (translateX || 0) + 'px, ' + (translateY || 0) + 'px, 0) ';\n    } // 2. scale\n\n\n    if (isDefined(scaleX) || isDefined(scaleY)) {\n      transforms += 'scale3d(' + (isDefined(scaleX) ? scaleX : 1) + ', ' + (isDefined(scaleY) ? scaleY : 1) + ', 1) ';\n    } // 3. rotate\n\n\n    if (isDefined(rotateZ)) {\n      transforms += 'rotateZ(' + rotateZ + 'rad) ';\n    }\n\n    if (isDefined(rotateX)) {\n      transforms += 'rotateX(' + rotateX + 'rad) ';\n    }\n\n    if (isDefined(rotateY)) {\n      transforms += 'rotateY(' + rotateY + 'rad) ';\n    } // add transforms\n\n\n    if (transforms.length) {\n      styles += 'transform:' + transforms + ';';\n    } // add opacity\n\n\n    if (isDefined(opacity)) {\n      styles += 'opacity:' + opacity + ';'; // if we reach zero, we make the element inaccessible\n\n      if (opacity === 0) {\n        styles += 'visibility:hidden;';\n      } // if we're below 100% opacity this element can't be clicked\n\n\n      if (opacity < 1) {\n        styles += 'pointer-events:none;';\n      }\n    } // add height\n\n\n    if (isDefined(height)) {\n      styles += 'height:' + height + 'px;';\n    } // add width\n\n\n    if (isDefined(width)) {\n      styles += 'width:' + width + 'px;';\n    } // apply styles\n\n\n    var elementCurrentStyle = element.elementCurrentStyle || ''; // if new styles does not match current styles, lets update!\n\n    if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {\n      element.setAttribute('style', styles); // store current styles so we can compare them to new styles later on\n      // _not_ getting the style attribute is faster\n\n      element.elementCurrentStyle = styles;\n    }\n  };\n\n  var Mixins = {\n    styles: styles,\n    listeners: listeners,\n    animations: animations,\n    apis: apis\n  };\n\n  var updateRect = function updateRect() {\n    var rect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!element.layoutCalculated) {\n      rect.paddingTop = parseInt(style.paddingTop, 10) || 0;\n      rect.marginTop = parseInt(style.marginTop, 10) || 0;\n      rect.marginRight = parseInt(style.marginRight, 10) || 0;\n      rect.marginBottom = parseInt(style.marginBottom, 10) || 0;\n      rect.marginLeft = parseInt(style.marginLeft, 10) || 0;\n      element.layoutCalculated = true;\n    }\n\n    rect.left = element.offsetLeft || 0;\n    rect.top = element.offsetTop || 0;\n    rect.width = element.offsetWidth || 0;\n    rect.height = element.offsetHeight || 0;\n    rect.right = rect.left + rect.width;\n    rect.bottom = rect.top + rect.height;\n    rect.scrollTop = element.scrollTop;\n    rect.hidden = element.offsetParent === null;\n    return rect;\n  };\n\n  var createView = // default view definition\n  function createView() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$tag = _ref.tag,\n        tag = _ref$tag === void 0 ? 'div' : _ref$tag,\n        _ref$name = _ref.name,\n        name = _ref$name === void 0 ? null : _ref$name,\n        _ref$attributes = _ref.attributes,\n        attributes = _ref$attributes === void 0 ? {} : _ref$attributes,\n        _ref$read = _ref.read,\n        read = _ref$read === void 0 ? function () {} : _ref$read,\n        _ref$write = _ref.write,\n        write = _ref$write === void 0 ? function () {} : _ref$write,\n        _ref$create = _ref.create,\n        create = _ref$create === void 0 ? function () {} : _ref$create,\n        _ref$destroy = _ref.destroy,\n        destroy = _ref$destroy === void 0 ? function () {} : _ref$destroy,\n        _ref$filterFrameActio = _ref.filterFrameActionsForChild,\n        filterFrameActionsForChild = _ref$filterFrameActio === void 0 ? function (child, actions) {\n      return actions;\n    } : _ref$filterFrameActio,\n        _ref$didCreateView = _ref.didCreateView,\n        didCreateView = _ref$didCreateView === void 0 ? function () {} : _ref$didCreateView,\n        _ref$didWriteView = _ref.didWriteView,\n        didWriteView = _ref$didWriteView === void 0 ? function () {} : _ref$didWriteView,\n        _ref$ignoreRect = _ref.ignoreRect,\n        ignoreRect = _ref$ignoreRect === void 0 ? false : _ref$ignoreRect,\n        _ref$ignoreRectUpdate = _ref.ignoreRectUpdate,\n        ignoreRectUpdate = _ref$ignoreRectUpdate === void 0 ? false : _ref$ignoreRectUpdate,\n        _ref$mixins = _ref.mixins,\n        mixins = _ref$mixins === void 0 ? [] : _ref$mixins;\n\n    return function ( // each view requires reference to store\n    store) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // root element should not be changed\n\n      var element = createElement(tag, 'filepond--' + name, attributes); // style reference should also not be changed\n\n      var style = window.getComputedStyle(element, null); // element rectangle\n\n      var rect = updateRect();\n      var frameRect = null; // rest state\n\n      var isResting = false; // pretty self explanatory\n\n      var childViews = []; // loaded mixins\n\n      var activeMixins = []; // references to created children\n\n      var ref = {}; // state used for each instance\n\n      var state = {}; // list of writers that will be called to update this view\n\n      var writers = [write // default writer\n      ];\n      var readers = [read // default reader\n      ];\n      var destroyers = [destroy // default destroy\n      ]; // core view methods\n\n      var getElement = function getElement() {\n        return element;\n      };\n\n      var getChildViews = function getChildViews() {\n        return childViews.concat();\n      };\n\n      var getReference = function getReference() {\n        return ref;\n      };\n\n      var createChildView = function createChildView(store) {\n        return function (view, props) {\n          return view(store, props);\n        };\n      };\n\n      var getRect = function getRect() {\n        if (frameRect) {\n          return frameRect;\n        }\n\n        frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);\n        return frameRect;\n      };\n\n      var getStyle = function getStyle() {\n        return style;\n      };\n      /**\n       * Read data from DOM\n       * @private\n       */\n\n\n      var _read = function _read() {\n        frameRect = null; // read child views\n\n        childViews.forEach(function (child) {\n          return child._read();\n        });\n        var shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);\n\n        if (shouldUpdate) {\n          updateRect(rect, element, style);\n        } // readers\n\n\n        var api = {\n          root: internalAPI,\n          props: props,\n          rect: rect\n        };\n        readers.forEach(function (reader) {\n          return reader(api);\n        });\n      };\n      /**\n       * Write data to DOM\n       * @private\n       */\n\n\n      var _write = function _write(ts, frameActions, shouldOptimize) {\n        // if no actions, we assume that the view is resting\n        var resting = frameActions.length === 0; // writers\n\n        writers.forEach(function (writer) {\n          var writerResting = writer({\n            props: props,\n            root: internalAPI,\n            actions: frameActions,\n            timestamp: ts,\n            shouldOptimize: shouldOptimize\n          });\n\n          if (writerResting === false) {\n            resting = false;\n          }\n        }); // run mixins\n\n        activeMixins.forEach(function (mixin) {\n          // if one of the mixins is still busy after write operation, we are not resting\n          var mixinResting = mixin.write(ts);\n\n          if (mixinResting === false) {\n            resting = false;\n          }\n        }); // updates child views that are currently attached to the DOM\n\n        childViews.filter(function (child) {\n          return !!child.element.parentNode;\n        }).forEach(function (child) {\n          // if a child view is not resting, we are not resting\n          var childResting = child._write(ts, filterFrameActionsForChild(child, frameActions), shouldOptimize);\n\n          if (!childResting) {\n            resting = false;\n          }\n        }); // append new elements to DOM and update those\n\n        childViews //.filter(child => !child.element.parentNode)\n        .forEach(function (child, index) {\n          // skip\n          if (child.element.parentNode) {\n            return;\n          } // append to DOM\n\n\n          internalAPI.appendChild(child.element, index); // call read (need to know the size of these elements)\n\n          child._read(); // re-call write\n\n\n          child._write(ts, filterFrameActionsForChild(child, frameActions), shouldOptimize); // we just added somthing to the dom, no rest\n\n\n          resting = false;\n        }); // update resting state\n\n        isResting = resting;\n        didWriteView({\n          props: props,\n          root: internalAPI,\n          actions: frameActions,\n          timestamp: ts\n        }); // let parent know if we are resting\n\n        return resting;\n      };\n\n      var _destroy = function _destroy() {\n        activeMixins.forEach(function (mixin) {\n          return mixin.destroy();\n        });\n        destroyers.forEach(function (destroyer) {\n          destroyer({\n            root: internalAPI,\n            props: props\n          });\n        });\n        childViews.forEach(function (child) {\n          return child._destroy();\n        });\n      }; // sharedAPI\n\n\n      var sharedAPIDefinition = {\n        element: {\n          get: getElement\n        },\n        style: {\n          get: getStyle\n        },\n        childViews: {\n          get: getChildViews\n        }\n      }; // private API definition\n\n      var internalAPIDefinition = Object.assign({}, sharedAPIDefinition, {\n        rect: {\n          get: getRect\n        },\n        // access to custom children references\n        ref: {\n          get: getReference\n        },\n        // dom modifiers\n        is: function is(needle) {\n          return name === needle;\n        },\n        appendChild: appendChild(element),\n        createChildView: createChildView(store),\n        linkView: function linkView(view) {\n          childViews.push(view);\n          return view;\n        },\n        unlinkView: function unlinkView(view) {\n          childViews.splice(childViews.indexOf(view), 1);\n        },\n        appendChildView: appendChildView(element, childViews),\n        removeChildView: removeChildView(element, childViews),\n        registerWriter: function registerWriter(writer) {\n          return writers.push(writer);\n        },\n        registerReader: function registerReader(reader) {\n          return readers.push(reader);\n        },\n        registerDestroyer: function registerDestroyer(destroyer) {\n          return destroyers.push(destroyer);\n        },\n        invalidateLayout: function invalidateLayout() {\n          return element.layoutCalculated = false;\n        },\n        // access to data store\n        dispatch: store.dispatch,\n        query: store.query\n      }); // public view API methods\n\n      var externalAPIDefinition = {\n        element: {\n          get: getElement\n        },\n        childViews: {\n          get: getChildViews\n        },\n        rect: {\n          get: getRect\n        },\n        resting: {\n          get: function get() {\n            return isResting;\n          }\n        },\n        isRectIgnored: function isRectIgnored() {\n          return ignoreRect;\n        },\n        _read: _read,\n        _write: _write,\n        _destroy: _destroy\n      }; // mixin API methods\n\n      var mixinAPIDefinition = Object.assign({}, sharedAPIDefinition, {\n        rect: {\n          get: function get() {\n            return rect;\n          }\n        }\n      }); // add mixin functionality\n\n      Object.keys(mixins).sort(function (a, b) {\n        // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)\n        if (a === 'styles') {\n          return 1;\n        } else if (b === 'styles') {\n          return -1;\n        }\n\n        return 0;\n      }).forEach(function (key) {\n        var mixinAPI = Mixins[key]({\n          mixinConfig: mixins[key],\n          viewProps: props,\n          viewState: state,\n          viewInternalAPI: internalAPIDefinition,\n          viewExternalAPI: externalAPIDefinition,\n          view: createObject(mixinAPIDefinition)\n        });\n\n        if (mixinAPI) {\n          activeMixins.push(mixinAPI);\n        }\n      }); // construct private api\n\n      var internalAPI = createObject(internalAPIDefinition); // create the view\n\n      create({\n        root: internalAPI,\n        props: props\n      }); // append created child views to root node\n\n      var childCount = element.children.length; // need to know the current child count so appending happens in correct order\n\n      childViews.forEach(function (child, index) {\n        internalAPI.appendChild(child.element, childCount + index);\n      }); // call did create\n\n      didCreateView(internalAPI); // expose public api\n\n      return createObject(externalAPIDefinition, props);\n    };\n  };\n\n  var createPainter = function createPainter(read, write) {\n    var fps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;\n    var name = '__framePainter'; // set global painter\n\n    if (window[name]) {\n      window[name].readers.push(read);\n      window[name].writers.push(write);\n      return;\n    }\n\n    window[name] = {\n      readers: [read],\n      writers: [write]\n    };\n    var painter = window[name];\n    var interval = 1000 / fps;\n    var last = null;\n    var frame = null;\n\n    var tick = function tick(ts) {\n      // queue next tick\n      frame = window.requestAnimationFrame(tick); // limit fps\n\n      if (!last) {\n        last = ts;\n      }\n\n      var delta = ts - last;\n\n      if (delta <= interval) {\n        // skip frame\n        return;\n      } // align next frame\n\n\n      last = ts - delta % interval; // update view\n\n      painter.readers.forEach(function (read) {\n        return read();\n      });\n      painter.writers.forEach(function (write) {\n        return write(ts);\n      });\n    };\n\n    tick(performance.now());\n    return {\n      pause: function pause() {\n        window.cancelAnimationFrame(frame);\n      }\n    };\n  };\n\n  var createRoute = function createRoute(routes, fn) {\n    return function (_ref) {\n      var root = _ref.root,\n          props = _ref.props,\n          _ref$actions = _ref.actions,\n          actions = _ref$actions === void 0 ? [] : _ref$actions,\n          timestamp = _ref.timestamp,\n          shouldOptimize = _ref.shouldOptimize;\n      actions.filter(function (action) {\n        return routes[action.type];\n      }).forEach(function (action) {\n        return routes[action.type]({\n          root: root,\n          props: props,\n          action: action.data,\n          timestamp: timestamp,\n          shouldOptimize: shouldOptimize\n        });\n      });\n\n      if (fn) {\n        fn({\n          root: root,\n          props: props,\n          actions: actions,\n          timestamp: timestamp,\n          shouldOptimize: shouldOptimize\n        });\n      }\n    };\n  };\n\n  var insertBefore = function insertBefore(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode);\n  };\n\n  var insertAfter = function insertAfter(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n\n  var isArray = function isArray(value) {\n    return Array.isArray(value);\n  };\n\n  var isEmpty = function isEmpty(value) {\n    return value == null;\n  };\n\n  var trim = function trim(str) {\n    return str.trim();\n  };\n\n  var toString = function toString(value) {\n    return '' + value;\n  };\n\n  var toArray = function toArray(value) {\n    var splitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n\n    if (isEmpty(value)) {\n      return [];\n    }\n\n    if (isArray(value)) {\n      return value;\n    }\n\n    return toString(value).split(splitter).map(trim).filter(function (str) {\n      return str.length;\n    });\n  };\n\n  var isBoolean = function isBoolean(value) {\n    return typeof value === 'boolean';\n  };\n\n  var toBoolean = function toBoolean(value) {\n    return isBoolean(value) ? value : value === 'true';\n  };\n\n  var isString = function isString(value) {\n    return typeof value === 'string';\n  };\n\n  var toNumber = function toNumber(value) {\n    return isNumber(value) ? value : isString(value) ? toString(value).replace(/[a-z]+/gi, '') : 0;\n  };\n\n  var toInt = function toInt(value) {\n    return parseInt(toNumber(value), 10);\n  };\n\n  var toFloat = function toFloat(value) {\n    return parseFloat(toNumber(value));\n  };\n\n  var isInt = function isInt(value) {\n    return isNumber(value) && isFinite(value) && Math.floor(value) === value;\n  };\n\n  var toBytes = function toBytes(value) {\n    // is in bytes\n    if (isInt(value)) {\n      return value;\n    } // is natural file size\n\n\n    var naturalFileSize = toString(value).trim(); // if is value in megabytes\n\n    if (/MB$/i.test(naturalFileSize)) {\n      naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();\n      return toInt(naturalFileSize) * 1000 * 1000;\n    } // if is value in kilobytes\n\n\n    if (/KB/i.test(naturalFileSize)) {\n      naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();\n      return toInt(naturalFileSize) * 1000;\n    }\n\n    return toInt(naturalFileSize);\n  };\n\n  var isFunction = function isFunction(value) {\n    return typeof value === 'function';\n  };\n\n  var toFunctionReference = function toFunctionReference(string) {\n    var ref = self;\n    var levels = string.split('.');\n    var level = null;\n\n    while (level = levels.shift()) {\n      ref = ref[level];\n\n      if (!ref) {\n        return null;\n      }\n    }\n\n    return ref;\n  };\n\n  var methods = {\n    process: 'POST',\n    revert: 'DELETE',\n    fetch: 'GET',\n    restore: 'GET',\n    load: 'GET'\n  };\n\n  var createServerAPI = function createServerAPI(outline) {\n    var api = {};\n    api.url = isString(outline) ? outline : outline.url || '';\n    api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;\n    forin(methods, function (key) {\n      api[key] = createAction(key, outline[key], methods[key], api.timeout);\n    }); // special treatment for remove\n\n    api.remove = outline.remove || null;\n    return api;\n  };\n\n  var createAction = function createAction(name, outline, method, timeout) {\n    // is explicitely set to null so disable\n    if (outline === null) {\n      return null;\n    } // if is custom function, done! Dev handles everything.\n\n\n    if (typeof outline === 'function') {\n      return outline;\n    } // build action object\n\n\n    var action = {\n      url: method === 'GET' ? '?' + name + '=' : '',\n      method: method,\n      headers: {},\n      withCredentials: false,\n      timeout: timeout,\n      onload: null,\n      ondata: null,\n      onerror: null\n    }; // is a single url\n\n    if (isString(outline)) {\n      action.url = outline;\n      return action;\n    } // overwrite\n\n\n    Object.assign(action, outline); // see if should reformat headers;\n\n    if (isString(action.headers)) {\n      var parts = action.headers.split(/:(.+)/);\n      action.headers = {\n        header: parts[0],\n        value: parts[1]\n      };\n    } // if is bool withCredentials\n\n\n    action.withCredentials = toBoolean(action.withCredentials);\n    return action;\n  };\n\n  var toServerAPI = function toServerAPI(value) {\n    return createServerAPI(value);\n  };\n\n  var isNull = function isNull(value) {\n    return value === null;\n  };\n\n  var isObject = function isObject(value) {\n    return typeof value === 'object' && value !== null;\n  };\n\n  var isAPI = function isAPI(value) {\n    return isObject(value) && isString(value.url) && isObject(value.process) && isObject(value.revert) && isObject(value.restore) && isObject(value.fetch);\n  };\n\n  var getType = function getType(value) {\n    if (isArray(value)) {\n      return 'array';\n    }\n\n    if (isNull(value)) {\n      return 'null';\n    }\n\n    if (isInt(value)) {\n      return 'int';\n    }\n\n    if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {\n      return 'bytes';\n    }\n\n    if (isAPI(value)) {\n      return 'api';\n    }\n\n    return typeof value;\n  };\n\n  var replaceSingleQuotes = function replaceSingleQuotes(str) {\n    return str.replace(/{\\s*'/g, '{\"').replace(/'\\s*}/g, '\"}').replace(/'\\s*:/g, '\":').replace(/:\\s*'/g, ':\"').replace(/,\\s*'/g, ',\"').replace(/'\\s*,/g, '\",');\n  };\n\n  var conversionTable = {\n    array: toArray,\n    boolean: toBoolean,\n    int: function int(value) {\n      return getType(value) === 'bytes' ? toBytes(value) : toInt(value);\n    },\n    number: toFloat,\n    float: toFloat,\n    bytes: toBytes,\n    string: function string(value) {\n      return isFunction(value) ? value : toString(value);\n    },\n    function: function _function(value) {\n      return toFunctionReference(value);\n    },\n    serverapi: toServerAPI,\n    object: function object(value) {\n      try {\n        return JSON.parse(replaceSingleQuotes(value));\n      } catch (e) {\n        return null;\n      }\n    }\n  };\n\n  var convertTo = function convertTo(value, type) {\n    return conversionTable[type](value);\n  };\n\n  var getValueByType = function getValueByType(newValue, defaultValue, valueType) {\n    // can always assign default value\n    if (newValue === defaultValue) {\n      return newValue;\n    } // get the type of the new value\n\n\n    var newValueType = getType(newValue); // is valid type?\n\n    if (newValueType !== valueType) {\n      // is string input, let's attempt to convert\n      var convertedValue = convertTo(newValue, valueType); // what is the type now\n\n      newValueType = getType(convertedValue); // no valid conversions found\n\n      if (convertedValue === null) {\n        throw 'Trying to assign value with incorrect type to \"' + option + '\", allowed type: \"' + valueType + '\"';\n      } else {\n        newValue = convertedValue;\n      }\n    } // assign new value\n\n\n    return newValue;\n  };\n\n  var createOption = function createOption(defaultValue, valueType) {\n    var currentValue = defaultValue;\n    return {\n      enumerable: true,\n      get: function get() {\n        return currentValue;\n      },\n      set: function set(newValue) {\n        currentValue = getValueByType(newValue, defaultValue, valueType);\n      }\n    };\n  };\n\n  var createOptions = function createOptions(options) {\n    var obj = {};\n    forin(options, function (prop) {\n      var optionDefinition = options[prop];\n      obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);\n    });\n    return createObject(obj);\n  };\n\n  var createInitialState = function createInitialState(options) {\n    return {\n      // model\n      items: [],\n      // timeout used for calling update items\n      listUpdateTimeout: null,\n      // queue of items waiting to be processed\n      processingQueue: [],\n      // options\n      options: createOptions(options)\n    };\n  };\n\n  var fromCamels = function fromCamels(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n    return string.split(/(?=[A-Z])/).map(function (part) {\n      return part.toLowerCase();\n    }).join(separator);\n  };\n\n  var createOptionAPI = function createOptionAPI(store, options) {\n    var obj = {};\n    forin(options, function (key) {\n      obj[key] = {\n        get: function get() {\n          return store.getState().options[key];\n        },\n        set: function set(value) {\n          store.dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {\n            value: value\n          });\n        }\n      };\n    });\n    return obj;\n  };\n\n  var createOptionActions = function createOptionActions(options) {\n    return function (dispatch, query, state) {\n      var obj = {};\n      forin(options, function (key) {\n        var name = fromCamels(key, '_').toUpperCase();\n\n        obj['SET_' + name] = function (action) {\n          try {\n            state.options[key] = action.value;\n          } catch (e) {} // nope, failed\n          // we successfully set the value of this option\n\n\n          dispatch('DID_SET_' + name, {\n            value: state.options[key]\n          });\n        };\n      });\n      return obj;\n    };\n  };\n\n  var createOptionQueries = function createOptionQueries(options) {\n    return function (state) {\n      var obj = {};\n      forin(options, function (key) {\n        obj['GET_' + fromCamels(key, '_').toUpperCase()] = function (action) {\n          return state.options[key];\n        };\n      });\n      return obj;\n    };\n  };\n\n  var InteractionMethod = {\n    API: 1,\n    DROP: 2,\n    BROWSE: 3,\n    PASTE: 4,\n    NONE: 5\n  };\n\n  var getUniqueId = function getUniqueId() {\n    return Math.random().toString(36).substr(2, 9);\n  };\n\n  var arrayRemove = function arrayRemove(arr, index) {\n    return arr.splice(index, 1);\n  };\n\n  var on = function on() {\n    var listeners = [];\n\n    var off = function off(event, cb) {\n      arrayRemove(listeners, listeners.findIndex(function (listener) {\n        return listener.event === event && (listener.cb === cb || !cb);\n      }));\n    };\n\n    return {\n      fire: function fire(event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        listeners.filter(function (listener) {\n          return listener.event === event;\n        }).map(function (listener) {\n          return listener.cb;\n        }).forEach(function (cb) {\n          setTimeout(function () {\n            cb.apply(void 0, args);\n          }, 0);\n        });\n      },\n      on: function on(event, cb) {\n        listeners.push({\n          event: event,\n          cb: cb\n        });\n      },\n      onOnce: function onOnce(event, _cb) {\n        listeners.push({\n          event: event,\n          cb: function cb() {\n            off(event, _cb);\n\n            _cb.apply(void 0, arguments);\n          }\n        });\n      },\n      off: off\n    };\n  };\n\n  var copyObjectPropertiesToObject = function copyObjectPropertiesToObject(src, target, excluded) {\n    Object.getOwnPropertyNames(src).filter(function (property) {\n      return !excluded.includes(property);\n    }).forEach(function (key) {\n      return Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(src, key));\n    });\n  };\n\n  var PRIVATE = ['fire', 'process', 'revert', 'load', 'on', 'off', 'onOnce', 'retryLoad', 'extend', 'archive', 'archived', 'release', 'released', 'requestProcessing', 'freeze'];\n\n  var createItemAPI = function createItemAPI(item) {\n    var api = {};\n    copyObjectPropertiesToObject(item, api, PRIVATE);\n    return api;\n  };\n\n  var removeReleasedItems = function removeReleasedItems(items) {\n    items.forEach(function (item, index) {\n      if (item.released) {\n        arrayRemove(items, index);\n      }\n    });\n  };\n\n  var ItemStatus = {\n    INIT: 1,\n    IDLE: 2,\n    PROCESSING_QUEUED: 9,\n    PROCESSING: 3,\n    PROCESSING_COMPLETE: 5,\n    PROCESSING_ERROR: 6,\n    PROCESSING_REVERT_ERROR: 10,\n    LOADING: 7,\n    LOAD_ERROR: 8\n  };\n\n  var getNonNumeric = function getNonNumeric(str) {\n    return /[^0-9]+/.exec(str);\n  };\n\n  var getDecimalSeparator = function getDecimalSeparator() {\n    return getNonNumeric(1.1.toLocaleString())[0];\n  };\n\n  var getThousandsSeparator = function getThousandsSeparator() {\n    // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)\n    // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot\n    var decimalSeparator = getDecimalSeparator();\n    var thousandsStringWithSeparator = 1000.0.toLocaleString();\n    var thousandsStringWithoutSeparator = 1000.0.toString();\n\n    if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {\n      return getNonNumeric(thousandsStringWithSeparator)[0];\n    }\n\n    return decimalSeparator === '.' ? ',' : '.';\n  };\n\n  var Type = {\n    BOOLEAN: 'boolean',\n    INT: 'int',\n    NUMBER: 'number',\n    STRING: 'string',\n    ARRAY: 'array',\n    OBJECT: 'object',\n    FUNCTION: 'function',\n    ACTION: 'action',\n    SERVER_API: 'serverapi',\n    REGEX: 'regex'\n  }; // all registered filters\n\n  var filters = []; // loops over matching filters and passes options to each filter, returning the mapped results\n\n  var applyFilterChain = function applyFilterChain(key, value, utils) {\n    return new Promise(function (resolve, reject) {\n      // find matching filters for this key\n      var matchingFilters = filters.filter(function (f) {\n        return f.key === key;\n      }).map(function (f) {\n        return f.cb;\n      }); // resolve now\n\n      if (matchingFilters.length === 0) {\n        resolve(value);\n        return;\n      } // first filter to kick things of\n\n\n      var initialFilter = matchingFilters.shift(); // chain filters\n\n      matchingFilters.reduce( // loop over promises passing value to next promise\n      function (current, next) {\n        return current.then(function (value) {\n          return next(value, utils);\n        });\n      }, // call initial filter, will return a promise\n      initialFilter(value, utils) // all executed\n      ).then(function (value) {\n        return resolve(value);\n      }).catch(function (error) {\n        return reject(error);\n      });\n    });\n  };\n\n  var applyFilters = function applyFilters(key, value, utils) {\n    return filters.filter(function (f) {\n      return f.key === key;\n    }).map(function (f) {\n      return f.cb(value, utils);\n    });\n  }; // adds a new filter to the list\n\n\n  var addFilter = function addFilter(key, cb) {\n    return filters.push({\n      key: key,\n      cb: cb\n    });\n  };\n\n  var extendDefaultOptions = function extendDefaultOptions(additionalOptions) {\n    return Object.assign(defaultOptions, additionalOptions);\n  };\n\n  var getOptions = function getOptions() {\n    return Object.assign({}, defaultOptions);\n  };\n\n  var setOptions = function setOptions(opts) {\n    forin(opts, function (key, value) {\n      // key does not exist, so this option cannot be set\n      if (!defaultOptions[key]) {\n        return;\n      }\n\n      defaultOptions[key][0] = getValueByType(value, defaultOptions[key][0], defaultOptions[key][1]);\n    });\n  }; // default options on app\n\n\n  var defaultOptions = {\n    // the id to add to the root element\n    id: [null, Type.STRING],\n    // input field name to use\n    name: ['filepond', Type.STRING],\n    // disable the field\n    disabled: [false, Type.BOOLEAN],\n    // classname to put on wrapper\n    className: [null, Type.STRING],\n    // is the field required\n    required: [false, Type.BOOLEAN],\n    // Allow media capture when value is set\n    captureMethod: [null, Type.STRING],\n    // - \"camera\", \"microphone\" or \"camcorder\",\n    // - Does not work with multiple on apple devices\n    // - If set, acceptedFileTypes must be made to match with media wildcard \"image/*\", \"audio/*\" or \"video/*\"\n    // Feature toggles\n    allowDrop: [true, Type.BOOLEAN],\n    // Allow dropping of files\n    allowBrowse: [true, Type.BOOLEAN],\n    // Allow browsing the file system\n    allowPaste: [true, Type.BOOLEAN],\n    // Allow pasting files\n    allowMultiple: [false, Type.BOOLEAN],\n    // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)\n    allowReplace: [true, Type.BOOLEAN],\n    // Allow dropping a file on other file to replace it (only works when multiple is set to false)\n    allowRevert: [true, Type.BOOLEAN],\n    // Allows user to revert file upload\n    // Revert mode\n    forceRevert: [false, Type.BOOLEAN],\n    // Set to 'force' to require the file to be reverted before removal\n    // Input requirements\n    maxFiles: [null, Type.INT],\n    // Max number of files\n    checkValidity: [false, Type.BOOLEAN],\n    // Enables custom validity messages\n    // Where to put file\n    itemInsertLocationFreedom: [true, Type.BOOLEAN],\n    // Set to false to always add items to begin or end of list\n    itemInsertLocation: ['before', Type.STRING],\n    // Default index in list to add items that have been dropped at the top of the list\n    itemInsertInterval: [75, Type.INT],\n    // Drag 'n Drop related\n    dropOnPage: [false, Type.BOOLEAN],\n    // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)\n    dropOnElement: [true, Type.BOOLEAN],\n    // Drop needs to happen on element (set to false to also load drops outside of Up)\n    dropValidation: [false, Type.BOOLEAN],\n    // Enable or disable validating files on drop\n    ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],\n    // Upload related\n    instantUpload: [true, Type.BOOLEAN],\n    // Should upload files immidiately on drop\n    maxParallelUploads: [2, Type.INT],\n    // Maximum files to upload in parallel\n    // The server api end points to use for uploading (see docs)\n    server: [null, Type.SERVER_API],\n    // Labels and status messages\n    labelDecimalSeparator: [getDecimalSeparator(), Type.STRING],\n    // Default is locale separator\n    labelThousandsSeparator: [getThousandsSeparator(), Type.STRING],\n    // Default is locale separator\n    labelIdle: ['Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>', Type.STRING],\n    labelInvalidField: ['Field contains invalid files', Type.STRING],\n    labelFileWaitingForSize: ['Waiting for size', Type.STRING],\n    labelFileSizeNotAvailable: ['Size not available', Type.STRING],\n    labelFileCountSingular: ['file in list', Type.STRING],\n    labelFileCountPlural: ['files in list', Type.STRING],\n    labelFileLoading: ['Loading', Type.STRING],\n    labelFileAdded: ['Added', Type.STRING],\n    // assistive only\n    labelFileLoadError: ['Error during load', Type.STRING],\n    labelFileRemoved: ['Removed', Type.STRING],\n    // assistive only\n    labelFileRemoveError: ['Error during remove', Type.STRING],\n    labelFileProcessing: ['Uploading', Type.STRING],\n    labelFileProcessingComplete: ['Upload complete', Type.STRING],\n    labelFileProcessingAborted: ['Upload cancelled', Type.STRING],\n    labelFileProcessingError: ['Error during upload', Type.STRING],\n    labelFileProcessingRevertError: ['Error during revert', Type.STRING],\n    labelTapToCancel: ['tap to cancel', Type.STRING],\n    labelTapToRetry: ['tap to retry', Type.STRING],\n    labelTapToUndo: ['tap to undo', Type.STRING],\n    labelButtonRemoveItem: ['Remove', Type.STRING],\n    labelButtonAbortItemLoad: ['Abort', Type.STRING],\n    labelButtonRetryItemLoad: ['Retry', Type.STRING],\n    labelButtonAbortItemProcessing: ['Cancel', Type.STRING],\n    labelButtonUndoItemProcessing: ['Undo', Type.STRING],\n    labelButtonRetryItemProcessing: ['Retry', Type.STRING],\n    labelButtonProcessItem: ['Upload', Type.STRING],\n    // make sure width and height plus viewpox are even numbers so icons are nicely centered\n    iconRemove: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconProcess: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z\" fill=\"currentColor\" fill-rule=\"evenodd\"/></svg>', Type.STRING],\n    iconRetry: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconUndo: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    iconDone: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n    // event handlers\n    oninit: [null, Type.FUNCTION],\n    onwarning: [null, Type.FUNCTION],\n    onerror: [null, Type.FUNCTION],\n    onactivatefile: [null, Type.FUNCTION],\n    onaddfilestart: [null, Type.FUNCTION],\n    onaddfileprogress: [null, Type.FUNCTION],\n    onaddfile: [null, Type.FUNCTION],\n    onprocessfilestart: [null, Type.FUNCTION],\n    onprocessfileprogress: [null, Type.FUNCTION],\n    onprocessfileabort: [null, Type.FUNCTION],\n    onprocessfilerevert: [null, Type.FUNCTION],\n    onprocessfile: [null, Type.FUNCTION],\n    onprocessfiles: [null, Type.FUNCTION],\n    onremovefile: [null, Type.FUNCTION],\n    onpreparefile: [null, Type.FUNCTION],\n    onupdatefiles: [null, Type.FUNCTION],\n    // hooks\n    beforeDropFile: [null, Type.FUNCTION],\n    beforeAddFile: [null, Type.FUNCTION],\n    beforeRemoveFile: [null, Type.FUNCTION],\n    // styles\n    stylePanelLayout: [null, Type.STRING],\n    // null 'integrated', 'compact', 'circle'\n    stylePanelAspectRatio: [null, Type.STRING],\n    // null or '3:2' or 1\n    styleItemPanelAspectRatio: [null, Type.STRING],\n    styleButtonRemoveItemPosition: ['left', Type.STRING],\n    styleButtonProcessItemPosition: ['right', Type.STRING],\n    styleLoadIndicatorPosition: ['right', Type.STRING],\n    styleProgressIndicatorPosition: ['right', Type.STRING],\n    // custom initial files array\n    files: [[], Type.ARRAY]\n  };\n\n  var getItemByQuery = function getItemByQuery(items, query) {\n    // just return first index\n    if (isEmpty(query)) {\n      return items[0] || null;\n    } // query is index\n\n\n    if (isInt(query)) {\n      return items[query] || null;\n    } // if query is item, get the id\n\n\n    if (typeof query === 'object') {\n      query = query.id;\n    } // assume query is a string and return item by id\n\n\n    return items.find(function (item) {\n      return item.id === query;\n    }) || null;\n  };\n\n  var getNumericAspectRatioFromString = function getNumericAspectRatioFromString(aspectRatio) {\n    if (isEmpty(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (/:/.test(aspectRatio)) {\n      var parts = aspectRatio.split(':');\n      return parts[1] / parts[0];\n    }\n\n    return parseFloat(aspectRatio);\n  };\n\n  var getActiveItems = function getActiveItems(items) {\n    return items.filter(function (item) {\n      return !item.archived;\n    });\n  };\n\n  var Status = {\n    EMPTY: 0,\n    IDLE: 1,\n    // waiting\n    ERROR: 2,\n    // a file is in error state\n    BUSY: 3,\n    // busy processing or loading\n    READY: 4 // all files uploaded\n\n  };\n  var ITEM_ERROR = [ItemStatus.LOAD_ERROR, ItemStatus.PROCESSING_ERROR, ItemStatus.PROCESSING_REVERT_ERROR];\n  var ITEM_BUSY = [ItemStatus.LOADING, ItemStatus.PROCESSING, ItemStatus.PROCESSING_QUEUED, ItemStatus.INIT];\n  var ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];\n\n  var isItemInErrorState = function isItemInErrorState(item) {\n    return ITEM_ERROR.includes(item.status);\n  };\n\n  var isItemInBusyState = function isItemInBusyState(item) {\n    return ITEM_BUSY.includes(item.status);\n  };\n\n  var isItemInReadyState = function isItemInReadyState(item) {\n    return ITEM_READY.includes(item.status);\n  };\n\n  var queries = function queries(state) {\n    return {\n      GET_STATUS: function GET_STATUS() {\n        var items = getActiveItems(state.items);\n        var EMPTY = Status.EMPTY,\n            ERROR = Status.ERROR,\n            BUSY = Status.BUSY,\n            IDLE = Status.IDLE,\n            READY = Status.READY;\n        if (items.length === 0) return EMPTY;\n        if (items.some(isItemInErrorState)) return ERROR;\n        if (items.some(isItemInBusyState)) return BUSY;\n        if (items.some(isItemInReadyState)) return READY;\n        return IDLE;\n      },\n      GET_ITEM: function GET_ITEM(query) {\n        return getItemByQuery(state.items, query);\n      },\n      GET_ACTIVE_ITEM: function GET_ACTIVE_ITEM(query) {\n        return getItemByQuery(getActiveItems(state.items), query);\n      },\n      GET_ACTIVE_ITEMS: function GET_ACTIVE_ITEMS(query) {\n        return getActiveItems(state.items);\n      },\n      GET_ITEMS: function GET_ITEMS(query) {\n        return state.items;\n      },\n      GET_ITEM_NAME: function GET_ITEM_NAME(query) {\n        var item = getItemByQuery(state.items, query);\n        return item ? item.filename : null;\n      },\n      GET_ITEM_SIZE: function GET_ITEM_SIZE(query) {\n        var item = getItemByQuery(state.items, query);\n        return item ? item.fileSize : null;\n      },\n      GET_STYLES: function GET_STYLES() {\n        return Object.keys(state.options).filter(function (key) {\n          return /^style/.test(key);\n        }).map(function (option) {\n          return {\n            name: option,\n            value: state.options[option]\n          };\n        });\n      },\n      GET_PANEL_ASPECT_RATIO: function GET_PANEL_ASPECT_RATIO() {\n        var isShapeCircle = /circle/.test(state.options.stylePanelLayout);\n        var aspectRatio = isShapeCircle ? 1 : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);\n        return aspectRatio;\n      },\n      GET_ITEM_PANEL_ASPECT_RATIO: function GET_ITEM_PANEL_ASPECT_RATIO() {\n        return state.options.styleItemPanelAspectRatio;\n      },\n      GET_ITEMS_BY_STATUS: function GET_ITEMS_BY_STATUS(status) {\n        return getActiveItems(state.items).filter(function (item) {\n          return item.status === status;\n        });\n      },\n      GET_TOTAL_ITEMS: function GET_TOTAL_ITEMS() {\n        return getActiveItems(state.items).length;\n      },\n      IS_ASYNC: function IS_ASYNC() {\n        return isObject(state.options.server) && (isObject(state.options.server.process) || isFunction(state.options.server.process));\n      }\n    };\n  };\n\n  var hasRoomForItem = function hasRoomForItem(state) {\n    var count = getActiveItems(state.items).length; // if cannot have multiple items, to add one item it should currently not contain items\n\n    if (!state.options.allowMultiple) {\n      return count === 0;\n    } // if allows multiple items, we check if a max item count has been set, if not, there's no limit\n\n\n    var maxFileCount = state.options.maxFiles;\n\n    if (maxFileCount === null) {\n      return true;\n    } // we check if the current count is smaller than the max count, if so, another file can still be added\n\n\n    if (count < maxFileCount) {\n      return true;\n    } // no more room for another file\n\n\n    return false;\n  };\n\n  var limit = function limit(value, min, max) {\n    return Math.max(Math.min(max, value), min);\n  };\n\n  var arrayInsert = function arrayInsert(arr, index, item) {\n    return arr.splice(index, 0, item);\n  };\n\n  var insertItem = function insertItem(items, item, index) {\n    if (isEmpty(item)) {\n      return null;\n    } // if index is undefined, append\n\n\n    if (typeof index === 'undefined') {\n      items.push(item);\n      return item;\n    } // limit the index to the size of the items array\n\n\n    index = limit(index, 0, items.length); // add item to array\n\n    arrayInsert(items, index, item); // expose\n\n    return item;\n  };\n\n  var isBase64DataURI = function isBase64DataURI(str) {\n    return /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i.test(str);\n  };\n\n  var getFilenameFromURL = function getFilenameFromURL(url) {\n    return url.split('/').pop().split('?').shift();\n  };\n\n  var getExtensionFromFilename = function getExtensionFromFilename(name) {\n    return name.split('.').pop();\n  };\n\n  var guesstimateExtension = function guesstimateExtension(type) {\n    // if no extension supplied, exit here\n    if (typeof type !== 'string') {\n      return '';\n    } // get subtype\n\n\n    var subtype = type.split('/').pop(); // is svg subtype\n\n    if (/svg/.test(subtype)) {\n      return 'svg';\n    }\n\n    if (/zip|compressed/.test(subtype)) {\n      return 'zip';\n    }\n\n    if (/plain/.test(subtype)) {\n      return 'txt';\n    }\n\n    if (/msword/.test(subtype)) {\n      return 'doc';\n    } // if is valid subtype\n\n\n    if (/[a-z]+/.test(subtype)) {\n      // always use jpg extension\n      if (subtype === 'jpeg') {\n        return 'jpg';\n      } // return subtype\n\n\n      return subtype;\n    }\n\n    return '';\n  };\n\n  var leftPad = function leftPad(value) {\n    var padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return (padding + value).slice(-padding.length);\n  };\n\n  var getDateString = function getDateString() {\n    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n    return date.getFullYear() + '-' + leftPad(date.getMonth() + 1, '00') + '-' + leftPad(date.getDate(), '00') + '_' + leftPad(date.getHours(), '00') + '-' + leftPad(date.getMinutes(), '00') + '-' + leftPad(date.getSeconds(), '00');\n  };\n\n  var getFileFromBlob = function getFileFromBlob(blob, filename) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var extension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var file = typeof type === 'string' ? blob.slice(0, blob.size, type) : blob.slice(0, blob.size, blob.type);\n    file.lastModifiedDate = new Date(); // if blob has name property, use as filename if no filename supplied\n\n    if (!isString(filename)) {\n      filename = getDateString();\n    } // if filename supplied but no extension and filename has extension\n\n\n    if (filename && extension === null && getExtensionFromFilename(filename)) {\n      file.name = filename;\n    } else {\n      extension = extension || guesstimateExtension(file.type);\n      file.name = filename + (extension ? '.' + extension : '');\n    }\n\n    return file;\n  };\n\n  var getBlobBuilder = function getBlobBuilder() {\n    return window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n  };\n\n  var createBlob = function createBlob(arrayBuffer, mimeType) {\n    var BB = getBlobBuilder();\n\n    if (BB) {\n      var bb = new BB();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mimeType);\n    }\n\n    return new Blob([arrayBuffer], {\n      type: mimeType\n    });\n  };\n\n  var getBlobFromByteStringWithMimeType = function getBlobFromByteStringWithMimeType(byteString, mimeType) {\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return createBlob(ab, mimeType);\n  };\n\n  var getMimeTypeFromBase64DataURI = function getMimeTypeFromBase64DataURI(dataURI) {\n    return (/^data:(.+);/.exec(dataURI) || [])[1] || null;\n  };\n\n  var getBase64DataFromBase64DataURI = function getBase64DataFromBase64DataURI(dataURI) {\n    // get data part of string (remove data:image/jpeg...,)\n    var data = dataURI.split(',')[1]; // remove any whitespace as that causes InvalidCharacterError in IE\n\n    return data.replace(/\\s/g, '');\n  };\n\n  var getByteStringFromBase64DataURI = function getByteStringFromBase64DataURI(dataURI) {\n    return atob(getBase64DataFromBase64DataURI(dataURI));\n  };\n\n  var getBlobFromBase64DataURI = function getBlobFromBase64DataURI(dataURI) {\n    var mimeType = getMimeTypeFromBase64DataURI(dataURI);\n    var byteString = getByteStringFromBase64DataURI(dataURI);\n    return getBlobFromByteStringWithMimeType(byteString, mimeType);\n  };\n\n  var getFileFromBase64DataURI = function getFileFromBase64DataURI(dataURI, filename, extension) {\n    return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);\n  };\n\n  var getFileNameFromHeader = function getFileNameFromHeader(header) {\n    // test if is content disposition header, if not exit\n    if (!/^content-disposition:/i.test(header)) return null; // get filename parts\n\n    var matches = header.split(/filename=|filename\\*=.+''/).splice(1).map(function (name) {\n      return name.trim().replace(/^[\"']|[;\"']{0,2}$/g, '');\n    }).filter(function (name) {\n      return name.length;\n    });\n    return matches.length ? decodeURI(matches[matches.length - 1]) : null;\n  };\n\n  var getFileSizeFromHeader = function getFileSizeFromHeader(header) {\n    if (/content-length:/i.test(header)) {\n      var size = header.match(/[0-9]+/)[0];\n      return size ? parseInt(size, 10) : null;\n    }\n\n    return null;\n  };\n\n  var getTranfserIdFromHeader = function getTranfserIdFromHeader(header) {\n    if (/x-content-transfer-id:/i.test(header)) {\n      var id = (header.split(':')[1] || '').trim();\n      return id || null;\n    }\n\n    return null;\n  };\n\n  var getFileInfoFromHeaders = function getFileInfoFromHeaders(headers) {\n    var info = {\n      source: null,\n      name: null,\n      size: null\n    };\n    var rows = headers.split('\\n');\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var header = _step.value;\n        var name = getFileNameFromHeader(header);\n\n        if (name) {\n          info.name = name;\n          continue;\n        }\n\n        var size = getFileSizeFromHeader(header);\n\n        if (size) {\n          info.size = size;\n          continue;\n        }\n\n        var source = getTranfserIdFromHeader(header);\n\n        if (source) {\n          info.source = source;\n          continue;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return info;\n  };\n\n  var createFileLoader = function createFileLoader(fetchFn) {\n    var state = {\n      source: null,\n      complete: false,\n      progress: 0,\n      size: null,\n      timestamp: null,\n      duration: 0,\n      request: null\n    };\n\n    var getProgress = function getProgress() {\n      return state.progress;\n    };\n\n    var abort = function abort() {\n      if (!state.request) {\n        return;\n      }\n\n      state.request.abort();\n    }; // load source\n\n\n    var load = function load() {\n      // get quick reference\n      var source = state.source;\n      api.fire('init', source); // Load Files\n\n      if (source instanceof File) {\n        api.fire('load', source);\n      } else if (source instanceof Blob) {\n        // Load blobs, set default name to current date\n        api.fire('load', getFileFromBlob(source, source.name));\n      } else if (isBase64DataURI(source)) {\n        // Load base 64, set default name to current date\n        api.fire('load', getFileFromBase64DataURI(source));\n      } else {\n        // Deal as if is external URL, let's load it!\n        loadURL(source);\n      }\n    }; // loads a url\n\n\n    var loadURL = function loadURL(url) {\n      // is remote url and no fetch method supplied\n      if (!fetchFn) {\n        api.fire('error', {\n          type: 'error',\n          body: \"Can't load URL\",\n          code: 400\n        });\n        return;\n      } // set request start\n\n\n      state.timestamp = Date.now(); // load file\n\n      state.request = fetchFn(url, function (response) {\n        // update duration\n        state.duration = Date.now() - state.timestamp; // done!\n\n        state.complete = true; // turn blob response into a file\n\n        if (response instanceof Blob) {\n          response = getFileFromBlob(response, getFilenameFromURL(url));\n        }\n\n        api.fire('load', response instanceof Blob ? response : response.body);\n      }, function (error) {\n        api.fire('error', typeof error === 'string' ? {\n          type: 'error',\n          code: 0,\n          body: error\n        } : error);\n      }, function (computable, current, total) {\n        // collected some meta data already\n        if (total) {\n          state.size = total;\n        } // update duration\n\n\n        state.duration = Date.now() - state.timestamp; // if we can't compute progress, we're not going to fire progress events\n\n        if (!computable) {\n          state.progress = null;\n          return;\n        } // update progress percentage\n\n\n        state.progress = current / total; // expose\n\n        api.fire('progress', state.progress);\n      }, function () {\n        api.fire('abort');\n      }, function (response) {\n        var fileinfo = getFileInfoFromHeaders(typeof response === 'string' ? response : response.headers);\n        api.fire('meta', {\n          size: state.size || fileinfo.size,\n          filename: fileinfo.name,\n          source: fileinfo.source\n        });\n      });\n    };\n\n    var api = Object.assign({}, on(), {\n      setSource: function setSource(source) {\n        return state.source = source;\n      },\n      getProgress: getProgress,\n      // file load progress\n      abort: abort,\n      // abort file load\n      load: load // start load\n\n    });\n    return api;\n  };\n\n  var isGet = function isGet(method) {\n    return /GET|HEAD/.test(method);\n  };\n\n  var sendRequest = function sendRequest(data, url, options) {\n    var api = {\n      onheaders: function onheaders() {},\n      onprogress: function onprogress() {},\n      onload: function onload() {},\n      ontimeout: function ontimeout() {},\n      onerror: function onerror() {},\n      onabort: function onabort() {},\n      abort: function abort() {\n        aborted = true;\n        xhr.abort();\n      }\n    }; // timeout identifier, only used when timeout is defined\n\n    var aborted = false;\n    var headersReceived = false; // set default options\n\n    options = Object.assign({\n      method: 'POST',\n      headers: {},\n      withCredentials: false\n    }, options); // encode url\n\n    url = encodeURI(url); // if method is GET, add any received data to url\n\n    if (isGet(options.method) && data) {\n      url = '' + url + encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data));\n    } // create request\n\n\n    var xhr = new XMLHttpRequest(); // progress of load\n\n    var process = isGet(options.method) ? xhr : xhr.upload;\n\n    process.onprogress = function (e) {\n      // no progress event when aborted ( onprogress is called once after abort() )\n      if (aborted) {\n        return;\n      }\n\n      api.onprogress(e.lengthComputable, e.loaded, e.total);\n    }; // tries to get header info to the app as fast as possible\n\n\n    xhr.onreadystatechange = function () {\n      // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)\n      if (xhr.readyState < 2) {\n        return;\n      } // no server response\n\n\n      if (xhr.readyState === 4 && xhr.status === 0) {\n        return;\n      }\n\n      if (headersReceived) {\n        return;\n      }\n\n      headersReceived = true; // we've probably received some useful data in response headers\n\n      api.onheaders(xhr);\n    }; // load successful\n\n\n    xhr.onload = function () {\n      // is classified as valid response\n      if (xhr.status >= 200 && xhr.status < 300) {\n        api.onload(xhr);\n      } else {\n        api.onerror(xhr);\n      }\n    }; // error during load\n\n\n    xhr.onerror = function () {\n      return api.onerror(xhr);\n    }; // request aborted\n\n\n    xhr.onabort = function () {\n      aborted = true;\n      api.onabort();\n    }; // request timeout\n\n\n    xhr.ontimeout = function () {\n      return api.ontimeout(xhr);\n    }; // open up open up!\n\n\n    xhr.open(options.method, url, true); // set timeout if defined (do it after open so IE11 plays ball)\n\n    if (isInt(options.timeout)) {\n      xhr.timeout = options.timeout;\n    } // add headers\n\n\n    Object.keys(options.headers).forEach(function (key) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }); // set type of response\n\n    if (options.responseType) {\n      xhr.responseType = options.responseType;\n    } // set credentials\n\n\n    if (options.withCredentials) {\n      xhr.withCredentials = true;\n    } // let's send our data\n\n\n    xhr.send(data);\n    return api;\n  };\n\n  var createResponse = function createResponse(type, code, body, headers) {\n    return {\n      type: type,\n      code: code,\n      body: body,\n      headers: headers\n    };\n  };\n\n  var createTimeoutResponse = function createTimeoutResponse(cb) {\n    return function (xhr) {\n      cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));\n    };\n  };\n\n  var createFetchFunction = function createFetchFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments.length > 1 ? arguments[1] : undefined; // custom handler (should also handle file, load, error, progress and abort)\n\n    if (typeof action === 'function') {\n      return action;\n    } // no action supplied\n\n\n    if (!action || !isString(action.url)) {\n      return null;\n    } // set onload hanlder\n\n\n    var onload = action.onload || function (res) {\n      return res;\n    };\n\n    var onerror = action.onerror || function (res) {\n      return null;\n    }; // internal handler\n\n\n    return function (url, load, error, progress, abort, headers) {\n      // do local or remote request based on if the url is external\n      var request = sendRequest(url, apiUrl + action.url, Object.assign({}, action, {\n        responseType: 'blob'\n      }));\n\n      request.onload = function (xhr) {\n        // get headers\n        var headers = xhr.getAllResponseHeaders(); // get filename\n\n        var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url); // create response\n\n        load(createResponse('load', xhr.status, getFileFromBlob(onload(xhr.response), filename), headers));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.onheaders = function (xhr) {\n        headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      request.onprogress = progress;\n      request.onabort = abort; // should return request\n\n      return request;\n    };\n  };\n  /*\n                                                     function signature:\n                                                       (file, metadata, load, error, progress, abort) => {\n                                                         return {\n                                                         abort:() => {}\n                                                       }\n                                                     }\n                                                     */\n\n\n  var createProcessorFunction = function createProcessorFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var name = arguments.length > 2 ? arguments[2] : undefined; // custom handler (should also handle file, load, error, progress and abort)\n\n    if (typeof action === 'function') {\n      return function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return action.apply(void 0, [name].concat(params));\n      };\n    } // no action supplied\n\n\n    if (!action || !isString(action.url)) {\n      return null;\n    } // internal handler\n\n\n    return function (file, metadata, load, error, progress, abort) {\n      // set onload hanlder\n      var ondata = action.ondata || function (fd) {\n        return fd;\n      };\n\n      var onload = action.onload || function (res) {\n        return res;\n      };\n\n      var onerror = action.onerror || function (res) {\n        return null;\n      }; // no file received\n\n\n      if (!file) return; // create formdata object\n\n      var formData = new FormData(); // add metadata under same name\n\n      if (isObject(metadata)) {\n        formData.append(name, JSON.stringify(metadata));\n      } // Turn into an array of objects so no matter what the input, we can handle it the same way\n\n\n      (file instanceof Blob ? [{\n        name: null,\n        file: file\n      }] : file).forEach(function (item) {\n        formData.append(name, item.file, item.name === null ? item.file.name : '' + item.name + item.file.name);\n      }); // send request object\n\n      var request = sendRequest(ondata(formData), apiUrl + action.url, action);\n\n      request.onload = function (xhr) {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      request.onprogress = progress;\n      request.onabort = abort; // should return request\n\n      return request;\n    };\n  };\n  /*\n                                                      function signature:\n                                                      (uniqueFileId, load, error) => { }\n                                                      */\n\n\n  var createRevertFunction = function createRevertFunction() {\n    var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var action = arguments.length > 1 ? arguments[1] : undefined; // is custom implementation\n\n    if (typeof action === 'function') {\n      return action;\n    } // no action supplied, return stub function, interface will work, but file won't be removed\n\n\n    if (!action || !isString(action.url)) {\n      return function (uniqueFileId, load) {\n        return load();\n      };\n    } // set onload hanlder\n\n\n    var onload = action.onload || function (res) {\n      return res;\n    };\n\n    var onerror = action.onerror || function (res) {\n      return null;\n    }; // internal implementation\n\n\n    return function (uniqueFileId, load, error) {\n      var request = sendRequest(uniqueFileId, apiUrl + action.url, action // contains method, headers and withCredentials properties\n      );\n\n      request.onload = function (xhr) {\n        load(createResponse('load', xhr.status, onload(xhr.response), xhr.getAllResponseHeaders()));\n      };\n\n      request.onerror = function (xhr) {\n        error(createResponse('error', xhr.status, onerror(xhr.response) || xhr.statusText, xhr.getAllResponseHeaders()));\n      };\n\n      request.ontimeout = createTimeoutResponse(error);\n      return request;\n    };\n  };\n\n  var getRandomNumber = function getRandomNumber() {\n    var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return min + Math.random() * (max - min);\n  };\n\n  var createPerceivedPerformanceUpdater = function createPerceivedPerformanceUpdater(cb) {\n    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var tickMin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 25;\n    var tickMax = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 250;\n    var timeout = null;\n    var start = Date.now();\n\n    var tick = function tick() {\n      var runtime = Date.now() - start;\n      var delay = getRandomNumber(tickMin, tickMax);\n\n      if (runtime + delay > duration) {\n        delay = runtime + delay - duration;\n      }\n\n      var progress = runtime / duration;\n\n      if (progress >= 1) {\n        cb(1);\n        return;\n      }\n\n      cb(progress);\n      timeout = setTimeout(tick, delay);\n    };\n\n    tick();\n    return {\n      clear: function clear() {\n        clearTimeout(timeout);\n      }\n    };\n  };\n\n  var createFileProcessor = function createFileProcessor(processFn) {\n    var state = {\n      complete: false,\n      perceivedProgress: 0,\n      perceivedPerformanceUpdater: null,\n      progress: null,\n      timestamp: null,\n      perceivedDuration: 0,\n      duration: 0,\n      request: null,\n      response: null\n    };\n\n    var process = function process(file, metadata) {\n      var progressFn = function progressFn() {\n        // we've not yet started the real download, stop here\n        // the request might not go through, for instance, there might be some server trouble\n        // if state.progress is null, the server does not allow computing progress and we show the spinner instead\n        if (state.duration === 0 || state.progress === null) {\n          return;\n        } // as we're now processing, fire the progress event\n\n\n        api.fire('progress', api.getProgress());\n      };\n\n      var completeFn = function completeFn() {\n        state.complete = true;\n        api.fire('load-perceived', state.response.body);\n      }; // let's start processing\n\n\n      api.fire('start'); // set request start\n\n      state.timestamp = Date.now(); // create perceived performance progress indicator\n\n      state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(function (progress) {\n        state.perceivedProgress = progress;\n        state.perceivedDuration = Date.now() - state.timestamp;\n        progressFn(); // if fake progress is done, and a response has been received,\n        // and we've not yet called the complete method\n\n        if (state.response && state.perceivedProgress === 1 && !state.complete) {\n          // we done!\n          completeFn();\n        }\n      }, // random delay as in a list of files you start noticing\n      // files uploading at the exact same speed\n      getRandomNumber(750, 1500)); // remember request so we can abort it later\n\n      state.request = processFn( // the file to process\n      file, // the metadata to send along\n      metadata, // callbacks (load, error, progress, abort)\n      // load expects the body to be a server id if\n      // you want to make use of revert\n      function (response) {\n        // we put the response in state so we can access\n        // it outside of this method\n        state.response = isObject(response) ? response : {\n          type: 'load',\n          code: 200,\n          body: '' + response,\n          headers: {}\n        }; // update duration\n\n        state.duration = Date.now() - state.timestamp; // force progress to 1 as we're now done\n\n        state.progress = 1; // actual load is done let's share results\n\n        api.fire('load', state.response.body); // we are really done\n        // if perceived progress is 1 ( wait for perceived progress to complete )\n        // or if server does not support progress ( null )\n\n        if (state.perceivedProgress === 1) {\n          completeFn();\n        }\n      }, // error is expected to be an object with type, code, body\n      function (error) {\n        // cancel updater\n        state.perceivedPerformanceUpdater.clear(); // update others about this error\n\n        api.fire('error', isObject(error) ? error : {\n          type: 'error',\n          code: 0,\n          body: '' + error\n        });\n      }, // actual processing progress\n      function (computable, current, total) {\n        // update actual duration\n        state.duration = Date.now() - state.timestamp; // update actual progress\n\n        state.progress = computable ? current / total : null;\n        progressFn();\n      }, // abort does not expect a value\n      function () {\n        // stop updater\n        state.perceivedPerformanceUpdater.clear(); // fire the abort event so we can switch visuals\n\n        api.fire('abort', state.response ? state.response.body : null);\n      });\n    };\n\n    var abort = function abort() {\n      // no request running, can't abort\n      if (!state.request) return; // stop updater\n\n      state.perceivedPerformanceUpdater.clear(); // abort actual request\n\n      state.request.abort(); // if has response object, we've completed the request\n\n      state.complete = true;\n    };\n\n    var reset = function reset() {\n      abort();\n      state.complete = false;\n      state.perceivedProgress = 0;\n      state.progress = 0;\n      state.timestamp = null;\n      state.perceivedDuration = 0;\n      state.duration = 0;\n      state.request = null;\n      state.response = null;\n    };\n\n    var getProgress = function getProgress() {\n      return state.progress ? Math.min(state.progress, state.perceivedProgress) : null;\n    };\n\n    var getDuration = function getDuration() {\n      return Math.min(state.duration, state.perceivedDuration);\n    };\n\n    var api = Object.assign({}, on(), {\n      process: process,\n      // start processing file\n      abort: abort,\n      // abort active process request\n      getProgress: getProgress,\n      getDuration: getDuration,\n      reset: reset\n    });\n    return api;\n  };\n\n  var getFilenameWithoutExtension = function getFilenameWithoutExtension(name) {\n    return name.substr(0, name.lastIndexOf('.')) || name;\n  };\n\n  var createFileStub = function createFileStub(source) {\n    var data = [source.name, source.size, source.type]; // is blob or base64, then we need to set the name\n\n    if (source instanceof Blob || isBase64DataURI(source)) {\n      data[0] = source.name || getDateString();\n    } else if (isBase64DataURI(source)) {\n      // if is base64 data uri we need to determine the average size and type\n      data[1] = source.length;\n      data[2] = getMimeTypeFromBase64DataURI(source);\n    } else if (isString(source)) {\n      // url\n      data[0] = getFilenameFromURL(source);\n      data[1] = 0;\n      data[2] = 'application/octet-stream';\n    }\n\n    return {\n      name: data[0],\n      size: data[1],\n      type: data[2]\n    };\n  };\n\n  var FileOrigin = {\n    INPUT: 1,\n    LIMBO: 2,\n    LOCAL: 3\n  };\n\n  var isFile = function isFile(value) {\n    return value instanceof File || value instanceof Blob && value.name;\n  };\n\n  var deepCloneObject = function deepCloneObject(src) {\n    if (!isObject(src)) return src;\n    var target = isArray(src) ? [] : {};\n\n    for (var key in src) {\n      if (!src.hasOwnProperty(key)) continue;\n      var v = src[key];\n      target[key] = v && isObject(v) ? deepCloneObject(v) : v;\n    }\n\n    return target;\n  };\n\n  var createItem = function createItem() {\n    var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var serverFileReference = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null; // unique id for this item, is used to identify the item across views\n\n    var id = getUniqueId();\n    /**\n     * Internal item state\n     */\n\n    var state = {\n      // is archived\n      archived: false,\n      // if is frozen, no longer fires events\n      frozen: false,\n      // removed from view\n      released: false,\n      // original source\n      source: null,\n      // file model reference\n      file: file,\n      // id of file on server\n      serverFileReference: serverFileReference,\n      // current item status\n      status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,\n      // active processes\n      activeLoader: null,\n      activeProcessor: null\n    }; // callback used when abort processing is called to link back to the resolve method\n\n    var abortProcessingRequestComplete = null;\n    /**\n     * Externally added item metadata\n     */\n\n    var metadata = {}; // item data\n\n    var setStatus = function setStatus(status) {\n      return state.status = status;\n    }; // fire event unless the item has been archived\n\n\n    var fire = function fire(event) {\n      if (state.released || state.frozen) return;\n\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      api.fire.apply(api, [event].concat(params));\n    }; // file data\n\n\n    var getFileExtension = function getFileExtension() {\n      return getExtensionFromFilename(state.file.name);\n    };\n\n    var getFileType = function getFileType() {\n      return state.file.type;\n    };\n\n    var getFileSize = function getFileSize() {\n      return state.file.size;\n    };\n\n    var getFile = function getFile() {\n      return state.file;\n    }; //\n    // logic to load a file\n    //\n\n\n    var load = function load(source, loader, onload) {\n      // remember the original item source\n      state.source = source; // file stub is already there\n\n      if (state.file) {\n        fire('load-skip');\n        return;\n      } // set a stub file object while loading the actual data\n\n\n      state.file = createFileStub(source); // starts loading\n\n      loader.on('init', function () {\n        fire('load-init');\n      }); // we'eve received a size indication, let's update the stub\n\n      loader.on('meta', function (meta) {\n        // set size of file stub\n        state.file.size = meta.size; // set name of file stub\n\n        state.file.filename = meta.filename; // if has received source, we done\n\n        if (meta.source) {\n          origin = FileOrigin.LIMBO;\n          state.serverFileReference = meta.source;\n          state.status = ItemStatus.PROCESSING_COMPLETE;\n        } // size has been updated\n\n\n        fire('load-meta');\n      }); // the file is now loading we need to update the progress indicators\n\n      loader.on('progress', function (progress) {\n        setStatus(ItemStatus.LOADING);\n        fire('load-progress', progress);\n      }); // an error was thrown while loading the file, we need to switch to error state\n\n      loader.on('error', function (error) {\n        setStatus(ItemStatus.LOAD_ERROR);\n        fire('load-request-error', error);\n      }); // user or another process aborted the file load (cannot retry)\n\n      loader.on('abort', function () {\n        setStatus(ItemStatus.INIT);\n        fire('load-abort');\n      }); // done loading\n\n      loader.on('load', function (file) {\n        // as we've now loaded the file the loader is no longer required\n        state.activeLoader = null; // called when file has loaded succesfully\n\n        var success = function success(result) {\n          // set (possibly) transformed file\n          state.file = isFile(result) ? result : state.file; // file received\n\n          if (origin === FileOrigin.LIMBO && state.serverFileReference) {\n            setStatus(ItemStatus.PROCESSING_COMPLETE);\n          } else {\n            setStatus(ItemStatus.IDLE);\n          }\n\n          fire('load');\n        };\n\n        var error = function error(result) {\n          // set original file\n          state.file = file;\n          fire('load-meta');\n          setStatus(ItemStatus.LOAD_ERROR);\n          fire('load-file-error', result);\n        }; // if we already have a server file reference, we don't need to call the onload method\n\n\n        if (state.serverFileReference) {\n          success(file);\n          return;\n        } // no server id, let's give this file the full treatment\n\n\n        onload(file, success, error);\n      }); // set loader source data\n\n      loader.setSource(source); // set as active loader\n\n      state.activeLoader = loader; // load the source data\n\n      loader.load();\n    };\n\n    var retryLoad = function retryLoad() {\n      if (!state.activeLoader) {\n        return;\n      }\n\n      state.activeLoader.load();\n    };\n\n    var abortLoad = function abortLoad() {\n      if (state.activeLoader) {\n        state.activeLoader.abort();\n        return;\n      }\n\n      setStatus(ItemStatus.INIT);\n      fire('load-abort');\n    }; //\n    // logic to process a file\n    //\n\n\n    var process = function process(processor, onprocess) {\n      // now processing\n      setStatus(ItemStatus.PROCESSING); // reset abort callback\n\n      abortProcessingRequestComplete = null; // if no file loaded we'll wait for the load event\n\n      if (!(state.file instanceof Blob)) {\n        api.on('load', function () {\n          process(processor, onprocess);\n        });\n        return;\n      } // setup processor\n\n\n      processor.on('load', function (serverFileReference) {\n        // need this id to be able to revert the upload\n        state.serverFileReference = serverFileReference;\n      });\n      processor.on('load-perceived', function (serverFileReference) {\n        // no longer required\n        state.activeProcessor = null; // need this id to be able to rever the upload\n\n        state.serverFileReference = serverFileReference;\n        setStatus(ItemStatus.PROCESSING_COMPLETE);\n        fire('process-complete', serverFileReference);\n      });\n      processor.on('start', function () {\n        fire('process-start');\n      });\n      processor.on('error', function (error) {\n        state.activeProcessor = null;\n        setStatus(ItemStatus.PROCESSING_ERROR);\n        fire('process-error', error);\n      });\n      processor.on('abort', function (serverFileReference) {\n        state.activeProcessor = null; // if file was uploaded but processing was cancelled during perceived processor time store file reference\n\n        state.serverFileReference = serverFileReference;\n        setStatus(ItemStatus.IDLE);\n        fire('process-abort'); // has timeout so doesn't interfere with remove action\n\n        if (abortProcessingRequestComplete) {\n          abortProcessingRequestComplete();\n        }\n      });\n      processor.on('progress', function (progress) {\n        fire('process-progress', progress);\n      }); // when successfully transformed\n\n      var success = function success(file) {\n        // if was archived in the mean time, don't process\n        if (state.archived) return; // process file!\n\n        processor.process(file, Object.assign({}, metadata));\n      }; // something went wrong during transform phase\n\n\n      var error = function error(result) {}; // start processing the file\n\n\n      onprocess(state.file, success, error); // set as active processor\n\n      state.activeProcessor = processor;\n    };\n\n    var requestProcessing = function requestProcessing() {\n      setStatus(ItemStatus.PROCESSING_QUEUED);\n    };\n\n    var abortProcessing = function abortProcessing() {\n      return new Promise(function (resolve) {\n        if (!state.activeProcessor) {\n          setStatus(ItemStatus.IDLE);\n          fire('process-abort');\n          resolve();\n          return;\n        }\n\n        abortProcessingRequestComplete = function abortProcessingRequestComplete() {\n          resolve();\n        };\n\n        state.activeProcessor.abort();\n      });\n    }; //\n    // logic to revert a processed file\n    //\n\n\n    var revert = function revert(revertFileUpload, forceRevert) {\n      return new Promise(function (resolve, reject) {\n        // cannot revert without a server id for this process\n        if (state.serverFileReference === null) {\n          resolve();\n          return;\n        } // revert the upload (fire and forget)\n\n\n        revertFileUpload(state.serverFileReference, function () {\n          // reset file server id as now it's no available on the server\n          state.serverFileReference = null;\n          resolve();\n        }, function (error) {\n          // don't set error state when reverting is optional, it will always resolve\n          if (!forceRevert) {\n            resolve();\n            return;\n          } // oh no errors\n\n\n          setStatus(ItemStatus.PROCESSING_REVERT_ERROR);\n          fire('process-revert-error');\n          reject(error);\n        }); // fire event\n\n        setStatus(ItemStatus.IDLE);\n        fire('process-revert');\n      });\n    }; // exposed methods\n\n\n    var _setMetadata = function setMetadata(key, value, silent) {\n      var keys = key.split('.');\n      var root = keys[0];\n      var last = keys.pop();\n      var data = metadata;\n      keys.forEach(function (key) {\n        return data = data[key];\n      }); // compare old value against new value, if they're the same, we're not updating\n\n      if (JSON.stringify(data[last]) === JSON.stringify(value)) {\n        return;\n      } // update value\n\n\n      data[last] = value;\n      if (silent) return;\n      fire('metadata-update', {\n        key: root,\n        value: metadata[root]\n      });\n    };\n\n    var getMetadata = function getMetadata(key) {\n      return deepCloneObject(key ? metadata[key] : metadata);\n    };\n\n    var api = Object.assign({\n      id: {\n        get: function get() {\n          return id;\n        }\n      },\n      origin: {\n        get: function get() {\n          return origin;\n        }\n      },\n      serverId: {\n        get: function get() {\n          return state.serverFileReference;\n        }\n      },\n      status: {\n        get: function get() {\n          return state.status;\n        }\n      },\n      filename: {\n        get: function get() {\n          return state.file.name;\n        }\n      },\n      filenameWithoutExtension: {\n        get: function get() {\n          return getFilenameWithoutExtension(state.file.name);\n        }\n      },\n      fileExtension: {\n        get: getFileExtension\n      },\n      fileType: {\n        get: getFileType\n      },\n      fileSize: {\n        get: getFileSize\n      },\n      file: {\n        get: getFile\n      },\n      source: {\n        get: function get() {\n          return state.source;\n        }\n      },\n      getMetadata: getMetadata,\n      setMetadata: function setMetadata(key, value, silent) {\n        if (isObject(key)) {\n          var data = key;\n          Object.keys(data).forEach(function (key) {\n            _setMetadata(key, data[key], value);\n          });\n          return key;\n        }\n\n        _setMetadata(key, value, silent);\n\n        return value;\n      },\n      extend: function extend(name, handler) {\n        return itemAPI[name] = handler;\n      },\n      abortLoad: abortLoad,\n      retryLoad: retryLoad,\n      requestProcessing: requestProcessing,\n      abortProcessing: abortProcessing,\n      load: load,\n      process: process,\n      revert: revert\n    }, on(), {\n      freeze: function freeze() {\n        return state.frozen = true;\n      },\n      release: function release() {\n        return state.released = true;\n      },\n      released: {\n        get: function get() {\n          return state.released;\n        }\n      },\n      archive: function archive() {\n        return state.archived = true;\n      },\n      archived: {\n        get: function get() {\n          return state.archived;\n        }\n      }\n    }); // create it here instead of returning it instantly so we can extend it later\n\n    var itemAPI = createObject(api);\n    return itemAPI;\n  };\n\n  var getItemIndexByQuery = function getItemIndexByQuery(items, query) {\n    // just return first index\n    if (isEmpty(query)) {\n      return 0;\n    } // invalid queries\n\n\n    if (!isString(query)) {\n      return -1;\n    } // return item by id (or -1 if not found)\n\n\n    return items.findIndex(function (item) {\n      return item.id === query;\n    });\n  };\n\n  var getItemById = function getItemById(items, itemId) {\n    var index = getItemIndexByQuery(items, itemId);\n\n    if (index < 0) {\n      return;\n    }\n\n    return items[index] || null;\n  };\n\n  var fetchLocal = function fetchLocal(url, load, error, progress, abort, headers) {\n    var request = sendRequest(null, url, {\n      method: 'GET',\n      responseType: 'blob'\n    });\n\n    request.onload = function (xhr) {\n      // get headers\n      var headers = xhr.getAllResponseHeaders(); // get filename\n\n      var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url); // create response\n\n      load(createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers));\n    };\n\n    request.onerror = function (xhr) {\n      error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));\n    };\n\n    request.onheaders = function (xhr) {\n      headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));\n    };\n\n    request.ontimeout = createTimeoutResponse(error);\n    request.onprogress = progress;\n    request.onabort = abort; // should return request\n\n    return request;\n  };\n\n  var getDomainFromURL = function getDomainFromURL(url) {\n    if (url.indexOf('//') === 0) {\n      url = location.protocol + url;\n    }\n\n    return url.toLowerCase().replace('blob:', '').replace(/([a-z])?:\\/\\//, '$1').split('/')[0];\n  };\n\n  var isExternalURL = function isExternalURL(url) {\n    return (url.indexOf(':') > -1 || url.indexOf('//') > -1) && getDomainFromURL(location.href) !== getDomainFromURL(url);\n  };\n\n  var dynamicLabel = function dynamicLabel(label) {\n    return function () {\n      return isFunction(label) ? label.apply(void 0, arguments) : label;\n    };\n  };\n\n  var isMockItem = function isMockItem(item) {\n    return !isFile(item.file);\n  };\n\n  var listUpdated = function listUpdated(dispatch, state) {\n    clearTimeout(state.listUpdateTimeout);\n    state.listUpdateTimeout = setTimeout(function () {\n      dispatch('DID_UPDATE_ITEMS', {\n        items: getActiveItems(state.items)\n      });\n    }, 0);\n  };\n\n  var optionalPromise = function optionalPromise(fn) {\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    return new Promise(function (resolve) {\n      if (!fn) {\n        return resolve(true);\n      }\n\n      var result = fn.apply(void 0, params);\n\n      if (result == null) {\n        return resolve(true);\n      }\n\n      if (typeof result === 'boolean') {\n        return resolve(result);\n      }\n\n      if (typeof result.then === 'function') {\n        result.then(resolve);\n      }\n    });\n  };\n\n  var sortItems = function sortItems(state, compare) {\n    state.items.sort(function (a, b) {\n      return compare(createItemAPI(a), createItemAPI(b));\n    });\n  }; // returns item based on state\n\n\n  var getItemByQueryFromState = function getItemByQueryFromState(state, itemHandler) {\n    return function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query,\n          _ref$success = _ref.success,\n          success = _ref$success === void 0 ? function () {} : _ref$success,\n          _ref$failure = _ref.failure,\n          failure = _ref$failure === void 0 ? function () {} : _ref$failure;\n\n      var item = getItemByQuery(state.items, query);\n\n      if (!item) {\n        failure({\n          error: createResponse('error', 0, 'Item not found'),\n          file: null\n        });\n        return;\n      }\n\n      itemHandler(item, success, failure);\n    };\n  };\n\n  var actions = function actions(dispatch, query, state) {\n    return {\n      /**\n       * Aborts all ongoing processes\n       */\n      ABORT_ALL: function ABORT_ALL() {\n        getActiveItems(state.items).forEach(function (item) {\n          item.freeze();\n          item.abortLoad();\n          item.abortProcessing();\n        });\n      },\n\n      /**\n       * Sets initial files\n       */\n      DID_SET_FILES: function DID_SET_FILES(_ref2) {\n        var _ref2$value = _ref2.value,\n            value = _ref2$value === void 0 ? [] : _ref2$value; // map values to file objects\n\n        var files = value.map(function (file) {\n          return {\n            source: file.source ? file.source : file,\n            options: file.options\n          };\n        }); // loop over files, if file is in list, leave it be, if not, remove\n        // test if items should be moved\n\n        var activeItems = getActiveItems(state.items);\n        activeItems.forEach(function (item) {\n          // if item not is in new value, remove\n          if (!files.find(function (file) {\n            return file.source === item.source || file.source === item.file;\n          })) {\n            dispatch('REMOVE_ITEM', {\n              query: item\n            });\n          }\n        }); // add new files\n\n        activeItems = getActiveItems(state.items);\n        files.forEach(function (file, index) {\n          // if file is already in list\n          if (activeItems.find(function (item) {\n            return item.source === file.source || item.file === file.source;\n          })) return; // not in list, add\n\n          dispatch('ADD_ITEM', Object.assign({}, file, {\n            interactionMethod: InteractionMethod.NONE,\n            index: index\n          }));\n        });\n      },\n      DID_UPDATE_ITEM_METADATA: function DID_UPDATE_ITEM_METADATA(_ref3) {\n        var id = _ref3.id,\n            change = _ref3.change;\n        var item = getItemById(state.items, id); // only revert and attempt to upload when we're uploading to a server\n\n        if (!query('IS_ASYNC')) {\n          // should we update the output data\n          applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n            item: item,\n            query: query\n          }).then(function (shouldPrepareOutput) {\n            if (!shouldPrepareOutput) {\n              return;\n            }\n\n            dispatch('REQUEST_PREPARE_OUTPUT', {\n              query: id,\n              item: item,\n              ready: function ready(file) {\n                dispatch('DID_PREPARE_OUTPUT', {\n                  id: id,\n                  file: file\n                });\n              }\n            }, true);\n          });\n          return;\n        } // for async scenarios\n\n\n        var upload = function upload() {\n          // we push this forward a bit so the interface is updated correctly\n          setTimeout(function () {\n            dispatch('REQUEST_ITEM_PROCESSING', {\n              query: id\n            });\n          }, 32);\n        };\n\n        var revert = function revert(doUpload) {\n          item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(doUpload ? upload : function () {}).catch(function () {});\n        };\n\n        var abort = function abort(doUpload) {\n          item.abortProcessing().then(doUpload ? upload : function () {});\n        }; // if we should re-upload the file immidiately\n\n\n        if (item.status === ItemStatus.PROCESSING_COMPLETE) {\n          return revert(state.options.instantUpload);\n        } // if currently uploading, cancel upload\n\n\n        if (item.status === ItemStatus.PROCESSING) {\n          return abort(state.options.instantUpload);\n        }\n\n        if (state.options.instantUpload) {\n          upload();\n        }\n      },\n      SORT: function SORT(_ref4) {\n        var compare = _ref4.compare;\n        sortItems(state, compare);\n      },\n      ADD_ITEMS: function ADD_ITEMS(_ref5) {\n        var items = _ref5.items,\n            index = _ref5.index,\n            interactionMethod = _ref5.interactionMethod,\n            _ref5$success = _ref5.success,\n            success = _ref5$success === void 0 ? function () {} : _ref5$success,\n            _ref5$failure = _ref5.failure,\n            failure = _ref5$failure === void 0 ? function () {} : _ref5$failure;\n        var currentIndex = index;\n\n        if (index === -1 || typeof index === 'undefined') {\n          var insertLocation = query('GET_ITEM_INSERT_LOCATION');\n          var totalItems = query('GET_TOTAL_ITEMS');\n          currentIndex = insertLocation === 'before' ? 0 : totalItems;\n        }\n\n        var ignoredFiles = query('GET_IGNORED_FILES');\n\n        var isValidFile = function isValidFile(source) {\n          return isFile(source) ? !ignoredFiles.includes(source.name.toLowerCase()) : !isEmpty(source);\n        };\n\n        var validItems = items.filter(isValidFile);\n        var promises = validItems.map(function (source) {\n          return new Promise(function (resolve, reject) {\n            dispatch('ADD_ITEM', {\n              interactionMethod: interactionMethod,\n              source: source.source || source,\n              success: resolve,\n              failure: reject,\n              index: currentIndex++,\n              options: source.options || {}\n            });\n          });\n        });\n        Promise.all(promises).then(success).catch(failure);\n      },\n\n      /**\n       * @param source\n       * @param index\n       * @param interactionMethod\n       */\n      ADD_ITEM: function ADD_ITEM(_ref6) {\n        var source = _ref6.source,\n            _ref6$index = _ref6.index,\n            index = _ref6$index === void 0 ? -1 : _ref6$index,\n            interactionMethod = _ref6.interactionMethod,\n            _ref6$success = _ref6.success,\n            success = _ref6$success === void 0 ? function () {} : _ref6$success,\n            _ref6$failure = _ref6.failure,\n            failure = _ref6$failure === void 0 ? function () {} : _ref6$failure,\n            _ref6$options = _ref6.options,\n            options = _ref6$options === void 0 ? {} : _ref6$options; // if no source supplied\n\n        if (isEmpty(source)) {\n          failure({\n            error: createResponse('error', 0, 'No source'),\n            file: null\n          });\n          return;\n        } // filter out invalid file items, used to filter dropped directory contents\n\n\n        if (isFile(source) && state.options.ignoredFiles.includes(source.name.toLowerCase())) {\n          // fail silently\n          return;\n        } // test if there's still room in the list of files\n\n\n        if (!hasRoomForItem(state)) {\n          // if multiple allowed, we can't replace\n          // or if only a single item is allowed but we're not allowed to replace it we exit\n          if (state.options.allowMultiple || !state.options.allowMultiple && !state.options.allowReplace) {\n            var error = createResponse('warning', 0, 'Max files');\n            dispatch('DID_THROW_MAX_FILES', {\n              source: source,\n              error: error\n            });\n            failure({\n              error: error,\n              file: null\n            });\n            return;\n          } // let's replace the item\n          // id of first item we're about to remove\n\n\n          var _item = getActiveItems(state.items)[0]; // if has been processed remove it from the server as well\n\n          if (_item.status === ItemStatus.PROCESSING_COMPLETE || _item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n            var forceRevert = query('GET_FORCE_REVERT');\n\n            _item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), forceRevert).then(function () {\n              if (!forceRevert) return; // try to add now\n\n              dispatch('ADD_ITEM', {\n                source: source,\n                index: index,\n                interactionMethod: interactionMethod,\n                success: success,\n                failure: failure,\n                options: options\n              });\n            }).catch(function () {}); // no need to handle this catch state for now\n\n\n            if (forceRevert) return;\n          } // remove first item as it will be replaced by this item\n\n\n          dispatch('REMOVE_ITEM', {\n            query: _item.id\n          });\n        } // where did the file originate\n\n\n        var origin = options.type === 'local' ? FileOrigin.LOCAL : options.type === 'limbo' ? FileOrigin.LIMBO : FileOrigin.INPUT; // create a new blank item\n\n        var item = createItem( // where did this file come from\n        origin, // an input file never has a server file reference\n        origin === FileOrigin.INPUT ? null : source, // file mock data, if defined\n        options.file); // set initial meta data\n\n        Object.keys(options.metadata || {}).forEach(function (key) {\n          item.setMetadata(key, options.metadata[key]);\n        }); // created the item, let plugins add methods\n\n        applyFilters('DID_CREATE_ITEM', item, {\n          query: query,\n          dispatch: dispatch\n        }); // where to insert new items\n\n        var itemInsertLocation = query('GET_ITEM_INSERT_LOCATION'); // adjust index if is not allowed to pick location\n\n        if (!state.options.itemInsertLocationFreedom) {\n          index = itemInsertLocation === 'before' ? -1 : state.items.length;\n        } // add item to list\n\n\n        insertItem(state.items, item, index); // sort items in list\n\n        if (isFunction(itemInsertLocation) && source) {\n          sortItems(state, itemInsertLocation);\n        } // get a quick reference to the item id\n\n\n        var id = item.id; // observe item events\n\n        item.on('load-init', function () {\n          dispatch('DID_START_ITEM_LOAD', {\n            id: id\n          });\n        });\n        item.on('load-meta', function () {\n          dispatch('DID_UPDATE_ITEM_META', {\n            id: id\n          });\n        });\n        item.on('load-progress', function (progress) {\n          dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', {\n            id: id,\n            progress: progress\n          });\n        });\n        item.on('load-request-error', function (error) {\n          var mainStatus = dynamicLabel(state.options.labelFileLoadError)(error); // is client error, no way to recover\n\n          if (error.code >= 400 && error.code < 500) {\n            dispatch('DID_THROW_ITEM_INVALID', {\n              id: id,\n              error: error,\n              status: {\n                main: mainStatus,\n                sub: error.code + ' (' + error.body + ')'\n              }\n            }); // reject the file so can be dealt with through API\n\n            failure({\n              error: error,\n              file: createItemAPI(item)\n            });\n            return;\n          } // is possible server error, so might be possible to retry\n\n\n          dispatch('DID_THROW_ITEM_LOAD_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: mainStatus,\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('load-file-error', function (error) {\n          dispatch('DID_THROW_ITEM_INVALID', {\n            id: id,\n            error: error.status,\n            status: error.status\n          });\n        });\n        item.on('load-abort', function () {\n          dispatch('REMOVE_ITEM', {\n            query: id\n          });\n        });\n        item.on('load-skip', function () {\n          dispatch('COMPLETE_LOAD_ITEM', {\n            query: id,\n            item: item,\n            data: {\n              source: source,\n              success: success\n            }\n          });\n        });\n        item.on('load', function () {\n          var handleAdd = function handleAdd(shouldAdd) {\n            // no should not add this file\n            if (!shouldAdd) {\n              dispatch('REMOVE_ITEM', {\n                query: id\n              });\n              return;\n            } // now interested in metadata updates\n\n\n            item.on('metadata-update', function (change) {\n              dispatch('DID_UPDATE_ITEM_METADATA', {\n                id: id,\n                change: change\n              });\n            }); // let plugins decide if the output data should be prepared at this point\n            // means we'll do this and wait for idle state\n\n            applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {\n              item: item,\n              query: query\n            }).then(function (shouldPrepareOutput) {\n              var loadComplete = function loadComplete() {\n                dispatch('COMPLETE_LOAD_ITEM', {\n                  query: id,\n                  item: item,\n                  data: {\n                    source: source,\n                    success: success\n                  }\n                });\n                listUpdated(dispatch, state);\n              }; // exit\n\n\n              if (shouldPrepareOutput) {\n                // wait for idle state and then run PREPARE_OUTPUT\n                dispatch('REQUEST_PREPARE_OUTPUT', {\n                  query: id,\n                  item: item,\n                  ready: function ready(file) {\n                    dispatch('DID_PREPARE_OUTPUT', {\n                      id: id,\n                      file: file\n                    });\n                    loadComplete();\n                  }\n                }, true);\n                return;\n              }\n\n              loadComplete();\n            });\n          }; // item loaded, allow plugins to\n          // - read data (quickly)\n          // - add metadata\n\n\n          applyFilterChain('DID_LOAD_ITEM', item, {\n            query: query,\n            dispatch: dispatch\n          }).then(function () {\n            optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(handleAdd);\n          }).catch(function () {\n            handleAdd(false);\n          });\n        });\n        item.on('process-start', function () {\n          dispatch('DID_START_ITEM_PROCESSING', {\n            id: id\n          });\n        });\n        item.on('process-progress', function (progress) {\n          dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', {\n            id: id,\n            progress: progress\n          });\n        });\n        item.on('process-error', function (error) {\n          dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: dynamicLabel(state.options.labelFileProcessingError)(error),\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('process-revert-error', function (error) {\n          dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {\n            id: id,\n            error: error,\n            status: {\n              main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),\n              sub: state.options.labelTapToRetry\n            }\n          });\n        });\n        item.on('process-complete', function (serverFileReference) {\n          dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n            id: id,\n            error: null,\n            serverFileReference: serverFileReference\n          });\n        });\n        item.on('process-abort', function () {\n          dispatch('DID_ABORT_ITEM_PROCESSING', {\n            id: id\n          });\n        });\n        item.on('process-revert', function () {\n          dispatch('DID_REVERT_ITEM_PROCESSING', {\n            id: id\n          });\n        }); // let view know the item has been inserted\n\n        dispatch('DID_ADD_ITEM', {\n          id: id,\n          index: index,\n          interactionMethod: interactionMethod\n        });\n        listUpdated(dispatch, state); // start loading the source\n\n        var _ref7 = state.options.server || {},\n            url = _ref7.url,\n            load = _ref7.load,\n            restore = _ref7.restore,\n            fetch = _ref7.fetch;\n\n        item.load(source, // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)\n        createFileLoader(origin === FileOrigin.INPUT ? // input\n        isString(source) && isExternalURL(source) ? createFetchFunction(url, fetch) // remote url\n        : fetchLocal // local url\n        : // limbo or local\n        origin === FileOrigin.LIMBO ? createFetchFunction(url, restore) // limbo\n        : createFetchFunction(url, load) // local\n        ), // called when the file is loaded so it can be piped through the filters\n        function (file, success, error) {\n          // let's process the file\n          applyFilterChain('LOAD_FILE', file, {\n            query: query\n          }).then(success).catch(error);\n        });\n      },\n      REQUEST_PREPARE_OUTPUT: function REQUEST_PREPARE_OUTPUT(_ref8) {\n        var item = _ref8.item,\n            ready = _ref8.ready; // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared\n\n        if (item.archived) return; // allow plugins to alter the file data\n\n        applyFilterChain('PREPARE_OUTPUT', item.file, {\n          query: query,\n          item: item\n        }).then(function (result) {\n          applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, {\n            query: query,\n            item: item\n          }).then(function (result) {\n            // don't handle archived items, an item could have been archived (load aborted) while being prepared\n            if (item.archived) return; // we done!\n\n            ready(result);\n          });\n        });\n      },\n      COMPLETE_LOAD_ITEM: function COMPLETE_LOAD_ITEM(_ref9) {\n        var item = _ref9.item,\n            data = _ref9.data;\n        var success = data.success,\n            source = data.source; // sort items in list\n\n        var itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');\n\n        if (isFunction(itemInsertLocation) && source) {\n          sortItems(state, itemInsertLocation);\n        } // let interface know the item has loaded\n\n\n        dispatch('DID_LOAD_ITEM', {\n          id: item.id,\n          error: null,\n          serverFileReference: item.origin === FileOrigin.INPUT ? null : source\n        }); // item has been successfully loaded and added to the\n        // list of items so can now be safely returned for use\n\n        success(createItemAPI(item)); // if this is a local server file we need to show a different state\n\n        if (item.origin === FileOrigin.LOCAL) {\n          dispatch('DID_LOAD_LOCAL_ITEM', {\n            id: item.id\n          });\n          return;\n        } // if is a temp server file we prevent async upload call here (as the file is already on the server)\n\n\n        if (item.origin === FileOrigin.LIMBO) {\n          dispatch('DID_COMPLETE_ITEM_PROCESSING', {\n            id: item.id,\n            error: null,\n            serverFileReference: source\n          });\n          return;\n        } // id we are allowed to upload the file immidiately, lets do it\n\n\n        if (query('IS_ASYNC') && state.options.instantUpload) {\n          dispatch('REQUEST_ITEM_PROCESSING', {\n            query: item.id\n          });\n        }\n      },\n      RETRY_ITEM_LOAD: getItemByQueryFromState(state, function (item) {\n        // try loading the source one more time\n        item.retryLoad();\n      }),\n      REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, function (item, success, failure) {\n        // cannot be queued (or is already queued)\n        var itemCanBeQueuedForProcessing = // waiting for something\n        item.status === ItemStatus.IDLE || // processing went wrong earlier\n        item.status === ItemStatus.PROCESSING_ERROR; // not ready to be processed\n\n        if (!itemCanBeQueuedForProcessing) {\n          var process = function process() {\n            setTimeout(function () {\n              dispatch('REQUEST_ITEM_PROCESSING', {\n                query: item,\n                success: success,\n                failure: failure\n              });\n            }, 32);\n          }; // if already done processing or tried to revert but didn't work, try again\n\n\n          if (item.status === ItemStatus.PROCESSING_COMPLETE || item.status === ItemStatus.PROCESSING_REVERT_ERROR) {\n            item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(process).catch(function () {}); // don't continue with processing if something went wrong\n          } else if (item.status === ItemStatus.PROCESSING) {\n            item.abortProcessing().then(process);\n          }\n\n          return;\n        } // already queued for processing\n\n\n        if (item.status === ItemStatus.PROCESSING_QUEUED) return;\n        item.requestProcessing();\n        dispatch('DID_REQUEST_ITEM_PROCESSING', {\n          id: item.id\n        });\n        dispatch('PROCESS_ITEM', {\n          query: item,\n          success: success,\n          failure: failure\n        }, true);\n      }),\n      PROCESS_ITEM: getItemByQueryFromState(state, function (item, success, failure) {\n        var maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');\n        var totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING).length; // queue and wait till queue is freed up\n\n        if (totalCurrentUploads === maxParallelUploads) {\n          // queue for later processing\n          state.processingQueue.push({\n            id: item.id,\n            success: success,\n            failure: failure\n          }); // stop it!\n\n          return;\n        } // if was not queued or is already processing exit here\n\n\n        if (item.status === ItemStatus.PROCESSING) return;\n\n        var processNext = function processNext() {\n          // process queueud items\n          var queueEntry = state.processingQueue.shift(); // no items left\n\n          if (!queueEntry) return; // get item reference\n\n          var id = queueEntry.id,\n              success = queueEntry.success,\n              failure = queueEntry.failure;\n          var itemReference = getItemByQuery(state.items, id); // if item was archived while in queue, jump to next\n\n          if (!itemReference || itemReference.archived) {\n            processNext();\n            return;\n          } // process queued item\n\n\n          dispatch('PROCESS_ITEM', {\n            query: id,\n            success: success,\n            failure: failure\n          }, true);\n        }; // we done function\n\n\n        item.onOnce('process-complete', function () {\n          success(createItemAPI(item));\n          processNext(); // All items processed? No errors?\n\n          var allItemsProcessed = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length === state.items.length;\n\n          if (allItemsProcessed) {\n            dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');\n          }\n        }); // we error function\n\n        item.onOnce('process-error', function (error) {\n          failure({\n            error: error,\n            file: createItemAPI(item)\n          });\n          processNext();\n        }); // start file processing\n\n        item.process(createFileProcessor(createProcessorFunction(state.options.server.url, state.options.server.process, state.options.name)), // called when the file is about to be processed so it can be piped through the transform filters\n        function (file, success, error) {\n          // allow plugins to alter the file data\n          applyFilterChain('PREPARE_OUTPUT', file, {\n            query: query,\n            item: item\n          }).then(function (file) {\n            dispatch('DID_PREPARE_OUTPUT', {\n              id: item.id,\n              file: file\n            });\n            success(file);\n          }).catch(error);\n        });\n      }),\n      RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        dispatch('REQUEST_ITEM_PROCESSING', {\n          query: item\n        });\n      }),\n      REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, function (item) {\n        optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(function (shouldRemove) {\n          if (!shouldRemove) {\n            return;\n          }\n\n          dispatch('REMOVE_ITEM', {\n            query: item\n          });\n        });\n      }),\n      RELEASE_ITEM: getItemByQueryFromState(state, function (item) {\n        item.release();\n      }),\n      REMOVE_ITEM: getItemByQueryFromState(state, function (item, success) {\n        var removeFromView = function removeFromView() {\n          // get id reference\n          var id = item.id; // archive the item, this does not remove it from the list\n\n          getItemById(state.items, id).archive(); // tell the view the item has been removed\n\n          dispatch('DID_REMOVE_ITEM', {\n            error: null,\n            id: id,\n            item: item\n          }); // now the list has been modified\n\n          listUpdated(dispatch, state); // correctly removed\n\n          success(createItemAPI(item));\n        }; // if this is a local file and the server.remove function has been configured, send source there so dev can remove file from server\n\n\n        var server = state.options.server;\n\n        if (item.origin === FileOrigin.LOCAL && server && isFunction(server.remove)) {\n          dispatch('DID_START_ITEM_REMOVE', {\n            id: item.id\n          });\n          server.remove(item.source, function () {\n            return removeFromView();\n          }, function (status) {\n            dispatch('DID_THROW_ITEM_REMOVE_ERROR', {\n              id: item.id,\n              error: createResponse('error', 0, status, null),\n              status: {\n                main: dynamicLabel(state.options.labelFileRemoveError)(status),\n                sub: state.options.labelTapToRetry\n              }\n            });\n          });\n        } else {\n          removeFromView();\n        }\n      }),\n      ABORT_ITEM_LOAD: getItemByQueryFromState(state, function (item) {\n        item.abortLoad();\n      }),\n      ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        // test if is already processed\n        if (item.serverId) {\n          dispatch('REVERT_ITEM_PROCESSING', {\n            id: item.id\n          });\n          return;\n        } // abort\n\n\n        item.abortProcessing().then(function () {\n          var shouldRemove = state.options.instantUpload;\n\n          if (shouldRemove) {\n            dispatch('REMOVE_ITEM', {\n              query: item.id\n            });\n          }\n        });\n      }),\n      REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        // not instant uploading, revert immidiately\n        if (!state.options.instantUpload) {\n          dispatch('REVERT_ITEM_PROCESSING', {\n            query: item\n          });\n          return;\n        } // if we're instant uploading the file will also be removed if we revert,\n        // so if a before remove file hook is defined we need to run it now\n\n\n        var handleRevert = function handleRevert(shouldRevert) {\n          if (!shouldRevert) return;\n          dispatch('REVERT_ITEM_PROCESSING', {\n            query: item\n          });\n        };\n\n        var fn = query('GET_BEFORE_REMOVE_FILE');\n\n        if (!fn) {\n          return handleRevert(true);\n        }\n\n        var requestRemoveResult = fn(createItemAPI(item));\n\n        if (requestRemoveResult == null) {\n          // undefined or null\n          return handleRevert(true);\n        }\n\n        if (typeof requestRemoveResult === 'boolean') {\n          return handleRevert(requestRemoveResult);\n        }\n\n        if (typeof requestRemoveResult.then === 'function') {\n          requestRemoveResult.then(handleRevert);\n        }\n      }),\n      REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function (item) {\n        item.revert(createRevertFunction(state.options.server.url, state.options.server.revert), query('GET_FORCE_REVERT')).then(function () {\n          var shouldRemove = state.options.instantUpload || isMockItem(item);\n\n          if (shouldRemove) {\n            dispatch('REMOVE_ITEM', {\n              query: item.id\n            });\n          }\n        }).catch(function () {});\n      }),\n      SET_OPTIONS: function SET_OPTIONS(_ref10) {\n        var options = _ref10.options;\n        forin(options, function (key, value) {\n          dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {\n            value: value\n          });\n        });\n      }\n    };\n  };\n\n  var formatFilename = function formatFilename(name) {\n    return name;\n  };\n\n  var createElement$1 = function createElement(tagName) {\n    return document.createElement(tagName);\n  };\n\n  var text = function text(node, value) {\n    var textNode = node.childNodes[0];\n\n    if (!textNode) {\n      textNode = document.createTextNode(value);\n      node.appendChild(textNode);\n    } else if (value !== textNode.nodeValue) {\n      textNode.nodeValue = value;\n    }\n  };\n\n  var polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees % 360 - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  };\n\n  var describeArc = function describeArc(x, y, radius, startAngle, endAngle, arcSweep) {\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n    return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n  };\n\n  var percentageArc = function percentageArc(x, y, radius, from, to) {\n    var arcSweep = 1;\n\n    if (to > from && to - from <= 0.5) {\n      arcSweep = 0;\n    }\n\n    if (from > to && from - to >= 0.5) {\n      arcSweep = 0;\n    }\n\n    return describeArc(x, y, radius, Math.min(0.9999, from) * 360, Math.min(0.9999, to) * 360, arcSweep);\n  };\n\n  var create = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // start at 0\n\n    props.spin = false;\n    props.progress = 0;\n    props.opacity = 0; // svg\n\n    var svg = createElement('svg');\n    root.ref.path = createElement('path', {\n      'stroke-width': 2,\n      'stroke-linecap': 'round'\n    });\n    svg.appendChild(root.ref.path);\n    root.ref.svg = svg;\n    root.appendChild(svg);\n  };\n\n  var write = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n\n    if (props.opacity === 0) {\n      return;\n    }\n\n    if (props.align) {\n      root.element.dataset.align = props.align;\n    } // get width of stroke\n\n\n    var ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10); // calculate size of ring\n\n    var size = root.rect.element.width * 0.5; // ring state\n\n    var ringFrom = 0;\n    var ringTo = 0; // now in busy mode\n\n    if (props.spin) {\n      ringFrom = 0;\n      ringTo = 0.5;\n    } else {\n      ringFrom = 0;\n      ringTo = props.progress;\n    } // get arc path\n\n\n    var coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo); // update progress bar\n\n    attr(root.ref.path, 'd', coordinates); // hide while contains 0 value\n\n    attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);\n  };\n\n  var progressIndicator = createView({\n    tag: 'div',\n    name: 'progress-indicator',\n    ignoreRectUpdate: true,\n    ignoreRect: true,\n    create: create,\n    write: write,\n    mixins: {\n      apis: ['progress', 'spin', 'align'],\n      styles: ['opacity'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 500\n        },\n        progress: {\n          type: 'spring',\n          stiffness: 0.95,\n          damping: 0.65,\n          mass: 10\n        }\n      }\n    }\n  });\n\n  var create$1 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.element.innerHTML = (props.icon || '') + ('<span>' + props.label + '</span>');\n    props.isDisabled = false;\n  };\n\n  var write$1 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    var isDisabled = props.isDisabled;\n    var shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;\n\n    if (shouldDisable && !isDisabled) {\n      props.isDisabled = true;\n      attr(root.element, 'disabled', 'disabled');\n    } else if (!shouldDisable && isDisabled) {\n      props.isDisabled = false;\n      root.element.removeAttribute('disabled');\n    }\n  };\n\n  var fileActionButton = createView({\n    tag: 'button',\n    attributes: {\n      type: 'button'\n    },\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'file-action-button',\n    mixins: {\n      apis: ['label'],\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      },\n      listeners: true\n    },\n    create: create$1,\n    write: write$1\n  });\n\n  var toNaturalFileSize = function toNaturalFileSize(bytes) {\n    var decimalSeparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.'; // nope, no negative byte sizes\n\n    bytes = Math.round(Math.abs(bytes)); // just bytes\n\n    if (bytes < 1000) {\n      return bytes + ' bytes';\n    } // kilobytes\n\n\n    if (bytes < MB) {\n      return Math.floor(bytes / KB) + ' KB';\n    } // megabytes\n\n\n    if (bytes < GB) {\n      return removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator) + ' MB';\n    } // gigabytes\n\n\n    return removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator) + ' GB';\n  };\n\n  var KB = 1000;\n  var MB = 1000000;\n  var GB = 1000000000;\n\n  var removeDecimalsWhenZero = function removeDecimalsWhenZero(value, decimalCount, separator) {\n    return value.toFixed(decimalCount).split('.').filter(function (part) {\n      return part !== '0';\n    }).join(separator);\n  };\n\n  var create$2 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // filename\n\n    var fileName = createElement$1('span');\n    fileName.className = 'filepond--file-info-main'; // hide for screenreaders\n    // the file is contained in a fieldset with legend that contains the filename\n    // no need to read it twice\n\n    attr(fileName, 'aria-hidden', 'true');\n    root.appendChild(fileName);\n    root.ref.fileName = fileName; // filesize\n\n    var fileSize = createElement$1('span');\n    fileSize.className = 'filepond--file-info-sub';\n    root.appendChild(fileSize);\n    root.ref.fileSize = fileSize; // set initial values\n\n    text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));\n    text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var updateFile = function updateFile(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    text(root.ref.fileSize, toNaturalFileSize(root.query('GET_ITEM_SIZE', props.id)));\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var updateFileSizeOnError = function updateFileSizeOnError(_ref3) {\n    var root = _ref3.root,\n        props = _ref3.props; // if size is available don't fallback to unknown size message\n\n    if (isInt(root.query('GET_ITEM_SIZE', props.id))) {\n      return;\n    }\n\n    text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));\n  };\n\n  var fileInfo = createView({\n    name: 'file-info',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: updateFile,\n      DID_UPDATE_ITEM_META: updateFile,\n      DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,\n      DID_THROW_ITEM_INVALID: updateFileSizeOnError\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    create: create$2,\n    mixins: {\n      styles: ['translateX', 'translateY'],\n      animations: {\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n\n  var toPercentage = function toPercentage(value) {\n    return Math.round(value * 100);\n  };\n\n  var create$3 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // main status\n\n    var main = createElement$1('span');\n    main.className = 'filepond--file-status-main';\n    root.appendChild(main);\n    root.ref.main = main; // sub status\n\n    var sub = createElement$1('span');\n    sub.className = 'filepond--file-status-sub';\n    root.appendChild(sub);\n    root.ref.sub = sub;\n    didSetItemLoadProgress({\n      root: root,\n      action: {\n        progress: null\n      }\n    });\n  };\n\n  var didSetItemLoadProgress = function didSetItemLoadProgress(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    var title = action.progress === null ? root.query('GET_LABEL_FILE_LOADING') : root.query('GET_LABEL_FILE_LOADING') + ' ' + toPercentage(action.progress) + '%';\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didSetItemProcessProgress = function didSetItemProcessProgress(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    var title = action.progress === null ? root.query('GET_LABEL_FILE_PROCESSING') : root.query('GET_LABEL_FILE_PROCESSING') + ' ' + toPercentage(action.progress) + '%';\n    text(root.ref.main, title);\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didRequestItemProcessing = function didRequestItemProcessing(_ref4) {\n    var root = _ref4.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));\n  };\n\n  var didAbortItemProcessing = function didAbortItemProcessing(_ref5) {\n    var root = _ref5.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));\n  };\n\n  var didCompleteItemProcessing = function didCompleteItemProcessing(_ref6) {\n    var root = _ref6.root;\n    text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));\n    text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));\n  };\n\n  var clear = function clear(_ref7) {\n    var root = _ref7.root;\n    text(root.ref.main, '');\n    text(root.ref.sub, '');\n  };\n\n  var error = function error(_ref8) {\n    var root = _ref8.root,\n        action = _ref8.action;\n    text(root.ref.main, action.status.main);\n    text(root.ref.sub, action.status.sub);\n  };\n\n  var fileStatus = createView({\n    name: 'file-status',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: clear,\n      DID_REVERT_ITEM_PROCESSING: clear,\n      DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,\n      DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,\n      DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,\n      DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,\n      DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,\n      DID_THROW_ITEM_LOAD_ERROR: error,\n      DID_THROW_ITEM_INVALID: error,\n      DID_THROW_ITEM_PROCESSING_ERROR: error,\n      DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,\n      DID_THROW_ITEM_REMOVE_ERROR: error\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    create: create$3,\n    mixins: {\n      styles: ['translateX', 'translateY', 'opacity'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 250\n        },\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n  /**\n   * Button definitions for the file view\n   */\n\n  var Buttons = {\n    AbortItemLoad: {\n      label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',\n      action: 'ABORT_ITEM_LOAD',\n      className: 'filepond--action-abort-item-load',\n      align: 'LOAD_INDICATOR_POSITION' // right\n\n    },\n    RetryItemLoad: {\n      label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',\n      action: 'RETRY_ITEM_LOAD',\n      icon: 'GET_ICON_RETRY',\n      className: 'filepond--action-retry-item-load',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RemoveItem: {\n      label: 'GET_LABEL_BUTTON_REMOVE_ITEM',\n      action: 'REQUEST_REMOVE_ITEM',\n      icon: 'GET_ICON_REMOVE',\n      className: 'filepond--action-remove-item',\n      align: 'BUTTON_REMOVE_ITEM_POSITION' // left\n\n    },\n    ProcessItem: {\n      label: 'GET_LABEL_BUTTON_PROCESS_ITEM',\n      action: 'REQUEST_ITEM_PROCESSING',\n      icon: 'GET_ICON_PROCESS',\n      className: 'filepond--action-process-item',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    AbortItemProcessing: {\n      label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',\n      action: 'ABORT_ITEM_PROCESSING',\n      className: 'filepond--action-abort-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RetryItemProcessing: {\n      label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',\n      action: 'RETRY_ITEM_PROCESSING',\n      icon: 'GET_ICON_RETRY',\n      className: 'filepond--action-retry-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    },\n    RevertItemProcessing: {\n      label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',\n      action: 'REQUEST_REVERT_ITEM_PROCESSING',\n      icon: 'GET_ICON_UNDO',\n      className: 'filepond--action-revert-item-processing',\n      align: 'BUTTON_PROCESS_ITEM_POSITION' // right\n\n    }\n  }; // make a list of buttons, we can then remove buttons from this list if they're disabled\n\n  var ButtonKeys = [];\n  forin(Buttons, function (key) {\n    ButtonKeys.push(key);\n  });\n\n  var calculateFileInfoOffset = function calculateFileInfoOffset(root) {\n    return root.ref.buttonRemoveItem.rect.element.width + root.ref.buttonRemoveItem.rect.element.left;\n  }; // Force on full pixels so text stays crips\n\n\n  var calculateFileVerticalCenterOffset = function calculateFileVerticalCenterOffset(root) {\n    return Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);\n  };\n\n  var calculateFileHorizontalCenterOffset = function calculateFileHorizontalCenterOffset(root) {\n    return Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);\n  };\n\n  var getLoadIndicatorAlignment = function getLoadIndicatorAlignment(root) {\n    return root.query('GET_STYLE_LOAD_INDICATOR_POSITION');\n  };\n\n  var getProcessIndicatorAlignment = function getProcessIndicatorAlignment(root) {\n    return root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');\n  };\n\n  var getRemoveIndicatorAligment = function getRemoveIndicatorAligment(root) {\n    return root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');\n  };\n\n  var DefaultStyle = {\n    buttonAbortItemLoad: {\n      opacity: 0\n    },\n    buttonRetryItemLoad: {\n      opacity: 0\n    },\n    buttonRemoveItem: {\n      opacity: 0\n    },\n    buttonProcessItem: {\n      opacity: 0\n    },\n    buttonAbortItemProcessing: {\n      opacity: 0\n    },\n    buttonRetryItemProcessing: {\n      opacity: 0\n    },\n    buttonRevertItemProcessing: {\n      opacity: 0\n    },\n    loadProgressIndicator: {\n      opacity: 0,\n      align: getLoadIndicatorAlignment\n    },\n    processProgressIndicator: {\n      opacity: 0,\n      align: getProcessIndicatorAlignment\n    },\n    processingCompleteIndicator: {\n      opacity: 0,\n      scaleX: 0.75,\n      scaleY: 0.75\n    },\n    info: {\n      translateX: 0,\n      translateY: 0,\n      opacity: 0\n    },\n    status: {\n      translateX: 0,\n      translateY: 0,\n      opacity: 0\n    }\n  };\n  var IdleStyle = {\n    buttonRemoveItem: {\n      opacity: 1\n    },\n    buttonProcessItem: {\n      opacity: 1\n    },\n    info: {\n      translateX: calculateFileInfoOffset\n    },\n    status: {\n      translateX: calculateFileInfoOffset\n    }\n  };\n  var ProcessingStyle = {\n    buttonAbortItemProcessing: {\n      opacity: 1\n    },\n    processProgressIndicator: {\n      opacity: 1\n    },\n    status: {\n      opacity: 1\n    }\n  };\n  var StyleMap = {\n    DID_THROW_ITEM_INVALID: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        translateX: calculateFileInfoOffset,\n        opacity: 1\n      }\n    },\n    DID_START_ITEM_LOAD: {\n      buttonAbortItemLoad: {\n        opacity: 1\n      },\n      loadProgressIndicator: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_THROW_ITEM_LOAD_ERROR: {\n      buttonRetryItemLoad: {\n        opacity: 1\n      },\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_START_ITEM_REMOVE: {\n      processProgressIndicator: {\n        opacity: 1,\n        align: getRemoveIndicatorAligment\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 0\n      }\n    },\n    DID_THROW_ITEM_REMOVE_ERROR: {\n      processProgressIndicator: {\n        opacity: 0,\n        align: getRemoveIndicatorAligment\n      },\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1,\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_LOAD_ITEM: IdleStyle,\n    DID_LOAD_LOCAL_ITEM: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_START_ITEM_PROCESSING: ProcessingStyle,\n    DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,\n    DID_COMPLETE_ITEM_PROCESSING: {\n      buttonRevertItemProcessing: {\n        opacity: 1\n      },\n      info: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_THROW_ITEM_PROCESSING_ERROR: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      buttonRetryItemProcessing: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      }\n    },\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {\n      buttonRevertItemProcessing: {\n        opacity: 1\n      },\n      status: {\n        opacity: 1\n      },\n      info: {\n        opacity: 1\n      }\n    },\n    DID_ABORT_ITEM_PROCESSING: {\n      buttonRemoveItem: {\n        opacity: 1\n      },\n      buttonProcessItem: {\n        opacity: 1\n      },\n      info: {\n        translateX: calculateFileInfoOffset\n      },\n      status: {\n        opacity: 1\n      }\n    },\n    DID_REVERT_ITEM_PROCESSING: IdleStyle\n  }; // complete indicator view\n\n  var processingCompleteIndicatorView = createView({\n    create: function create(_ref) {\n      var root = _ref.root;\n      root.element.innerHTML = root.query('GET_ICON_DONE');\n    },\n    name: 'processing-complete-indicator',\n    ignoreRect: true,\n    mixins: {\n      styles: ['scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      }\n    }\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$4 = function create(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props;\n    var id = props.id; // allow reverting upload\n\n    var allowRevert = root.query('GET_ALLOW_REVERT'); // is instant uploading, need this to determine the icon of the undo button\n\n    var instantUpload = root.query('GET_INSTANT_UPLOAD'); // is async set up\n\n    var isAsync = root.query('IS_ASYNC'); // enabled buttons array\n\n    var enabledButtons = isAsync ? ButtonKeys.concat() : ButtonKeys.filter(function (key) {\n      return !/Process/.test(key);\n    }); // remove last button (revert) if not allowed\n\n    if (isAsync && !allowRevert) {\n      enabledButtons.splice(-1, 1);\n      var map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];\n      map.info.translateX = calculateFileHorizontalCenterOffset;\n      map.info.translateY = calculateFileVerticalCenterOffset;\n      map.status.translateY = calculateFileVerticalCenterOffset;\n      map.processingCompleteIndicator = {\n        opacity: 1,\n        scaleX: 1,\n        scaleY: 1\n      };\n    } // update icon and label for revert button when instant uploading\n\n\n    if (instantUpload && allowRevert) {\n      Buttons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';\n      Buttons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';\n    } // create the button views\n\n\n    forin(Buttons, function (key, definition) {\n      // create button\n      var buttonView = root.createChildView(fileActionButton, {\n        label: root.query(definition.label),\n        icon: root.query(definition.icon),\n        opacity: 0\n      }); // should be appended?\n\n      if (enabledButtons.includes(key)) {\n        root.appendChildView(buttonView);\n      } // add position attribute\n\n\n      buttonView.element.dataset.align = root.query('GET_STYLE_' + definition.align); // add class\n\n      buttonView.element.classList.add(definition.className); // handle interactions\n\n      buttonView.on('click', function (e) {\n        e.stopPropagation();\n        root.dispatch(definition.action, {\n          query: id\n        });\n      }); // set reference\n\n      root.ref['button' + key] = buttonView;\n    }); // create file info view\n\n    root.ref.info = root.appendChildView(root.createChildView(fileInfo, {\n      id: id\n    })); // create file status view\n\n    root.ref.status = root.appendChildView(root.createChildView(fileStatus, {\n      id: id\n    })); // checkmark\n\n    root.ref.processingCompleteIndicator = root.appendChildView(root.createChildView(processingCompleteIndicatorView));\n    root.ref.processingCompleteIndicator.element.dataset.align = root.query('GET_STYLE_BUTTON_PROCESS_ITEM_POSITION'); // add progress indicators\n\n    var loadIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n      opacity: 0,\n      align: root.query('GET_STYLE_LOAD_INDICATOR_POSITION')\n    }));\n    loadIndicatorView.element.classList.add('filepond--load-indicator');\n    root.ref.loadProgressIndicator = loadIndicatorView;\n    var progressIndicatorView = root.appendChildView(root.createChildView(progressIndicator, {\n      opacity: 0,\n      align: root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION')\n    }));\n    progressIndicatorView.element.classList.add('filepond--process-indicator');\n    root.ref.processProgressIndicator = progressIndicatorView;\n  };\n\n  var write$2 = function write(_ref3) {\n    var root = _ref3.root,\n        actions = _ref3.actions,\n        props = _ref3.props; // route actions\n\n    route({\n      root: root,\n      actions: actions,\n      props: props\n    }); // select last state change action\n\n    var action = actions.concat().filter(function (action) {\n      return /^DID_/.test(action.type);\n    }).reverse().find(function (action) {\n      return StyleMap[action.type];\n    }); // no need to set same state twice\n\n    if (!action || action && action.type === root.ref.currentAction) {\n      return;\n    } // set current state\n\n\n    root.ref.currentAction = action.type;\n    var newStyles = StyleMap[root.ref.currentAction];\n    forin(DefaultStyle, function (name, defaultStyles) {\n      // get reference to control\n      var control = root.ref[name]; // loop over all styles for this control\n\n      forin(defaultStyles, function (key, defaultValue) {\n        var value = newStyles[name] && typeof newStyles[name][key] !== 'undefined' ? newStyles[name][key] : defaultValue;\n        control[key] = typeof value === 'function' ? value(root) : value;\n      });\n    });\n  };\n\n  var route = createRoute({\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: function DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING(_ref4) {\n      var root = _ref4.root,\n          action = _ref4.action;\n      root.ref.buttonAbortItemProcessing.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: function DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD(_ref5) {\n      var root = _ref5.root,\n          action = _ref5.action;\n      root.ref.buttonAbortItemLoad.label = action.value;\n    },\n    DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: function DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL(_ref6) {\n      var root = _ref6.root,\n          action = _ref6.action;\n      root.ref.buttonAbortItemRemoval.label = action.value;\n    },\n    DID_REQUEST_ITEM_PROCESSING: function DID_REQUEST_ITEM_PROCESSING(_ref7) {\n      var root = _ref7.root;\n      root.ref.processProgressIndicator.spin = true;\n      root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_LOAD: function DID_START_ITEM_LOAD(_ref8) {\n      var root = _ref8.root;\n      root.ref.loadProgressIndicator.spin = true;\n      root.ref.loadProgressIndicator.progress = 0;\n    },\n    DID_START_ITEM_REMOVE: function DID_START_ITEM_REMOVE(_ref9) {\n      var root = _ref9.root;\n      root.ref.processProgressIndicator.spin = true;\n      root.ref.processProgressIndicator.progress = 0;\n    },\n    DID_UPDATE_ITEM_LOAD_PROGRESS: function DID_UPDATE_ITEM_LOAD_PROGRESS(_ref10) {\n      var root = _ref10.root,\n          action = _ref10.action;\n      root.ref.loadProgressIndicator.spin = false;\n      root.ref.loadProgressIndicator.progress = action.progress;\n    },\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: function DID_UPDATE_ITEM_PROCESS_PROGRESS(_ref11) {\n      var root = _ref11.root,\n          action = _ref11.action;\n      root.ref.processProgressIndicator.spin = false;\n      root.ref.processProgressIndicator.progress = action.progress;\n    }\n  });\n  var file = createView({\n    create: create$4,\n    write: write$2,\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    name: 'file'\n  });\n  /**\n   * Creates the file view\n   */\n\n  var create$5 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // filename\n\n    root.ref.fileName = createElement$1('legend');\n    root.appendChild(root.ref.fileName); // file view\n\n    root.ref.file = root.appendChildView(root.createChildView(file, {\n      id: props.id\n    })); // create data container\n\n    var dataContainer = createElement$1('input');\n    dataContainer.type = 'hidden';\n    dataContainer.name = root.query('GET_NAME');\n    dataContainer.disabled = root.query('GET_DISABLED');\n    root.ref.data = dataContainer;\n    root.appendChild(dataContainer);\n  };\n\n  var didSetDisabled = function didSetDisabled(_ref2) {\n    var root = _ref2.root;\n    root.ref.data.disabled = root.query('GET_DISABLED');\n  };\n  /**\n   * Data storage\n   */\n\n\n  var didLoadItem = function didLoadItem(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action,\n        props = _ref3.props;\n    root.ref.data.value = action.serverFileReference; // updates the legend of the fieldset so screenreaders can better group buttons\n\n    text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));\n  };\n\n  var didRemoveItem = function didRemoveItem(_ref4) {\n    var root = _ref4.root;\n    root.ref.data.removeAttribute('value');\n  };\n\n  var didCompleteItemProcessing$1 = function didCompleteItemProcessing(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action;\n    root.ref.data.value = action.serverFileReference;\n  };\n\n  var didRevertItemProcessing = function didRevertItemProcessing(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    root.ref.data.removeAttribute('value');\n  };\n\n  var fileWrapper = createView({\n    create: create$5,\n    ignoreRect: true,\n    write: createRoute({\n      DID_SET_DISABLED: didSetDisabled,\n      DID_LOAD_ITEM: didLoadItem,\n      DID_REMOVE_ITEM: didRemoveItem,\n      DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing$1,\n      DID_REVERT_ITEM_PROCESSING: didRevertItemProcessing\n    }),\n    didCreateView: function didCreateView(root) {\n      applyFilters('CREATE_VIEW', Object.assign({}, root, {\n        view: root\n      }));\n    },\n    tag: 'fieldset',\n    name: 'file-wrapper'\n  });\n  var PANEL_SPRING_PROPS = {\n    type: 'spring',\n    damping: 0.6,\n    mass: 7\n  };\n\n  var create$6 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    [{\n      name: 'top'\n    }, {\n      name: 'center',\n      props: {\n        translateY: null,\n        scaleY: null\n      },\n      mixins: {\n        animations: {\n          scaleY: PANEL_SPRING_PROPS\n        },\n        styles: ['translateY', 'scaleY']\n      }\n    }, {\n      name: 'bottom',\n      props: {\n        translateY: null\n      },\n      mixins: {\n        animations: {\n          translateY: PANEL_SPRING_PROPS\n        },\n        styles: ['translateY']\n      }\n    }].forEach(function (section) {\n      createSection(root, section, props.name);\n    });\n    root.element.classList.add('filepond--' + props.name);\n    root.ref.scalable = null;\n  };\n\n  var createSection = function createSection(root, section, className) {\n    var viewConstructor = createView({\n      name: 'panel-' + section.name + ' filepond--' + className,\n      mixins: section.mixins,\n      ignoreRectUpdate: true\n    });\n    var view = root.createChildView(viewConstructor, section.props);\n    root.ref[section.name] = root.appendChildView(view);\n  };\n\n  var write$3 = function write(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props; // update scalable state\n\n    if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {\n      root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;\n      root.element.dataset.scalable = root.ref.scalable;\n    } // no height, can't set\n\n\n    if (!props.height) {\n      return;\n    } // get child rects\n\n\n    var topRect = root.ref.top.rect.element;\n    var bottomRect = root.ref.bottom.rect.element; // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)\n\n    var height = Math.max(topRect.height + bottomRect.height, props.height); // offset center part\n\n    root.ref.center.translateY = topRect.height; // scale center part\n    // use math ceil to prevent transparent lines because of rounding errors\n\n    root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100; // offset bottom part\n\n    root.ref.bottom.translateY = height - bottomRect.height;\n  };\n\n  var panel = createView({\n    name: 'panel',\n    write: write$3,\n    create: create$6,\n    ignoreRect: true,\n    mixins: {\n      apis: ['height', 'scalable']\n    }\n  });\n  var ITEM_TRANSLATE_SPRING = {\n    type: 'spring',\n    stiffness: 0.75,\n    damping: 0.45,\n    mass: 10\n  };\n  var ITEM_SCALE_SPRING = 'spring';\n  /**\n   * Creates the file view\n   */\n\n  var create$7 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // select\n\n    root.ref.handleClick = function () {\n      return root.dispatch('DID_ACTIVATE_ITEM', {\n        id: props.id\n      });\n    }; // set id\n\n\n    root.element.id = 'filepond--item-' + props.id;\n    root.element.addEventListener('click', root.ref.handleClick); // file view\n\n    root.ref.container = root.appendChildView(root.createChildView(fileWrapper, {\n      id: props.id\n    })); // file panel\n\n    root.ref.panel = root.appendChildView(root.createChildView(panel, {\n      name: 'item-panel'\n    })); // default start height\n\n    root.ref.panel.height = 0; // by default not marked for removal\n\n    props.markedForRemoval = false;\n  };\n\n  var StateMap = {\n    DID_START_ITEM_LOAD: 'busy',\n    DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',\n    DID_THROW_ITEM_INVALID: 'load-invalid',\n    DID_THROW_ITEM_LOAD_ERROR: 'load-error',\n    DID_LOAD_ITEM: 'idle',\n    DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',\n    DID_START_ITEM_REMOVE: 'busy',\n    DID_START_ITEM_PROCESSING: 'busy',\n    DID_REQUEST_ITEM_PROCESSING: 'busy',\n    DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',\n    DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',\n    DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',\n    DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',\n    DID_ABORT_ITEM_PROCESSING: 'cancelled',\n    DID_REVERT_ITEM_PROCESSING: 'idle'\n  };\n  var route$1 = createRoute({\n    DID_UPDATE_PANEL_HEIGHT: function DID_UPDATE_PANEL_HEIGHT(_ref2) {\n      var root = _ref2.root,\n          action = _ref2.action;\n      var height = action.height;\n      root.height = height;\n    }\n  });\n\n  var write$4 = function write(_ref3) {\n    var root = _ref3.root,\n        actions = _ref3.actions,\n        props = _ref3.props,\n        shouldOptimize = _ref3.shouldOptimize; // route actions\n\n    var aspectRatio = root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');\n\n    if (!aspectRatio) {\n      route$1({\n        root: root,\n        actions: actions,\n        props: props\n      });\n\n      if (!root.height) {\n        root.height = root.ref.container.rect.element.height;\n      }\n    } else if (!shouldOptimize) {\n      root.height = root.rect.element.width * aspectRatio;\n    } // sync panel height with item height\n\n\n    if (shouldOptimize) {\n      root.ref.panel.height = null;\n    }\n\n    root.ref.panel.height = root.height; // select last state change action\n\n    var action = actions.concat().filter(function (action) {\n      return /^DID_/.test(action.type);\n    }).reverse().find(function (action) {\n      return StateMap[action.type];\n    }); // no need to set same state twice\n\n    if (!action || action && action.type === props.currentState) return; // set current state\n\n    props.currentState = action.type; // set state\n\n    root.element.dataset.filepondItemState = StateMap[props.currentState] || '';\n  };\n\n  var item = createView({\n    create: create$7,\n    write: write$4,\n    destroy: function destroy(_ref4) {\n      var root = _ref4.root,\n          props = _ref4.props;\n      root.element.removeEventListener('click', root.ref.handleClick);\n      root.dispatch('RELEASE_ITEM', {\n        query: props.id\n      });\n    },\n    tag: 'li',\n    name: 'item',\n    mixins: {\n      apis: ['id', 'interactionMethod', 'markedForRemoval', 'spawnDate'],\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],\n      animations: {\n        scaleX: ITEM_SCALE_SPRING,\n        scaleY: ITEM_SCALE_SPRING,\n        translateX: ITEM_TRANSLATE_SPRING,\n        translateY: ITEM_TRANSLATE_SPRING,\n        opacity: {\n          type: 'tween',\n          duration: 150\n        }\n      }\n    }\n  });\n\n  var getItemIndexByPosition = function getItemIndexByPosition(view, positionInView) {\n    if (!positionInView) return;\n    var horizontalSpace = view.rect.element.width;\n    var children = view.childViews;\n    var l = children.length;\n    var last = null; // -1, don't move items to accomodate (either add to top or bottom)\n\n    if (l === 0 || positionInView.top < children[0].rect.element.top) return -1; // let's get the item width\n\n    var item = children[0];\n    var itemRect = item.rect.element;\n    var itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;\n    var itemWidth = itemRect.width + itemHorizontalMargin;\n    var itemsPerRow = Math.round(horizontalSpace / itemWidth); // stack\n\n    if (itemsPerRow === 1) {\n      for (var index = 0; index < l; index++) {\n        var child = children[index];\n        var childMid = child.rect.outer.top + child.rect.element.height * 0.5;\n\n        if (positionInView.top < childMid) {\n          return index;\n        }\n      }\n\n      return l;\n    } // grid\n\n\n    var itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;\n    var itemHeight = itemRect.height + itemVerticalMargin;\n\n    for (var _index = 0; _index < l; _index++) {\n      var indexX = _index % itemsPerRow;\n      var indexY = Math.floor(_index / itemsPerRow);\n      var offsetX = indexX * itemWidth;\n      var offsetY = indexY * itemHeight;\n      var itemTop = offsetY - itemRect.marginTop;\n      var itemRight = offsetX + itemWidth;\n      var itemBottom = offsetY + itemHeight + itemRect.marginBottom;\n\n      if (positionInView.top < itemBottom && positionInView.top > itemTop) {\n        if (positionInView.left < itemRight) {\n          return _index;\n        } else if (_index !== l - 1) {\n          last = _index;\n        } else {\n          last = null;\n        }\n      }\n    }\n\n    if (last !== null) {\n      return last;\n    }\n\n    return l;\n  };\n\n  var create$8 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // need to set role to list as otherwise it won't be read as a list by VoiceOver\n\n    attr(root.element, 'role', 'list');\n    root.ref.lastItemSpanwDate = Date.now();\n  };\n  /**\n   * Inserts a new item\n   * @param root\n   * @param action\n   */\n\n\n  var addItemView = function addItemView(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    var id = action.id,\n        index = action.index,\n        interactionMethod = action.interactionMethod;\n    root.ref.addIndex = index;\n    var now = Date.now();\n    var spawnDate = now;\n    var opacity = 1;\n\n    if (interactionMethod !== InteractionMethod.NONE) {\n      opacity = 0;\n      var cooldown = root.query('GET_ITEM_INSERT_INTERVAL');\n      var dist = now - root.ref.lastItemSpanwDate;\n      spawnDate = dist < cooldown ? now + (cooldown - dist) : now;\n    }\n\n    root.ref.lastItemSpanwDate = spawnDate;\n    root.appendChildView(root.createChildView( // view type\n    item, // props\n    {\n      spawnDate: spawnDate,\n      id: id,\n      opacity: opacity,\n      interactionMethod: interactionMethod\n    }), index);\n  };\n\n  var moveItem = function moveItem(item, x, y) {\n    var vx = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var vy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    item.translateX = x;\n    item.translateY = y;\n\n    if (Date.now() > item.spawnDate) {\n      // reveal element\n      if (item.opacity === 0) {\n        introItemView(item, x, y, vx, vy);\n      } // make sure is default scale every frame\n\n\n      item.scaleX = 1;\n      item.scaleY = 1;\n      item.opacity = 1;\n    }\n  };\n\n  var introItemView = function introItemView(item, x, y, vx, vy) {\n    if (item.interactionMethod === InteractionMethod.NONE) {\n      item.translateX = null;\n      item.translateX = x;\n      item.translateY = null;\n      item.translateY = y;\n    } else if (item.interactionMethod === InteractionMethod.DROP) {\n      item.translateX = null;\n      item.translateX = x - vx * 20;\n      item.translateY = null;\n      item.translateY = y - vy * 10;\n      item.scaleX = 0.8;\n      item.scaleY = 0.8;\n    } else if (item.interactionMethod === InteractionMethod.BROWSE) {\n      item.translateY = null;\n      item.translateY = y - 30;\n    } else if (item.interactionMethod === InteractionMethod.API) {\n      item.translateX = null;\n      item.translateX = x - 30;\n      item.translateY = null;\n    }\n  };\n  /**\n   * Removes an existing item\n   * @param root\n   * @param action\n   */\n\n\n  var removeItemView = function removeItemView(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    var id = action.id; // get the view matching the given id\n\n    var view = root.childViews.find(function (child) {\n      return child.id === id;\n    }); // if no view found, exit\n\n    if (!view) {\n      return;\n    } // animate view out of view\n\n\n    view.scaleX = 0.9;\n    view.scaleY = 0.9;\n    view.opacity = 0; // mark for removal\n\n    view.markedForRemoval = true;\n  };\n  /**\n   * Setup action routes\n   */\n\n\n  var route$2 = createRoute({\n    DID_ADD_ITEM: addItemView,\n    DID_REMOVE_ITEM: removeItemView\n  });\n  /**\n   * Write to view\n   * @param root\n   * @param actions\n   * @param props\n   */\n\n  var write$5 = function write(_ref4) {\n    var root = _ref4.root,\n        props = _ref4.props,\n        actions = _ref4.actions,\n        shouldOptimize = _ref4.shouldOptimize; // route actions\n\n    route$2({\n      root: root,\n      props: props,\n      actions: actions\n    });\n    var dragCoordinates = props.dragCoordinates; // get index\n\n    var dragIndex = dragCoordinates ? getItemIndexByPosition(root, dragCoordinates) : null; // available space on horizontal axis\n\n    var horizontalSpace = root.rect.element.width; // only draw children that have dimensions\n\n    var visibleChildren = root.childViews.filter(function (child) {\n      return child.rect.outer.height;\n    }); // sort based on current active items\n\n    var children = root.query('GET_ACTIVE_ITEMS').map(function (item) {\n      return visibleChildren.find(function (child) {\n        return child.id === item.id;\n      });\n    }).filter(function (item) {\n      return item;\n    }); // add index is used to reserve the dropped/added item index till the actual item is rendered\n\n    var addIndex = root.ref.addIndex || null; // add index no longer needed till possibly next draw\n\n    root.ref.addIndex = null;\n    var dragIndexOffset = 0;\n    var removeIndexOffset = 0;\n    var addIndexOffset = 0;\n    if (children.length === 0) return;\n    var childRect = children[0].rect.element;\n    var itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    var itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    var itemWidth = childRect.width + itemHorizontalMargin;\n    var itemHeight = childRect.height + itemVerticalMargin;\n    var itemsPerRow = Math.round(horizontalSpace / itemWidth); // stack\n\n    if (itemsPerRow === 1) {\n      var offsetY = 0;\n      var dragOffset = 0;\n      children.forEach(function (child, index) {\n        if (dragIndex) {\n          var dist = index - dragIndex;\n\n          if (dist === -2) {\n            dragOffset = -itemVerticalMargin * 0.25;\n          } else if (dist === -1) {\n            dragOffset = -itemVerticalMargin * 0.75;\n          } else if (dist === 0) {\n            dragOffset = itemVerticalMargin * 0.75;\n          } else if (dist === 1) {\n            dragOffset = itemVerticalMargin * 0.25;\n          } else {\n            dragOffset = 0;\n          }\n        }\n\n        if (shouldOptimize) {\n          child.translateX = null;\n          child.translateY = null;\n        }\n\n        if (!child.markedForRemoval) {\n          moveItem(child, 0, offsetY + dragOffset);\n        }\n\n        var itemHeight = child.rect.element.height + itemVerticalMargin;\n        var visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);\n        offsetY += visualHeight;\n      });\n    } // grid\n    else {\n        var prevX = 0;\n        var prevY = 0;\n        children.forEach(function (child, index) {\n          if (index === dragIndex) {\n            dragIndexOffset = 1;\n          }\n\n          if (index === addIndex) {\n            addIndexOffset += 1;\n          }\n\n          if (child.markedForRemoval && child.opacity < 0.5) {\n            removeIndexOffset -= 1;\n          }\n\n          var visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;\n          var indexX = visualIndex % itemsPerRow;\n          var indexY = Math.floor(visualIndex / itemsPerRow);\n          var offsetX = indexX * itemWidth;\n          var offsetY = indexY * itemHeight;\n          var vectorX = Math.sign(offsetX - prevX);\n          var vectorY = Math.sign(offsetY - prevY);\n          prevX = offsetX;\n          prevY = offsetY;\n          if (child.markedForRemoval) return;\n\n          if (shouldOptimize) {\n            child.translateX = null;\n            child.translateY = null;\n          }\n\n          moveItem(child, offsetX, offsetY, vectorX, vectorY);\n        });\n      }\n  };\n  /**\n   * Filters actions that are meant specifically for a certain child of the list\n   * @param child\n   * @param actions\n   */\n\n\n  var filterSetItemActions = function filterSetItemActions(child, actions) {\n    return actions.filter(function (action) {\n      // if action has an id, filter out actions that don't have this child id\n      if (action.data && action.data.id) {\n        return child.id === action.data.id;\n      } // allow all other actions\n\n\n      return true;\n    });\n  };\n\n  var list = createView({\n    create: create$8,\n    write: write$5,\n    tag: 'ul',\n    name: 'list',\n    didWriteView: function didWriteView(_ref5) {\n      var root = _ref5.root;\n      root.childViews.filter(function (view) {\n        return view.markedForRemoval && view.opacity === 0 && view.resting;\n      }).forEach(function (view) {\n        view._destroy();\n\n        root.removeChildView(view);\n      });\n    },\n    filterFrameActionsForChild: filterSetItemActions,\n    mixins: {\n      apis: ['dragCoordinates']\n    }\n  });\n\n  var create$9 = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.ref.list = root.appendChildView(root.createChildView(list));\n    props.dragCoordinates = null;\n    props.overflowing = false;\n  };\n\n  var storeDragCoordinates = function storeDragCoordinates(_ref2) {\n    var root = _ref2.root,\n        props = _ref2.props,\n        action = _ref2.action;\n    if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;\n    props.dragCoordinates = {\n      left: action.position.scopeLeft - root.ref.list.rect.element.left,\n      top: action.position.scopeTop - (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop)\n    };\n  };\n\n  var clearDragCoordinates = function clearDragCoordinates(_ref3) {\n    var props = _ref3.props;\n    props.dragCoordinates = null;\n  };\n\n  var route$3 = createRoute({\n    DID_DRAG: storeDragCoordinates,\n    DID_END_DRAG: clearDragCoordinates\n  });\n\n  var write$6 = function write(_ref4) {\n    var root = _ref4.root,\n        props = _ref4.props,\n        actions = _ref4.actions; // route actions\n\n    route$3({\n      root: root,\n      props: props,\n      actions: actions\n    }); // current drag position\n\n    root.ref.list.dragCoordinates = props.dragCoordinates; // if currently overflowing but no longer received overflow\n\n    if (props.overflowing && !props.overflow) {\n      props.overflowing = false; // reset overflow state\n\n      root.element.dataset.state = '';\n      root.height = null;\n    } // if is not overflowing currently but does receive overflow value\n\n\n    if (props.overflow) {\n      var newHeight = Math.round(props.overflow);\n\n      if (newHeight !== root.height) {\n        props.overflowing = true;\n        root.element.dataset.state = 'overflow';\n        root.height = newHeight;\n      }\n    }\n  };\n\n  var listScroller = createView({\n    create: create$9,\n    write: write$6,\n    name: 'list-scroller',\n    mixins: {\n      apis: ['overflow', 'dragCoordinates'],\n      styles: ['height', 'translateY'],\n      animations: {\n        translateY: 'spring'\n      }\n    }\n  });\n\n  var attrToggle = function attrToggle(element, name, state) {\n    var enabledValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n    if (state) {\n      attr(element, name, enabledValue);\n    } else {\n      element.removeAttribute(name);\n    }\n  };\n\n  var resetFileInput = function resetFileInput(input) {\n    // no value, no need to reset\n    if (!input || input.value === '') {\n      return;\n    }\n\n    try {\n      // for modern browsers\n      input.value = '';\n    } catch (err) {} // for IE10\n\n\n    if (input.value) {\n      // quickly append input to temp form and reset form\n      var form = createElement$1('form');\n      var parentNode = input.parentNode;\n      var ref = input.nextSibling;\n      form.appendChild(input);\n      form.reset(); // re-inject input where it originally was\n\n      if (ref) {\n        parentNode.insertBefore(input, ref);\n      } else {\n        parentNode.appendChild(input);\n      }\n    }\n  };\n\n  var create$a = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // set id so can be referenced from outside labels\n\n    root.element.id = 'filepond--browser-' + props.id; // set name of element (is removed when a value is set)\n\n    attr(root.element, 'name', root.query('GET_NAME')); // we have to link this element to the status element\n\n    attr(root.element, 'aria-controls', 'filepond--assistant-' + props.id); // set label, we use labelled by as otherwise the screenreader does not read the \"browse\" text in the label (as it has tabindex: 0)\n\n    attr(root.element, 'aria-labelledby', 'filepond--drop-label-' + props.id); // handle changes to the input field\n\n    root.ref.handleChange = function (e) {\n      if (!root.element.value) {\n        return;\n      } // extract files\n\n\n      var files = Array.from(root.element.files); // we add a little delay so the OS file select window can move out of the way before we add our file\n\n      setTimeout(function () {\n        // load files\n        props.onload(files); // reset input, it's just for exposing a method to drop files, should not retain any state\n\n        resetFileInput(root.element);\n      }, 250);\n    };\n\n    root.element.addEventListener('change', root.ref.handleChange);\n  };\n\n  var setAcceptedFileTypes = function setAcceptedFileTypes(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n    attrToggle(root.element, 'accept', !!action.value, action.value ? action.value.join(',') : '');\n  };\n\n  var toggleAllowMultiple = function toggleAllowMultiple(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n    attrToggle(root.element, 'multiple', action.value);\n  };\n\n  var toggleDisabled = function toggleDisabled(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action;\n    var isDisabled = root.query('GET_DISABLED');\n    var doesAllowBrowse = root.query('GET_ALLOW_BROWSE');\n    var disableField = isDisabled || !doesAllowBrowse;\n    attrToggle(root.element, 'disabled', disableField);\n  };\n\n  var toggleRequired = function toggleRequired(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action; // want to remove required, always possible\n\n    if (!action.value) {\n      attrToggle(root.element, 'required', false);\n    } // if want to make required, only possible when zero items\n    else if (root.query('GET_TOTAL_ITEMS') === 0) {\n        attrToggle(root.element, 'required', true);\n      }\n  };\n\n  var setCaptureMethod = function setCaptureMethod(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    attrToggle(root.element, 'capture', !!action.value, action.value === true ? '' : action.value);\n  };\n\n  var updateRequiredStatus = function updateRequiredStatus(_ref7) {\n    var root = _ref7.root;\n    var element = root.element; // always remove the required attribute when more than zero items\n\n    if (root.query('GET_TOTAL_ITEMS') > 0) {\n      attrToggle(element, 'required', false);\n      attrToggle(element, 'name', false);\n    } else {\n      // add name attribute\n      attrToggle(element, 'name', true, root.query('GET_NAME')); // remove any validation messages\n\n      var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n\n      if (shouldCheckValidity) {\n        element.setCustomValidity('');\n      } // we only add required if the field has been deemed required\n\n\n      if (root.query('GET_REQUIRED')) {\n        attrToggle(element, 'required', true);\n      }\n    }\n  };\n\n  var updateFieldValidityStatus = function updateFieldValidityStatus(_ref8) {\n    var root = _ref8.root;\n    var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');\n    if (!shouldCheckValidity) return;\n    root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));\n  };\n\n  var browser = createView({\n    tag: 'input',\n    name: 'browser',\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    attributes: {\n      type: 'file'\n    },\n    create: create$a,\n    destroy: function destroy(_ref9) {\n      var root = _ref9.root;\n      root.element.removeEventListener('change', root.ref.handleChange);\n    },\n    write: createRoute({\n      DID_LOAD_ITEM: updateRequiredStatus,\n      DID_REMOVE_ITEM: updateRequiredStatus,\n      DID_THROW_ITEM_INVALID: updateFieldValidityStatus,\n      DID_SET_DISABLED: toggleDisabled,\n      DID_SET_ALLOW_BROWSE: toggleDisabled,\n      DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,\n      DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,\n      DID_SET_CAPTURE_METHOD: setCaptureMethod,\n      DID_SET_REQUIRED: toggleRequired\n    })\n  });\n  var Key = {\n    ENTER: 13,\n    SPACE: 32\n  };\n\n  var create$b = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // create the label and link it to the file browser\n\n    var label = createElement$1('label');\n    attr(label, 'for', 'filepond--browser-' + props.id); // use for labeling file input (aria-labelledby on file input)\n\n    attr(label, 'id', 'filepond--drop-label-' + props.id); // hide the label for screenreaders, the input element will read the contents of the label when it's focussed. If we don't set aria-hidden the screenreader will also navigate the contents of the label separately from the input.\n\n    attr(label, 'aria-hidden', 'true'); // handle keys\n\n    label.addEventListener('keydown', function (e) {\n      var isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;\n      if (!isActivationKey) return; // stops from triggering the element a second time\n\n      e.preventDefault(); // click link (will then in turn activate file input)\n\n      root.ref.label.click();\n    });\n    root.element.addEventListener('click', function (e) {\n      var isLabelClick = e.target === label || label.contains(e.target); // don't want to click twice\n\n      if (isLabelClick) return; // click link (will then in turn activate file input)\n\n      root.ref.label.click();\n    }); // update\n\n    updateLabelValue(label, props.caption); // add!\n\n    root.appendChild(label);\n    root.ref.label = label;\n  };\n\n  var updateLabelValue = function updateLabelValue(label, value) {\n    label.innerHTML = value;\n    var clickable = label.querySelector('.filepond--label-action');\n\n    if (clickable) {\n      attr(clickable, 'tabindex', '0');\n    }\n\n    return value;\n  };\n\n  var dropLabel = createView({\n    name: 'drop-label',\n    ignoreRect: true,\n    create: create$b,\n    write: createRoute({\n      DID_SET_LABEL_IDLE: function DID_SET_LABEL_IDLE(_ref2) {\n        var root = _ref2.root,\n            action = _ref2.action;\n        updateLabelValue(root.ref.label, action.value);\n      }\n    }),\n    mixins: {\n      styles: ['opacity', 'translateX', 'translateY'],\n      animations: {\n        opacity: {\n          type: 'tween',\n          duration: 150\n        },\n        translateX: 'spring',\n        translateY: 'spring'\n      }\n    }\n  });\n  var blob = createView({\n    name: 'drip-blob',\n    ignoreRect: true,\n    mixins: {\n      styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],\n      animations: {\n        scaleX: 'spring',\n        scaleY: 'spring',\n        translateX: 'spring',\n        translateY: 'spring',\n        opacity: {\n          type: 'tween',\n          duration: 250\n        }\n      }\n    }\n  });\n\n  var addBlob = function addBlob(_ref) {\n    var root = _ref.root;\n    var centerX = root.rect.element.width * 0.5;\n    var centerY = root.rect.element.height * 0.5;\n    root.ref.blob = root.appendChildView(root.createChildView(blob, {\n      opacity: 0,\n      scaleX: 2.5,\n      scaleY: 2.5,\n      translateX: centerX,\n      translateY: centerY\n    }));\n  };\n\n  var moveBlob = function moveBlob(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n\n    if (!root.ref.blob) {\n      addBlob({\n        root: root\n      });\n      return;\n    }\n\n    root.ref.blob.translateX = action.position.scopeLeft;\n    root.ref.blob.translateY = action.position.scopeTop;\n    root.ref.blob.scaleX = 1;\n    root.ref.blob.scaleY = 1;\n    root.ref.blob.opacity = 1;\n  };\n\n  var hideBlob = function hideBlob(_ref3) {\n    var root = _ref3.root;\n\n    if (!root.ref.blob) {\n      return;\n    }\n\n    root.ref.blob.opacity = 0;\n  };\n\n  var explodeBlob = function explodeBlob(_ref4) {\n    var root = _ref4.root;\n\n    if (!root.ref.blob) {\n      return;\n    }\n\n    root.ref.blob.scaleX = 2.5;\n    root.ref.blob.scaleY = 2.5;\n    root.ref.blob.opacity = 0;\n  };\n\n  var write$7 = function write(_ref5) {\n    var root = _ref5.root,\n        props = _ref5.props,\n        actions = _ref5.actions;\n    route$4({\n      root: root,\n      props: props,\n      actions: actions\n    });\n    var blob = root.ref.blob;\n\n    if (actions.length === 0 && blob && blob.opacity === 0) {\n      root.removeChildView(blob);\n      root.ref.blob = null;\n    }\n  };\n\n  var route$4 = createRoute({\n    DID_DRAG: moveBlob,\n    DID_DROP: explodeBlob,\n    DID_END_DRAG: hideBlob\n  });\n  var drip = createView({\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    name: 'drip',\n    write: write$7\n  });\n\n  var getRootNode = function getRootNode(element) {\n    return 'getRootNode' in element ? element.getRootNode() : document;\n  };\n\n  var images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\n  var text$1 = ['css', 'csv', 'html', 'txt'];\n  var apps = ['rtf', 'pdf', 'json'];\n  var map = {\n    zip: 'zip|compressed',\n    epub: 'application/epub+zip'\n  };\n\n  var guesstimateMimeType = function guesstimateMimeType() {\n    var extension = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    extension = extension.toLowerCase();\n\n    if (images.includes(extension)) {\n      return 'image/' + (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension);\n    }\n\n    if (text$1.includes(extension)) {\n      return 'text/' + extension;\n    }\n\n    return map[extension] || null;\n  };\n\n  var requestDataTransferItems = function requestDataTransferItems(dataTransfer) {\n    return new Promise(function (resolve, reject) {\n      // try to get links from transfer, if found, we'll exit immidiately\n      // as only one link can be dragged at once\n      var links = getLinks(dataTransfer);\n\n      if (links.length) {\n        resolve(links);\n        return;\n      } // try to get files from the transfer\n\n\n      getFiles(dataTransfer).then(resolve);\n    });\n  };\n  /**\n   * Extracts files from a DataTransfer object\n   */\n\n\n  var getFiles = function getFiles(dataTransfer) {\n    return new Promise(function (resolve, reject) {\n      // get the transfer items as promises\n      var promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : []). // only keep file system items (files and directories)\n      filter(function (item) {\n        return isFileSystemItem(item);\n      }) // map each item to promise\n      .map(function (item) {\n        return getFilesFromItem(item);\n      }); // if is empty, see if we can extract some info from the files property as a fallback\n\n      if (!promisedFiles.length) {\n        // TODO: test for directories (should not be allowed)\n        // Use FileReader, problem is that the files property gets lost in the process\n        resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);\n        return;\n      } // done!\n\n\n      Promise.all(promisedFiles).then(function (returendFileGroups) {\n        // flatten groups\n        var files = [];\n        returendFileGroups.forEach(function (group) {\n          files.push.apply(files, group);\n        }); // done (filter out empty files)!\n\n        resolve(files.filter(function (file) {\n          return file;\n        }));\n      });\n    });\n  };\n\n  var isFileSystemItem = function isFileSystemItem(item) {\n    if (isEntry(item)) {\n      var entry = getAsEntry(item);\n\n      if (entry) {\n        return entry.isFile || entry.isDirectory;\n      }\n    }\n\n    return item.kind === 'file';\n  };\n\n  var getFilesFromItem = function getFilesFromItem(item) {\n    return new Promise(function (resolve, reject) {\n      if (isDirectoryEntry(item)) {\n        getFilesInDirectory(getAsEntry(item)).then(resolve);\n        return;\n      }\n\n      resolve([item.getAsFile()]);\n    });\n  };\n\n  var getFilesInDirectory = function getFilesInDirectory(entry) {\n    return new Promise(function (resolve, reject) {\n      var files = []; // the total entries to read\n\n      var totalFilesFound = 0; // the recursive function\n\n      var readEntries = function readEntries(dirEntry) {\n        var directoryReader = dirEntry.createReader();\n        directoryReader.readEntries(function (entries) {\n          entries.forEach(function (entry) {\n            // recursively read more directories\n            if (entry.isDirectory) {\n              readEntries(entry);\n            } else {\n              // read as file\n              totalFilesFound++;\n              entry.file(function (file) {\n                files.push(correctMissingFileType(file));\n\n                if (totalFilesFound === files.length) {\n                  resolve(files);\n                }\n              });\n            }\n          });\n        });\n      }; // go!\n\n\n      readEntries(entry);\n    });\n  };\n\n  var correctMissingFileType = function correctMissingFileType(file) {\n    if (file.type.length) return file;\n    var date = file.lastModifiedDate;\n    var name = file.name;\n    file = file.slice(0, file.size, guesstimateMimeType(getExtensionFromFilename(file.name)));\n    file.name = name;\n    file.lastModifiedDate = date;\n    return file;\n  };\n\n  var isDirectoryEntry = function isDirectoryEntry(item) {\n    return isEntry(item) && (getAsEntry(item) || {}).isDirectory;\n  };\n\n  var isEntry = function isEntry(item) {\n    return 'webkitGetAsEntry' in item;\n  };\n\n  var getAsEntry = function getAsEntry(item) {\n    return item.webkitGetAsEntry();\n  };\n  /**\n   * Extracts links from a DataTransfer object\n   */\n\n\n  var getLinks = function getLinks(dataTransfer) {\n    var links = [];\n\n    try {\n      // look in meta data property\n      links = getLinksFromTransferMetaData(dataTransfer);\n\n      if (links.length) {\n        return links;\n      }\n\n      links = getLinksFromTransferURLData(dataTransfer);\n    } catch (e) {// nope nope nope (probably IE trouble)\n    }\n\n    return links;\n  };\n\n  var getLinksFromTransferURLData = function getLinksFromTransferURLData(dataTransfer) {\n    var data = dataTransfer.getData('url');\n\n    if (typeof data === 'string' && data.length) {\n      return [data];\n    }\n\n    return [];\n  };\n\n  var getLinksFromTransferMetaData = function getLinksFromTransferMetaData(dataTransfer) {\n    var data = dataTransfer.getData('text/html');\n\n    if (typeof data === 'string' && data.length) {\n      var matches = data.match(/src\\s*=\\s*\"(.+?)\"/);\n\n      if (matches) {\n        return [matches[1]];\n      }\n    }\n\n    return [];\n  };\n\n  var dragNDropObservers = [];\n\n  var eventPosition = function eventPosition(e) {\n    return {\n      pageLeft: e.pageX,\n      pageTop: e.pageY,\n      scopeLeft: e.offsetX || e.layerX,\n      scopeTop: e.offsetY || e.layerY\n    };\n  };\n\n  var createDragNDropClient = function createDragNDropClient(element, scopeToObserve, filterElement) {\n    var observer = getDragNDropObserver(scopeToObserve);\n    var client = {\n      element: element,\n      filterElement: filterElement,\n      state: null,\n      ondrop: function ondrop() {},\n      onenter: function onenter() {},\n      ondrag: function ondrag() {},\n      onexit: function onexit() {},\n      onload: function onload() {},\n      allowdrop: function allowdrop() {}\n    };\n    client.destroy = observer.addListener(client);\n    return client;\n  };\n\n  var getDragNDropObserver = function getDragNDropObserver(element) {\n    // see if already exists, if so, return\n    var observer = dragNDropObservers.find(function (item) {\n      return item.element === element;\n    });\n\n    if (observer) {\n      return observer;\n    } // create new observer, does not yet exist for this element\n\n\n    var newObserver = createDragNDropObserver(element);\n    dragNDropObservers.push(newObserver);\n    return newObserver;\n  };\n\n  var createDragNDropObserver = function createDragNDropObserver(element) {\n    var clients = [];\n    var routes = {\n      dragenter: dragenter,\n      dragover: dragover,\n      dragleave: dragleave,\n      drop: drop\n    };\n    var handlers = {};\n    forin(routes, function (event, createHandler) {\n      handlers[event] = createHandler(element, clients);\n      element.addEventListener(event, handlers[event], false);\n    });\n    var observer = {\n      element: element,\n      addListener: function addListener(client) {\n        // add as client\n        clients.push(client); // return removeListener function\n\n        return function () {\n          // remove client\n          clients.splice(clients.indexOf(client), 1); // if no more clients, clean up observer\n\n          if (clients.length === 0) {\n            dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);\n            forin(routes, function (event) {\n              element.removeEventListener(event, handlers[event], false);\n            });\n          }\n        };\n      }\n    };\n    return observer;\n  };\n\n  var elementFromPoint = function elementFromPoint(root, point) {\n    if (!('elementFromPoint' in root)) {\n      root = document;\n    }\n\n    return root.elementFromPoint(point.x, point.y);\n  };\n\n  var isEventTarget = function isEventTarget(e, target) {\n    // get root\n    var root = getRootNode(target); // get element at position\n    // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document\n\n    var elementAtPosition = elementFromPoint(root, {\n      x: e.pageX - window.pageXOffset,\n      y: e.pageY - window.pageYOffset\n    }); // test if target is the element or if one of its children is\n\n    return elementAtPosition === target || target.contains(elementAtPosition);\n  };\n\n  var initialTarget = null;\n\n  var setDropEffect = function setDropEffect(dataTransfer, effect) {\n    // is in try catch as IE11 will throw error if not\n    try {\n      dataTransfer.dropEffect = effect;\n    } catch (e) {}\n  };\n\n  var dragenter = function dragenter(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      initialTarget = e.target;\n      clients.forEach(function (client) {\n        var element = client.element,\n            onenter = client.onenter;\n\n        if (isEventTarget(e, element)) {\n          client.state = 'enter'; // fire enter event\n\n          onenter(eventPosition(e));\n        }\n      });\n    };\n  };\n\n  var dragover = function dragover(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      var dataTransfer = e.dataTransfer;\n      requestDataTransferItems(dataTransfer).then(function (items) {\n        var overDropTarget = false;\n        clients.some(function (client) {\n          var filterElement = client.filterElement,\n              element = client.element,\n              onenter = client.onenter,\n              onexit = client.onexit,\n              ondrag = client.ondrag,\n              allowdrop = client.allowdrop; // by default we can drop\n\n          setDropEffect(dataTransfer, 'copy'); // allow transfer of these items\n\n          var allowsTransfer = allowdrop(items); // only used when can be dropped on page\n\n          if (!allowsTransfer) {\n            setDropEffect(dataTransfer, 'none');\n            return;\n          } // targetting this client\n\n\n          if (isEventTarget(e, element)) {\n            overDropTarget = true; // had no previous state, means we are entering this client\n\n            if (client.state === null) {\n              client.state = 'enter';\n              onenter(eventPosition(e));\n              return;\n            } // now over element (no matter if it allows the drop or not)\n\n\n            client.state = 'over'; // needs to allow transfer\n\n            if (filterElement && !allowsTransfer) {\n              setDropEffect(dataTransfer, 'none');\n              return;\n            } // dragging\n\n\n            ondrag(eventPosition(e));\n          } else {\n            // should be over an element to drop\n            if (filterElement && !overDropTarget) {\n              setDropEffect(dataTransfer, 'none');\n            } // might have just left this client?\n\n\n            if (client.state) {\n              client.state = null;\n              onexit(eventPosition(e));\n            }\n          }\n        });\n      });\n    };\n  };\n\n  var drop = function drop(root, clients) {\n    return function (e) {\n      e.preventDefault();\n      var dataTransfer = e.dataTransfer;\n      requestDataTransferItems(dataTransfer).then(function (items) {\n        clients.forEach(function (client) {\n          var filterElement = client.filterElement,\n              element = client.element,\n              ondrop = client.ondrop,\n              onexit = client.onexit,\n              allowdrop = client.allowdrop;\n          client.state = null;\n          var allowsTransfer = allowdrop(items); // no transfer for this client\n\n          if (!allowsTransfer) {\n            onexit(eventPosition(e));\n            return;\n          } // if we're filtering on element we need to be over the element to drop\n\n\n          if (filterElement && !isEventTarget(e, element)) {\n            return;\n          }\n\n          ondrop(eventPosition(e), items);\n        });\n      });\n    };\n  };\n\n  var dragleave = function dragleave(root, clients) {\n    return function (e) {\n      if (initialTarget !== e.target) {\n        return;\n      }\n\n      clients.forEach(function (client) {\n        var onexit = client.onexit;\n        client.state = null;\n        onexit(eventPosition(e));\n      });\n    };\n  };\n\n  var createHopper = function createHopper(scope, validateItems, options) {\n    // is now hopper scope\n    scope.classList.add('filepond--hopper'); // shortcuts\n\n    var catchesDropsOnPage = options.catchesDropsOnPage,\n        requiresDropOnElement = options.requiresDropOnElement; // create a dnd client\n\n    var client = createDragNDropClient(scope, catchesDropsOnPage ? document.documentElement : scope, requiresDropOnElement); // current client state\n\n    var lastState = '';\n    var currentState = ''; // determines if a file may be dropped\n\n    client.allowdrop = function (items) {\n      // TODO: if we can, throw error to indicate the items cannot by dropped\n      return validateItems(items);\n    };\n\n    client.ondrop = function (position, items) {\n      if (!validateItems(items)) {\n        api.ondragend(position);\n        return;\n      }\n\n      currentState = 'drag-drop';\n      api.onload(items, position);\n    };\n\n    client.ondrag = function (position) {\n      api.ondrag(position);\n    };\n\n    client.onenter = function (position) {\n      currentState = 'drag-over';\n      api.ondragstart(position);\n    };\n\n    client.onexit = function (position) {\n      currentState = 'drag-exit';\n      api.ondragend(position);\n    };\n\n    var api = {\n      updateHopperState: function updateHopperState() {\n        if (lastState !== currentState) {\n          scope.dataset.hopperState = currentState;\n          lastState = currentState;\n        }\n      },\n      onload: function onload() {},\n      ondragstart: function ondragstart() {},\n      ondrag: function ondrag() {},\n      ondragend: function ondragend() {},\n      destroy: function destroy() {\n        // destroy client\n        client.destroy();\n      }\n    };\n    return api;\n  };\n\n  var listening = false;\n  var listeners$1 = [];\n\n  var handlePaste = function handlePaste(e) {\n    requestDataTransferItems(e.clipboardData).then(function (files) {\n      // no files received\n      if (!files.length) {\n        return;\n      } // notify listeners of received files\n\n\n      listeners$1.forEach(function (listener) {\n        return listener(files);\n      });\n    });\n  };\n\n  var listen = function listen(cb) {\n    // can't add twice\n    if (listeners$1.includes(cb)) {\n      return;\n    } // add initial listener\n\n\n    listeners$1.push(cb); // setup paste listener for entire page\n\n    if (listening) {\n      return;\n    }\n\n    listening = true;\n    document.addEventListener('paste', handlePaste);\n  };\n\n  var unlisten = function unlisten(listener) {\n    arrayRemove(listeners$1, listeners$1.indexOf(listener)); // clean up\n\n    if (listeners$1.length === 0) {\n      document.removeEventListener('paste', handlePaste);\n      listening = false;\n    }\n  };\n\n  var createPaster = function createPaster() {\n    var cb = function cb(files) {\n      api.onload(files);\n    };\n\n    var api = {\n      destroy: function destroy() {\n        unlisten(cb);\n      },\n      onload: function onload() {}\n    };\n    listen(cb);\n    return api;\n  };\n  /**\n   * Creates the file view\n   */\n\n\n  var create$c = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props;\n    root.element.id = 'filepond--assistant-' + props.id;\n    attr(root.element, 'role', 'status');\n    attr(root.element, 'aria-live', 'polite');\n    attr(root.element, 'aria-relevant', 'additions');\n  };\n\n  var addFilesNotificationTimeout = null;\n  var notificationClearTimeout = null;\n  var filenames = [];\n\n  var assist = function assist(root, message) {\n    root.element.textContent = message;\n  };\n\n  var clear$1 = function clear(root) {\n    root.element.textContent = '';\n  };\n\n  var listModified = function listModified(root, filename, label) {\n    var total = root.query('GET_TOTAL_ITEMS');\n    assist(root, label + ' ' + filename + ', ' + total + ' ' + (total === 1 ? root.query('GET_LABEL_FILE_COUNT_SINGULAR') : root.query('GET_LABEL_FILE_COUNT_PLURAL'))); // clear group after set amount of time so the status is not read twice\n\n    clearTimeout(notificationClearTimeout);\n    notificationClearTimeout = setTimeout(function () {\n      clear$1(root);\n    }, 1500);\n  };\n\n  var isUsingFilePond = function isUsingFilePond(root) {\n    return root.element.parentNode.contains(document.activeElement);\n  };\n\n  var itemAdded = function itemAdded(_ref2) {\n    var root = _ref2.root,\n        action = _ref2.action;\n\n    if (!isUsingFilePond(root)) {\n      return;\n    }\n\n    root.element.textContent = '';\n    var item = root.query('GET_ITEM', action.id);\n    filenames.push(item.filename);\n    clearTimeout(addFilesNotificationTimeout);\n    addFilesNotificationTimeout = setTimeout(function () {\n      listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));\n      filenames.length = 0;\n    }, 750);\n  };\n\n  var itemRemoved = function itemRemoved(_ref3) {\n    var root = _ref3.root,\n        action = _ref3.action;\n\n    if (!isUsingFilePond(root)) {\n      return;\n    }\n\n    var item = action.item;\n    listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));\n  };\n\n  var itemProcessed = function itemProcessed(_ref4) {\n    var root = _ref4.root,\n        action = _ref4.action; // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename;\n    var label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');\n    assist(root, filename + ' ' + label);\n  };\n\n  var itemProcessedUndo = function itemProcessedUndo(_ref5) {\n    var root = _ref5.root,\n        action = _ref5.action;\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename;\n    var label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');\n    assist(root, filename + ' ' + label);\n  };\n\n  var itemError = function itemError(_ref6) {\n    var root = _ref6.root,\n        action = _ref6.action;\n    var item = root.query('GET_ITEM', action.id);\n    var filename = item.filename; // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file\n\n    assist(root, action.status.main + ' ' + filename + ' ' + action.status.sub);\n  };\n\n  var assistant = createView({\n    create: create$c,\n    ignoreRect: true,\n    ignoreRectUpdate: true,\n    write: createRoute({\n      DID_LOAD_ITEM: itemAdded,\n      DID_REMOVE_ITEM: itemRemoved,\n      DID_COMPLETE_ITEM_PROCESSING: itemProcessed,\n      DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,\n      DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,\n      DID_THROW_ITEM_REMOVE_ERROR: itemError,\n      DID_THROW_ITEM_LOAD_ERROR: itemError,\n      DID_THROW_ITEM_INVALID: itemError,\n      DID_THROW_ITEM_PROCESSING_ERROR: itemError\n    }),\n    tag: 'span',\n    name: 'assistant'\n  });\n\n  var toCamels = function toCamels(string) {\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n    return string.replace(new RegExp(separator + '.', 'g'), function (sub) {\n      return sub.charAt(1).toUpperCase();\n    });\n  };\n\n  var debounce = function debounce(func) {\n    var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n    var immidiateOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var last = Date.now();\n    var timeout = null;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      clearTimeout(timeout);\n      var dist = Date.now() - last;\n\n      var fn = function fn() {\n        last = Date.now();\n        func.apply(void 0, args);\n      };\n\n      if (dist < interval) {\n        // we need to delay by the difference between interval and dist\n        // for example: if distance is 10 ms and interval is 16 ms,\n        // we need to wait an additional 6ms before calling the function)\n        if (!immidiateOnly) {\n          timeout = setTimeout(fn, interval - dist);\n        }\n      } else {\n        // go!\n        fn();\n      }\n    };\n  };\n\n  var MAX_FILES_LIMIT = 1000000;\n\n  var create$d = function create(_ref) {\n    var root = _ref.root,\n        props = _ref.props; // Add id\n\n    var id = root.query('GET_ID');\n\n    if (id) {\n      root.element.id = id;\n    } // Add className\n\n\n    var className = root.query('GET_CLASS_NAME');\n\n    if (className) {\n      className.split(' ').forEach(function (name) {\n        root.element.classList.add(name);\n      });\n    } // Field label\n\n\n    root.ref.label = root.appendChildView(root.createChildView(dropLabel, Object.assign({}, props, {\n      translateY: null,\n      caption: root.query('GET_LABEL_IDLE')\n    }))); // List of items\n\n    root.ref.list = root.appendChildView(root.createChildView(listScroller, {\n      translateY: null\n    })); // Background panel\n\n    root.ref.panel = root.appendChildView(root.createChildView(panel, {\n      name: 'panel-root'\n    })); // Assistant notifies assistive tech when content changes\n\n    root.ref.assistant = root.appendChildView(root.createChildView(assistant, Object.assign({}, props))); // Measure (tests if fixed height was set)\n    // DOCTYPE needs to be set for this to work\n\n    root.ref.measure = createElement$1('div');\n    root.ref.measure.style.height = '100%';\n    root.element.appendChild(root.ref.measure); // information on the root height or fixed height status\n\n    root.ref.bounds = null; // apply initial style properties\n\n    root.query('GET_STYLES').filter(function (style) {\n      return !isEmpty(style.value);\n    }).map(function (_ref2) {\n      var name = _ref2.name,\n          value = _ref2.value;\n      root.element.dataset[name] = value;\n    }); // determine if width changed\n\n    root.ref.widthPrevious = null;\n    root.ref.widthUpdated = debounce(function () {\n      root.dispatch('DID_RESIZE_ROOT');\n    }, 250); // history of updates\n\n    root.ref.previousAspectRatio = null;\n    root.ref.updateHistory = [];\n  };\n\n  var write$8 = function write(_ref3) {\n    var root = _ref3.root,\n        props = _ref3.props,\n        actions = _ref3.actions;\n\n    if (root.rect.element.width !== root.ref.widthPrevious) {\n      root.ref.widthPrevious = root.rect.element.width;\n      root.ref.widthUpdated();\n    } // get box bounds, we do this only once\n\n\n    var bounds = root.ref.bounds;\n\n    if (!bounds) {\n      bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root); // destroy measure element\n\n      root.element.removeChild(root.ref.measure);\n      root.ref.measure = null;\n    } // route actions\n\n\n    route$5({\n      root: root,\n      props: props,\n      actions: actions\n    }); // apply style properties\n\n    actions.filter(function (action) {\n      return /^DID_SET_STYLE_/.test(action.type);\n    }).filter(function (action) {\n      return !isEmpty(action.data.value);\n    }).map(function (_ref4) {\n      var type = _ref4.type,\n          data = _ref4.data;\n      var name = toCamels(type.substr(8).toLowerCase(), '_');\n      root.element.dataset[name] = data.value;\n      root.invalidateLayout();\n    }); // get quick references to various high level parts of the upload tool\n\n    var _root$ref = root.ref,\n        hopper = _root$ref.hopper,\n        label = _root$ref.label,\n        list = _root$ref.list,\n        panel = _root$ref.panel; // sets correct state to hopper scope\n\n    if (hopper) {\n      hopper.updateHopperState();\n    } // bool to indicate if we're full or not\n\n\n    var aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');\n    var isMultiItem = root.query('GET_ALLOW_MULTIPLE');\n    var totalItems = root.query('GET_TOTAL_ITEMS');\n    var maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;\n    var atMaxCapacity = totalItems === maxItems; // action used to add item\n\n    var addAction = actions.find(function (action) {\n      return action.type === 'DID_ADD_ITEM';\n    }); // if reached max capacity and we've just reached it\n\n    if (atMaxCapacity && addAction) {\n      // get interaction type\n      var interactionMethod = addAction.data.interactionMethod; // hide label\n\n      label.opacity = 0;\n\n      if (isMultiItem) {\n        label.translateY = -40;\n      } else {\n        if (interactionMethod === InteractionMethod.API) {\n          label.translateX = 40;\n        } else if (interactionMethod === InteractionMethod.BROWSE) {\n          label.translateY = 40;\n        } else {\n          label.translateY = 30;\n        }\n      }\n    } else if (!atMaxCapacity) {\n      label.opacity = 1;\n      label.translateX = 0;\n      label.translateY = 0;\n    }\n\n    var listItemMargin = calculateListItemMargin(root);\n    var listHeight = calculateListHeight(root);\n    var labelHeight = label.rect.element.height;\n    var currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;\n    var listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;\n    var listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;\n    var visualHeight = currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;\n    var boundsHeight = currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom; // link list to label bottom position\n\n    list.translateY = Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;\n\n    if (aspectRatio) {\n      // fixed aspect ratio\n      // calculate height based on width\n      var width = root.rect.element.width;\n      var height = width * aspectRatio; // clear history if aspect ratio has changed\n\n      if (aspectRatio !== root.ref.previousAspectRatio) {\n        root.ref.previousAspectRatio = aspectRatio;\n        root.ref.updateHistory = [];\n      } // remember this width\n\n\n      var history = root.ref.updateHistory;\n      history.push(width);\n      var MAX_BOUNCES = 2;\n\n      if (history.length > MAX_BOUNCES * 2) {\n        var l = history.length;\n        var bottom = l - 10;\n        var bounces = 0;\n\n        for (var i = l; i >= bottom; i--) {\n          if (history[i] === history[i - 2]) {\n            bounces++;\n          }\n\n          if (bounces >= MAX_BOUNCES) {\n            // dont adjust height\n            return;\n          }\n        }\n      } // fix height of panel so it adheres to aspect ratio\n\n\n      panel.scalable = false;\n      panel.height = height; // available height for list\n\n      var listAvailableHeight = // the height of the panel minus the label height\n      height - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0);\n\n      if (listHeight.visual > listAvailableHeight) {\n        list.overflow = listAvailableHeight;\n      } else {\n        list.overflow = null;\n      } // set container bounds (so pushes siblings downwards)\n\n\n      root.height = height;\n    } else if (bounds.fixedHeight) {\n      // fixed height\n      // fix height of panel\n      panel.scalable = false; // available height for list\n\n      var _listAvailableHeight = // the height of the panel minus the label height\n      bounds.fixedHeight - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0); // set list height\n\n\n      if (listHeight.visual > _listAvailableHeight) {\n        list.overflow = _listAvailableHeight;\n      } else {\n        list.overflow = null;\n      } // no need to set container bounds as these are handles by CSS fixed height\n\n    } else if (bounds.cappedHeight) {\n      // max-height\n      // not a fixed height panel\n      var isCappedHeight = visualHeight >= bounds.cappedHeight;\n      var panelHeight = Math.min(bounds.cappedHeight, visualHeight);\n      panel.scalable = true;\n      panel.height = isCappedHeight ? panelHeight : panelHeight - listItemMargin.top - listItemMargin.bottom; // available height for list\n\n      var _listAvailableHeight2 = // the height of the panel minus the label height\n      panelHeight - currentLabelHeight - ( // the room we leave open between the end of the list and the panel bottom\n      listMarginBottom - listItemMargin.bottom) - ( // if we're full we need to leave some room between the top of the panel and the list\n      atMaxCapacity ? listMarginTop : 0); // set list height (if is overflowing)\n\n\n      if (visualHeight > bounds.cappedHeight && listHeight.visual > _listAvailableHeight2) {\n        list.overflow = _listAvailableHeight2;\n      } else {\n        list.overflow = null;\n      } // set container bounds (so pushes siblings downwards)\n\n\n      root.height = Math.min(bounds.cappedHeight, boundsHeight - listItemMargin.top - listItemMargin.bottom);\n    } else {\n      // flexible height\n      // not a fixed height panel\n      var itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;\n      panel.scalable = true;\n      panel.height = Math.max(labelHeight, visualHeight - itemMargin); // set container bounds (so pushes siblings downwards)\n\n      root.height = Math.max(labelHeight, boundsHeight - itemMargin);\n    }\n  };\n\n  var calculateListItemMargin = function calculateListItemMargin(root) {\n    var item = root.ref.list.childViews[0].childViews[0];\n    return item ? {\n      top: item.rect.element.marginTop,\n      bottom: item.rect.element.marginBottom\n    } : {\n      top: 0,\n      bottom: 0\n    };\n  };\n\n  var calculateListHeight = function calculateListHeight(root) {\n    var visual = 0;\n    var bounds = 0; // get file list reference\n\n    var scrollList = root.ref.list;\n    var itemList = scrollList.childViews[0];\n    var children = itemList.childViews; // no children, done!\n\n    if (children.length === 0) return {\n      visual: visual,\n      bounds: bounds\n    };\n    var horizontalSpace = itemList.rect.element.width;\n    var dragIndex = getItemIndexByPosition(itemList, scrollList.dragCoordinates);\n    var childRect = children[0].rect.element;\n    var itemVerticalMargin = childRect.marginTop + childRect.marginBottom;\n    var itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;\n    var itemWidth = childRect.width + itemHorizontalMargin;\n    var itemHeight = childRect.height + itemVerticalMargin;\n    var newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;\n    var removedItem = children.find(function (child) {\n      return child.markedForRemoval && child.opacity < 0.45;\n    }) ? -1 : 0;\n    var verticalItemCount = children.length + newItem + removedItem;\n    var itemsPerRow = Math.round(horizontalSpace / itemWidth); // stack\n\n    if (itemsPerRow === 1) {\n      children.forEach(function (item) {\n        var height = item.rect.element.height + itemVerticalMargin;\n        bounds += height;\n        visual += height * item.opacity;\n      });\n    } // grid\n    else {\n        bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;\n        visual = bounds;\n      }\n\n    return {\n      visual: visual,\n      bounds: bounds\n    };\n  };\n\n  var calculateRootBoundingBoxHeight = function calculateRootBoundingBoxHeight(root) {\n    var height = root.ref.measureHeight || null;\n    var cappedHeight = parseInt(root.style.maxHeight, 10) || null;\n    var fixedHeight = height === 0 ? null : height;\n    return {\n      cappedHeight: cappedHeight,\n      fixedHeight: fixedHeight\n    };\n  };\n\n  var exceedsMaxFiles = function exceedsMaxFiles(root, items) {\n    var allowReplace = root.query('GET_ALLOW_REPLACE');\n    var allowMultiple = root.query('GET_ALLOW_MULTIPLE');\n    var totalItems = root.query('GET_TOTAL_ITEMS');\n    var maxItems = root.query('GET_MAX_FILES'); // total amount of items being dragged\n\n    var totalBrowseItems = items.length; // if does not allow multiple items and dragging more than one item\n\n    if (!allowMultiple && totalBrowseItems > 1) {\n      return true;\n    } // limit max items to one if not allowed to drop multiple items\n\n\n    maxItems = allowMultiple ? maxItems : allowReplace ? maxItems : 1; // no more room?\n\n    var hasMaxItems = isInt(maxItems);\n\n    if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {\n      root.dispatch('DID_THROW_MAX_FILES', {\n        source: items,\n        error: createResponse('warning', 0, 'Max files')\n      });\n      return true;\n    }\n\n    return false;\n  };\n\n  var getDragIndex = function getDragIndex(list, position) {\n    var itemList = list.childViews[0];\n    return getItemIndexByPosition(itemList, {\n      left: position.scopeLeft - itemList.rect.element.left,\n      top: position.scopeTop - (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop)\n    });\n  };\n  /**\n   * Enable or disable file drop functionality\n   */\n\n\n  var toggleDrop = function toggleDrop(root) {\n    var isAllowed = root.query('GET_ALLOW_DROP');\n    var isDisabled = root.query('GET_DISABLED');\n    var enabled = isAllowed && !isDisabled;\n\n    if (enabled && !root.ref.hopper) {\n      var hopper = createHopper(root.element, function (items) {\n        // these files don't fit so stop here\n        if (exceedsMaxFiles(root, items)) return false; // allow quick validation of dropped items\n\n        var beforeDropFile = root.query('GET_BEFORE_DROP_FILE') || function () {\n          return true;\n        }; // all items should be validated by all filters as valid\n\n\n        var dropValidation = root.query('GET_DROP_VALIDATION');\n        return dropValidation ? items.every(function (item) {\n          return applyFilters('ALLOW_HOPPER_ITEM', item, {\n            query: root.query\n          }).every(function (result) {\n            return result === true;\n          }) && beforeDropFile(item);\n        }) : true;\n      }, {\n        catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),\n        requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT')\n      });\n\n      hopper.onload = function (items, position) {\n        root.dispatch('ADD_ITEMS', {\n          items: items,\n          index: getDragIndex(root.ref.list, position),\n          interactionMethod: InteractionMethod.DROP\n        });\n        root.dispatch('DID_DROP', {\n          position: position\n        });\n        root.dispatch('DID_END_DRAG', {\n          position: position\n        });\n      };\n\n      hopper.ondragstart = function (position) {\n        root.dispatch('DID_START_DRAG', {\n          position: position\n        });\n      };\n\n      hopper.ondrag = debounce(function (position) {\n        root.dispatch('DID_DRAG', {\n          position: position\n        });\n      });\n\n      hopper.ondragend = function (position) {\n        root.dispatch('DID_END_DRAG', {\n          position: position\n        });\n      };\n\n      root.ref.hopper = hopper;\n      root.ref.drip = root.appendChildView(root.createChildView(drip));\n    } else if (!enabled && root.ref.hopper) {\n      root.ref.hopper.destroy();\n      root.ref.hopper = null;\n      root.removeChildView(root.ref.drip);\n    }\n  };\n  /**\n   * Enable or disable browse functionality\n   */\n\n\n  var toggleBrowse = function toggleBrowse(root, props) {\n    var isAllowed = root.query('GET_ALLOW_BROWSE');\n    var isDisabled = root.query('GET_DISABLED');\n    var enabled = isAllowed && !isDisabled;\n\n    if (enabled && !root.ref.browser) {\n      root.ref.browser = root.appendChildView(root.createChildView(browser, Object.assign({}, props, {\n        onload: function onload(items) {\n          // these files don't fit so stop here\n          if (exceedsMaxFiles(root, items)) return false; // add items!\n\n          root.dispatch('ADD_ITEMS', {\n            items: items,\n            index: -1,\n            interactionMethod: InteractionMethod.BROWSE\n          });\n        }\n      })), 0);\n    } else if (!enabled && root.ref.browser) {\n      root.removeChildView(root.ref.browser);\n      root.ref.browser = null;\n    }\n  };\n  /**\n   * Enable or disable paste functionality\n   */\n\n\n  var togglePaste = function togglePaste(root) {\n    var isAllowed = root.query('GET_ALLOW_PASTE');\n    var isDisabled = root.query('GET_DISABLED');\n    var enabled = isAllowed && !isDisabled;\n\n    if (enabled && !root.ref.paster) {\n      root.ref.paster = createPaster();\n\n      root.ref.paster.onload = function (items) {\n        root.dispatch('ADD_ITEMS', {\n          items: items,\n          index: getDragIndex(root.ref.list, position),\n          interactionMethod: InteractionMethod.PASTE\n        });\n      };\n    } else if (!enabled && root.ref.paster) {\n      root.ref.paster.destroy();\n      root.ref.paster = null;\n    }\n  };\n  /**\n   * Route actions\n   */\n\n\n  var route$5 = createRoute({\n    DID_SET_ALLOW_BROWSE: function DID_SET_ALLOW_BROWSE(_ref5) {\n      var root = _ref5.root,\n          props = _ref5.props;\n      toggleBrowse(root, props);\n    },\n    DID_SET_ALLOW_DROP: function DID_SET_ALLOW_DROP(_ref6) {\n      var root = _ref6.root;\n      toggleDrop(root);\n    },\n    DID_SET_ALLOW_PASTE: function DID_SET_ALLOW_PASTE(_ref7) {\n      var root = _ref7.root;\n      togglePaste(root);\n    },\n    DID_SET_DISABLED: function DID_SET_DISABLED(_ref8) {\n      var root = _ref8.root,\n          props = _ref8.props;\n      toggleDrop(root);\n      togglePaste(root);\n      toggleBrowse(root, props);\n      var isDisabled = root.query('GET_DISABLED');\n\n      if (isDisabled) {\n        root.element.dataset.disabled = 'disabled';\n      } else {\n        delete root.element.dataset.disabled;\n      }\n    }\n  });\n  var root = createView({\n    name: 'root',\n    read: function read(_ref9) {\n      var root = _ref9.root;\n\n      if (root.ref.measure) {\n        root.ref.measureHeight = root.ref.measure.offsetHeight;\n      }\n    },\n    create: create$d,\n    write: write$8,\n    destroy: function destroy(_ref10) {\n      var root = _ref10.root;\n\n      if (root.ref.paster) {\n        root.ref.paster.destroy();\n      }\n\n      if (root.ref.hopper) {\n        root.ref.hopper.destroy();\n      }\n    },\n    mixins: {\n      styles: ['height']\n    }\n  }); // creates the app\n\n  var createApp = function createApp() {\n    var initialOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // let element\n\n    var originalElement = null; // get default options\n\n    var defaultOptions = getOptions(); // create the data store, this will contain all our app info\n\n    var store = createStore( // initial state (should be serializable)\n    createInitialState(defaultOptions), // queries\n    [queries, createOptionQueries(defaultOptions)], // action handlers\n    [actions, createOptionActions(defaultOptions)]); // set initial options\n\n    store.dispatch('SET_OPTIONS', {\n      options: initialOptions\n    }); // kick thread if visibility changes\n\n    var visibilityHandler = function visibilityHandler() {\n      if (document.hidden) return;\n      store.dispatch('KICK');\n    };\n\n    document.addEventListener('visibilitychange', visibilityHandler); // re-render on window resize start and finish\n\n    var resizeDoneTimer = null;\n    var isResizing = false;\n    var isResizingHorizontally = false;\n    var initialWindowWidth = null;\n    var currentWindowWidth = null;\n\n    var resizeHandler = function resizeHandler() {\n      if (!isResizing) {\n        isResizing = true;\n      }\n\n      clearTimeout(resizeDoneTimer);\n      resizeDoneTimer = setTimeout(function () {\n        isResizing = false;\n        initialWindowWidth = null;\n        currentWindowWidth = null;\n\n        if (isResizingHorizontally) {\n          isResizingHorizontally = false;\n          store.dispatch('DID_STOP_RESIZE');\n        }\n      }, 500);\n    };\n\n    window.addEventListener('resize', resizeHandler); // render initial view\n\n    var view = root(store, {\n      id: getUniqueId()\n    }); //\n    // PRIVATE API -------------------------------------------------------------------------------------\n    //\n\n    var isResting = false;\n    var isHidden = false;\n    var readWriteApi = {\n      // necessary for update loop\n\n      /**\n       * Reads from dom (never call manually)\n       * @private\n       */\n      _read: function _read() {\n        // test if we're resizing horizontally\n        // TODO: see if we can optimize this by measuring root rect\n        if (isResizing) {\n          currentWindowWidth = window.innerWidth;\n\n          if (!initialWindowWidth) {\n            initialWindowWidth = currentWindowWidth;\n          }\n\n          if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {\n            store.dispatch('DID_START_RESIZE');\n            isResizingHorizontally = true;\n          }\n        } // if resting, no need to read as numbers will still all be correct\n\n\n        if (isResting) return; // read view data\n\n        view._read(); // if root is hidden\n\n\n        isHidden = view.rect.element.hidden;\n      },\n\n      /**\n       * Writes to dom (never call manually)\n       * @private\n       */\n      _write: function _write(ts) {\n        // don't do anything while hidden\n        if (isHidden) return; // get all actions from store\n\n        var actions = store.processActionQueue() // filter out set actions (these will automatically trigger DID_SET)\n        .filter(function (action) {\n          return !/^SET_/.test(action.type);\n        }); // if was idling and no actions stop here\n\n        if (isResting && !actions.length) return; // some actions might trigger events\n\n        routeActionsToEvents(actions); // update the view\n\n        isResting = view._write(ts, actions, isResizingHorizontally); // will clean up all archived items\n\n        removeReleasedItems(store.query('GET_ITEMS')); // now idling\n\n        if (isResting) {\n          store.processDispatchQueue();\n        }\n      }\n    }; //\n    // EXPOSE EVENTS -------------------------------------------------------------------------------------\n    //\n\n    var createEvent = function createEvent(name) {\n      return function (data) {\n        // create default event\n        var event = {\n          type: name\n        }; // no data to add\n\n        if (!data) {\n          return event;\n        } // copy relevant props\n\n\n        if (data.hasOwnProperty('error')) {\n          event.error = data.error ? Object.assign({}, data.error) : null;\n        }\n\n        if (data.status) {\n          event.status = Object.assign({}, data.status);\n        }\n\n        if (data.file) {\n          event.output = data.file;\n        } // only source is available, else add item if possible\n\n\n        if (data.source) {\n          event.file = data.source;\n        } else if (data.item || data.id) {\n          var item = data.item ? data.item : store.query('GET_ITEM', data.id);\n          event.file = item ? createItemAPI(item) : null;\n        } // map all items in a possible items array\n\n\n        if (data.items) {\n          event.items = data.items.map(createItemAPI);\n        } // if this is a progress event add the progress amount\n\n\n        if (/progress/.test(name)) {\n          event.progress = data.progress;\n        }\n\n        return event;\n      };\n    };\n\n    var eventRoutes = {\n      DID_DESTROY: createEvent('destroy'),\n      DID_INIT: createEvent('init'),\n      DID_THROW_MAX_FILES: createEvent('warning'),\n      DID_START_ITEM_LOAD: createEvent('addfilestart'),\n      DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),\n      DID_LOAD_ITEM: createEvent('addfile'),\n      DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],\n      DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],\n      DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],\n      DID_PREPARE_OUTPUT: createEvent('preparefile'),\n      DID_START_ITEM_PROCESSING: createEvent('processfilestart'),\n      DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),\n      DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),\n      DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),\n      DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),\n      DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),\n      DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],\n      DID_REMOVE_ITEM: createEvent('removefile'),\n      DID_UPDATE_ITEMS: createEvent('updatefiles'),\n      DID_ACTIVATE_ITEM: createEvent('activatefile')\n    };\n\n    var exposeEvent = function exposeEvent(event) {\n      // create event object to be dispatched\n      var detail = Object.assign({\n        pond: exports\n      }, event);\n      delete detail.type;\n      view.element.dispatchEvent(new CustomEvent('FilePond:' + event.type, {\n        // event info\n        detail: detail,\n        // event behaviour\n        bubbles: true,\n        cancelable: true,\n        composed: true // triggers listeners outside of shadow root\n\n      })); // event object to params used for `on()` event handlers and callbacks `oninit()`\n\n      var params = []; // if is possible error event, make it the first param\n\n      if (event.hasOwnProperty('error')) {\n        params.push(event.error);\n      } // file is always section\n\n\n      if (event.hasOwnProperty('file')) {\n        params.push(event.file);\n      } // append other props\n\n\n      var filtered = ['type', 'error', 'file'];\n      Object.keys(event).filter(function (key) {\n        return !filtered.includes(key);\n      }).forEach(function (key) {\n        return params.push(event[key]);\n      }); // on(type, () => { })\n\n      exports.fire.apply(exports, [event.type].concat(params)); // oninit = () => {}\n\n      var handler = store.query('GET_ON' + event.type.toUpperCase());\n\n      if (handler) {\n        handler.apply(void 0, params);\n      }\n    };\n\n    var routeActionsToEvents = function routeActionsToEvents(actions) {\n      if (!actions.length) {\n        return;\n      }\n\n      actions.forEach(function (action) {\n        if (!eventRoutes[action.type]) {\n          return;\n        }\n\n        var routes = eventRoutes[action.type];\n        (Array.isArray(routes) ? routes : [routes]).forEach(function (route) {\n          setTimeout(function () {\n            exposeEvent(route(action.data));\n          }, 0);\n        });\n      });\n    }; //\n    // PUBLIC API -------------------------------------------------------------------------------------\n    //\n\n\n    var setOptions = function setOptions(options) {\n      return store.dispatch('SET_OPTIONS', {\n        options: options\n      });\n    };\n\n    var getFile = function getFile(query) {\n      return store.query('GET_ACTIVE_ITEM', query);\n    };\n\n    var addFile = function addFile(source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Promise(function (resolve, reject) {\n        addFiles([{\n          source: source,\n          options: options\n        }], {\n          index: options.index\n        }).then(function (items) {\n          return resolve(items && items[0]);\n        }).catch(reject);\n      });\n    };\n\n    var removeFile = function removeFile(query) {\n      // request item removal\n      store.dispatch('REMOVE_ITEM', {\n        query: query\n      }); // see if item has been removed\n\n      return store.query('GET_ACTIVE_ITEM', query) === null;\n    };\n\n    var addFiles = function addFiles() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return new Promise(function (resolve, reject) {\n        var sources = [];\n        var options = {}; // user passed a sources array\n\n        if (isArray(args[0])) {\n          sources.push.apply(sources, args[0]);\n          Object.assign(options, args[1] || {});\n        } else {\n          // user passed sources as arguments, last one might be options object\n          var lastArgument = args[args.length - 1];\n\n          if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {\n            Object.assign(options, args.pop());\n          } // add rest to sources\n\n\n          sources.push.apply(sources, args);\n        }\n\n        store.dispatch('ADD_ITEMS', {\n          items: sources,\n          index: options.index,\n          interactionMethod: InteractionMethod.API,\n          success: resolve,\n          failure: reject\n        });\n      });\n    };\n\n    var getFiles = function getFiles() {\n      return store.query('GET_ACTIVE_ITEMS');\n    };\n\n    var processFile = function processFile(query) {\n      return new Promise(function (resolve, reject) {\n        store.dispatch('REQUEST_ITEM_PROCESSING', {\n          query: query,\n          success: function success(item) {\n            resolve(item);\n          },\n          failure: function failure(error) {\n            reject(error);\n          }\n        });\n      });\n    };\n\n    var processFiles = function processFiles() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var queries = Array.isArray(args[0]) ? args[0] : args;\n\n      if (!queries.length) {\n        var files = getFiles().filter(function (item) {\n          return item.status !== ItemStatus.PROCESSING && item.status !== ItemStatus.PROCESSING_COMPLETE && item.status !== ItemStatus.PROCESSING_REVERT_ERROR;\n        });\n        return Promise.all(files.map(processFile));\n      }\n\n      return Promise.all(queries.map(processFile));\n    };\n\n    var removeFiles = function removeFiles() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var queries = Array.isArray(args[0]) ? args[0] : args;\n      var files = getFiles();\n\n      if (!queries.length) {\n        return Promise.all(files.map(removeFile));\n      } // when removing by index the indexes shift after each file removal so we need to convert indexes to ids\n\n\n      var mappedQueries = queries.map(function (query) {\n        return isNumber(query) ? files[query] ? files[query].id : null : query;\n      }).filter(function (query) {\n        return query;\n      });\n      return mappedQueries.map(removeFile);\n    };\n\n    var exports = Object.assign({}, on(), readWriteApi, createOptionAPI(store, defaultOptions), {\n      /**\n       * Override options defined in options object\n       * @param options\n       */\n      setOptions: setOptions,\n\n      /**\n       * Load the given file\n       * @param source - the source of the file (either a File, base64 data uri or url)\n       * @param options - object, { index: 0 }\n       */\n      addFile: addFile,\n\n      /**\n       * Load the given files\n       * @param sources - the sources of the files to load\n       * @param options - object, { index: 0 }\n       */\n      addFiles: addFiles,\n\n      /**\n       * Returns the file objects matching the given query\n       * @param query { string, number, null }\n       */\n      getFile: getFile,\n\n      /**\n       * Upload file with given name\n       * @param query { string, number, null  }\n       */\n      processFile: processFile,\n\n      /**\n       * Removes a file by its name\n       * @param query { string, number, null  }\n       */\n      removeFile: removeFile,\n\n      /**\n       * Returns all files (wrapped in public api)\n       */\n      getFiles: getFiles,\n\n      /**\n       * Starts uploading all files\n       */\n      processFiles: processFiles,\n\n      /**\n       * Clears all files from the files list\n       */\n      removeFiles: removeFiles,\n\n      /**\n       * Sort list of files\n       */\n      sort: function sort(compare) {\n        return store.dispatch('SORT', {\n          compare: compare\n        });\n      },\n\n      /**\n       * Browse the file system for a file\n       */\n      browse: function browse() {\n        // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)\n        var input = view.element.querySelector('input[type=file]');\n\n        if (input) {\n          input.click();\n        }\n      },\n\n      /**\n       * Destroys the app\n       */\n      destroy: function destroy() {\n        // request destruction\n        exports.fire('destroy', view.element); // stop active processes (file uploads, fetches, stuff like that)\n        // loop over items and depending on states call abort for ongoing processes\n\n        store.dispatch('ABORT_ALL'); // destroy view\n\n        view._destroy(); // stop listening to resize\n\n\n        window.removeEventListener('resize', resizeHandler); // stop listening to the visiblitychange event\n\n        document.addEventListener('visibilitychange', visibilityHandler); // dispatch destroy\n\n        store.dispatch('DID_DESTROY');\n      },\n\n      /**\n       * Inserts the plugin before the target element\n       */\n      insertBefore: function insertBefore$1(element) {\n        return insertBefore(view.element, element);\n      },\n\n      /**\n       * Inserts the plugin after the target element\n       */\n      insertAfter: function insertAfter$1(element) {\n        return insertAfter(view.element, element);\n      },\n\n      /**\n       * Appends the plugin to the target element\n       */\n      appendTo: function appendTo(element) {\n        return element.appendChild(view.element);\n      },\n\n      /**\n       * Replaces an element with the app\n       */\n      replaceElement: function replaceElement(element) {\n        // insert the app before the element\n        insertBefore(view.element, element); // remove the original element\n\n        element.parentNode.removeChild(element); // remember original element\n\n        originalElement = element;\n      },\n\n      /**\n       * Restores the original element\n       */\n      restoreElement: function restoreElement() {\n        if (!originalElement) {\n          return; // no element to restore\n        } // restore original element\n\n\n        insertAfter(originalElement, view.element); // remove our element\n\n        view.element.parentNode.removeChild(view.element); // remove reference\n\n        originalElement = null;\n      },\n\n      /**\n       * Returns true if the app root is attached to given element\n       * @param element\n       */\n      isAttachedTo: function isAttachedTo(element) {\n        return view.element === element || originalElement === element;\n      },\n\n      /**\n       * Returns the root element\n       */\n      element: {\n        get: function get() {\n          return view.element;\n        }\n      },\n\n      /**\n       * Returns the current pond status\n       */\n      status: {\n        get: function get() {\n          return store.query('GET_STATUS');\n        }\n      }\n    }); // Done!\n\n    store.dispatch('DID_INIT'); // create actual api object\n\n    return createObject(exports);\n  };\n\n  var createAppObject = function createAppObject() {\n    var customOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // default options\n\n    var defaultOptions = {};\n    forin(getOptions(), function (key, value) {\n      defaultOptions[key] = value[0];\n    }); // set app options\n\n    var app = createApp(Object.assign({}, defaultOptions, customOptions)); // return the plugin instance\n\n    return app;\n  };\n\n  var lowerCaseFirstLetter = function lowerCaseFirstLetter(string) {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  };\n\n  var attributeNameToPropertyName = function attributeNameToPropertyName(attributeName) {\n    return toCamels(attributeName.replace(/^data-/, ''));\n  };\n\n  var mapObject = function mapObject(object, propertyMap) {\n    // remove unwanted\n    forin(propertyMap, function (selector, mapping) {\n      forin(object, function (property, value) {\n        // create regexp shortcut\n        var selectorRegExp = new RegExp(selector); // tests if\n\n        var matches = selectorRegExp.test(property); // no match, skip\n\n        if (!matches) {\n          return;\n        } // if there's a mapping, the original property is always removed\n\n\n        delete object[property]; // should only remove, we done!\n\n        if (mapping === false) {\n          return;\n        } // move value to new property\n\n\n        if (isString(mapping)) {\n          object[mapping] = value;\n          return;\n        } // move to group\n\n\n        var group = mapping.group;\n\n        if (isObject(mapping) && !object[group]) {\n          object[group] = {};\n        }\n\n        object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;\n      }); // do submapping\n\n      if (mapping.mapping) {\n        mapObject(object[mapping.group], mapping.mapping);\n      }\n    });\n  };\n\n  var getAttributesAsObject = function getAttributesAsObject(node) {\n    var attributeMapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // turn attributes into object\n\n    var attributes = [];\n    forin(node.attributes, function (index) {\n      attributes.push(node.attributes[index]);\n    });\n    var output = attributes.filter(function (attribute) {\n      return attribute.name;\n    }).reduce(function (obj, attribute) {\n      var value = attr(node, attribute.name);\n      obj[attributeNameToPropertyName(attribute.name)] = value === attribute.name ? true : value;\n      return obj;\n    }, {}); // do mapping of object properties\n\n    mapObject(output, attributeMapping);\n    return output;\n  };\n\n  var createAppAtElement = function createAppAtElement(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // how attributes of the input element are mapped to the options for the plugin\n\n    var attributeMapping = {\n      // translate to other name\n      '^class$': 'className',\n      '^multiple$': 'allowMultiple',\n      '^capture$': 'captureMethod',\n      // group under single property\n      '^server': {\n        group: 'server',\n        mapping: {\n          '^process': {\n            group: 'process'\n          },\n          '^revert': {\n            group: 'revert'\n          },\n          '^fetch': {\n            group: 'fetch'\n          },\n          '^restore': {\n            group: 'restore'\n          },\n          '^load': {\n            group: 'load'\n          }\n        }\n      },\n      // don't include in object\n      '^type$': false,\n      '^files$': false\n    }; // add additional option translators\n\n    applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping); // create final options object by setting options object and then overriding options supplied on element\n\n    var mergedOptions = Object.assign({}, options);\n    var attributeOptions = getAttributesAsObject(element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element, attributeMapping); // merge with options object\n\n    Object.keys(attributeOptions).forEach(function (key) {\n      if (isObject(attributeOptions[key])) {\n        if (!isObject(mergedOptions[key])) {\n          mergedOptions[key] = {};\n        }\n\n        Object.assign(mergedOptions[key], attributeOptions[key]);\n      } else {\n        mergedOptions[key] = attributeOptions[key];\n      }\n    }); // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields\n    // these will then be automatically set to the initial files\n\n    mergedOptions.files = (options.files || []).concat(Array.from(element.querySelectorAll('input:not([type=file])')).map(function (input) {\n      return {\n        source: input.value,\n        options: {\n          type: input.dataset.type\n        }\n      };\n    })); // build plugin\n\n    var app = createAppObject(mergedOptions); // add already selected files\n\n    if (element.files) {\n      Array.from(element.files).forEach(function (file) {\n        app.addFile(file);\n      });\n    } // replace the target element\n\n\n    app.replaceElement(element); // expose\n\n    return app;\n  }; // if an element is passed, we create the instance at that element, if not, we just create an up object\n\n\n  var createApp$1 = function createApp() {\n    return isNode(arguments.length <= 0 ? undefined : arguments[0]) ? createAppAtElement.apply(void 0, arguments) : createAppObject.apply(void 0, arguments);\n  };\n\n  var PRIVATE_METHODS = ['fire', '_read', '_write'];\n\n  var createAppAPI = function createAppAPI(app) {\n    var api = {};\n    copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);\n    return api;\n  };\n  /**\n   * Replaces placeholders in given string with replacements\n   * @param string - \"Foo {bar}\"\"\n   * @param replacements - { \"bar\": 10 }\n   */\n\n\n  var replaceInString = function replaceInString(string, replacements) {\n    return string.replace(/(?:{([a-zA-Z]+)})/g, function (match, group) {\n      return replacements[group];\n    });\n  };\n\n  var createWorker = function createWorker(fn) {\n    var workerBlob = new Blob(['(', fn.toString(), ')()'], {\n      type: 'application/javascript'\n    });\n    var workerURL = URL.createObjectURL(workerBlob);\n    var worker = new Worker(workerURL);\n    return {\n      transfer: function transfer(message, cb) {},\n      post: function post(message, cb, transferList) {\n        var id = getUniqueId();\n\n        worker.onmessage = function (e) {\n          if (e.data.id === id) {\n            cb(e.data.message);\n          }\n        };\n\n        worker.postMessage({\n          id: id,\n          message: message\n        }, transferList);\n      },\n      terminate: function terminate() {\n        worker.terminate();\n        URL.revokeObjectURL(workerURL);\n      }\n    };\n  };\n\n  var loadImage = function loadImage(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n\n      img.onload = function () {\n        resolve(img);\n      };\n\n      img.onerror = function (e) {\n        reject(e);\n      };\n\n      img.src = url;\n    });\n  };\n\n  var renameFile = function renameFile(file, name) {\n    var renamedFile = file.slice(0, file.size, file.type);\n    renamedFile.lastModifiedDate = file.lastModifiedDate;\n    renamedFile.name = name;\n    return renamedFile;\n  };\n\n  var copyFile = function copyFile(file) {\n    return renameFile(file, file.name);\n  }; // already registered plugins (can't register twice)\n\n\n  var registeredPlugins = []; // pass utils to plugin\n\n  var createAppPlugin = function createAppPlugin(plugin) {\n    // already registered\n    if (registeredPlugins.includes(plugin)) {\n      return;\n    } // remember this plugin\n\n\n    registeredPlugins.push(plugin); // setup!\n\n    var pluginOutline = plugin({\n      addFilter: addFilter,\n      utils: {\n        Type: Type,\n        forin: forin,\n        isString: isString,\n        isFile: isFile,\n        toNaturalFileSize: toNaturalFileSize,\n        replaceInString: replaceInString,\n        getExtensionFromFilename: getExtensionFromFilename,\n        getFilenameWithoutExtension: getFilenameWithoutExtension,\n        guesstimateMimeType: guesstimateMimeType,\n        getFileFromBlob: getFileFromBlob,\n        getFilenameFromURL: getFilenameFromURL,\n        createRoute: createRoute,\n        createWorker: createWorker,\n        createView: createView,\n        createItemAPI: createItemAPI,\n        loadImage: loadImage,\n        copyFile: copyFile,\n        renameFile: renameFile,\n        createBlob: createBlob,\n        applyFilterChain: applyFilterChain,\n        text: text,\n        getNumericAspectRatioFromString: getNumericAspectRatioFromString\n      },\n      views: {\n        fileActionButton: fileActionButton\n      }\n    }); // add plugin options to default options\n\n    extendDefaultOptions(pluginOutline.options);\n  }; // feature detection used by supported() method\n\n\n  var isOperaMini = function isOperaMini() {\n    return Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\n  };\n\n  var hasPromises = function hasPromises() {\n    return 'Promise' in window;\n  };\n\n  var hasBlobSlice = function hasBlobSlice() {\n    return 'slice' in Blob.prototype;\n  };\n\n  var hasCreateObjectURL = function hasCreateObjectURL() {\n    return 'URL' in window && 'createObjectURL' in window.URL;\n  };\n\n  var hasVisibility = function hasVisibility() {\n    return 'visibilityState' in document;\n  };\n\n  var hasTiming = function hasTiming() {\n    return 'performance' in window;\n  }; // iOS 8.x\n\n\n  var isBrowser = function isBrowser() {\n    return typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  };\n\n  var supported = function () {\n    // Runs immidiately and then remembers result for subsequent calls\n    var isSupported = // Has to be a browser\n    isBrowser() && // Can't run on Opera Mini due to lack of everything\n    !isOperaMini() && // Require these APIs to feature detect a modern browser\n    hasVisibility() && hasPromises() && hasBlobSlice() && hasCreateObjectURL() && hasTiming();\n    return function () {\n      return isSupported;\n    };\n  }();\n  /**\n   * Plugin internal state (over all instances)\n   */\n\n\n  var state = {\n    // active app instances, used to redraw the apps and to find the later\n    apps: []\n  }; // plugin name\n\n  var name = 'filepond';\n  /**\n   * Public Plugin methods\n   */\n\n  var fn = function fn() {};\n\n  exports.Status = {};\n  exports.FileStatus = {};\n  exports.FileOrigin = {};\n  exports.OptionTypes = {};\n  exports.create = fn;\n  exports.destroy = fn;\n  exports.parse = fn;\n  exports.find = fn;\n  exports.registerPlugin = fn;\n  exports.getOptions = fn;\n  exports.setOptions = fn; // if not supported, no API\n\n  if (supported()) {\n    // start painter and fire load event\n    createPainter(function () {\n      state.apps.forEach(function (app) {\n        return app._read();\n      });\n    }, function (ts) {\n      state.apps.forEach(function (app) {\n        return app._write(ts);\n      });\n    }); // fire loaded event so we know when FilePond is available\n\n    var dispatch = function dispatch() {\n      // let others know we have area ready\n      document.dispatchEvent(new CustomEvent('FilePond:loaded', {\n        detail: {\n          supported: supported,\n          create: exports.create,\n          destroy: exports.destroy,\n          parse: exports.parse,\n          find: exports.find,\n          registerPlugin: exports.registerPlugin,\n          setOptions: exports.setOptions\n        }\n      })); // clean up event\n\n      document.removeEventListener('DOMContentLoaded', dispatch);\n    };\n\n    if (document.readyState !== 'loading') {\n      // move to back of execution queue, FilePond should have been exported by then\n      setTimeout(function () {\n        return dispatch();\n      }, 0);\n    } else {\n      document.addEventListener('DOMContentLoaded', dispatch);\n    } // updates the OptionTypes object based on the current options\n\n\n    var updateOptionTypes = function updateOptionTypes() {\n      return forin(getOptions(), function (key, value) {\n        exports.OptionTypes[key] = value[1];\n      });\n    };\n\n    exports.Status = Object.assign({}, Status);\n    exports.FileOrigin = Object.assign({}, FileOrigin);\n    exports.FileStatus = Object.assign({}, ItemStatus);\n    exports.OptionTypes = {};\n    updateOptionTypes(); // create method, creates apps and adds them to the app array\n\n    exports.create = function create() {\n      var app = createApp$1.apply(void 0, arguments);\n      app.on('destroy', exports.destroy);\n      state.apps.push(app);\n      return createAppAPI(app);\n    }; // destroys apps and removes them from the app array\n\n\n    exports.destroy = function destroy(hook) {\n      // returns true if the app was destroyed successfully\n      var indexToRemove = state.apps.findIndex(function (app) {\n        return app.isAttachedTo(hook);\n      });\n\n      if (indexToRemove >= 0) {\n        // remove from apps\n        var app = state.apps.splice(indexToRemove, 1)[0]; // restore original dom element\n\n        app.restoreElement();\n        return true;\n      }\n\n      return false;\n    }; // parses the given context for plugins (does not include the context element itself)\n\n\n    exports.parse = function parse(context) {\n      // get all possible hooks\n      var matchedHooks = Array.from(context.querySelectorAll('.' + name)); // filter out already active hooks\n\n      var newHooks = matchedHooks.filter(function (newHook) {\n        return !state.apps.find(function (app) {\n          return app.isAttachedTo(newHook);\n        });\n      }); // create new instance for each hook\n\n      return newHooks.map(function (hook) {\n        return exports.create(hook);\n      });\n    }; // returns an app based on the given element hook\n\n\n    exports.find = function find(hook) {\n      var app = state.apps.find(function (app) {\n        return app.isAttachedTo(hook);\n      });\n\n      if (!app) {\n        return null;\n      }\n\n      return createAppAPI(app);\n    }; // adds a plugin extension\n\n\n    exports.registerPlugin = function registerPlugin() {\n      for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n        plugins[_key] = arguments[_key];\n      } // register plugins\n\n\n      plugins.forEach(createAppPlugin); // update OptionTypes, each plugin might have extended the default options\n\n      updateOptionTypes();\n    };\n\n    exports.getOptions = function getOptions$1() {\n      var opts = {};\n      forin(getOptions(), function (key, value) {\n        opts[key] = value[0];\n      });\n      return opts;\n    };\n\n    exports.setOptions = function setOptions$1(opts) {\n      if (isObject(opts)) {\n        // update existing plugins\n        state.apps.forEach(function (app) {\n          app.setOptions(opts);\n        }); // override defaults\n\n        setOptions(opts);\n      } // return new options\n\n\n      return exports.getOptions();\n    };\n  }\n\n  exports.supported = supported;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}